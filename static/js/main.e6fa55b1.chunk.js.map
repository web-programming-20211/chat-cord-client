{"version":3,"sources":["firebase/index.js","Components/Message/Input.js","Components/Emoji/Emoji.js","Components/Emoji/EmojiIcon.js","service/fetch.js","service/reaction.js","Components/Message/Dialog.js","Components/Message/Dialogs.js","service/room.js","Components/Room/CurrentRoom.js","Components/ChatHeader.js","service/message.js","Components/ChatWindow.js","Components/Intro/Intro.js","service/auth.js","Components/Login/Login.js","Components/Loading.js","service/user.js","Components/UserInformation/UserArea.js","Components/Room/Room.js","Components/Rooms/RoomsList.js","Components/Rooms/RoomsHeader.js","Components/Guide/Guide.js","Components/List/SearchRoom.js","App.js","index.js"],"names":["require","config","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","Input","setDialogs","useState","message","setMessage","showEmoji","setShowEmoji","files","setFiles","setUrls","id","url","name","fileUrl","previewImage","setPreviewImage","limit","useMediaQuery","maxWidth","style","input","display","position","left","top","width","textField","fontSize","outline","paddingLeft","paddingBottom","paddingTop","marginLeft","backgroundColor","color","send","right","cursor","attach","image","icons","file","bottom","fileImage","preview","zIndex","height","background","boxShadow","borderRadius","padding","alignItems","thumbnail","deletePreviewIcon","fileName","addFile","placeItems","border","boxSizing","addIcon","sendMessage","length","promises","map","promise","Promise","resolve","reject","metadata","contentType","type","ref","put","then","snapshot","getDownloadURL","push","all","urls","prevState","PreviewSelectedFiles","item","onClick","filter","icon","src","alt","htmlFor","FormControl","fullWidth","sx","m","TextField","value","onKeyUp","e","key","variant","placeholder","onChange","target","autoComplete","InputProps","endAdornment","InputAdornment","visibility","multiple","i","newFile","Math","random","split","reader","FileReader","readAsDataURL","onloadend","result","onSelect","native","emojiSize","Emoji","dialog","react","self","show","setShow","emoji","transition","emojiList","flexDirection","allEmoji","reaction","reactionId","_id","onMouseLeave","EmojiIcon","emojiIndex","marginRight","GetEmoji","fetchClient","axios","create","baseURL","interceptors","request","use","token","localStorage","getItem","Object","assign","headers","Authorization","reactionService","get","Icons","reactions","paddingRight","iconsInfo","from","reaction_type","Dialog","onDelete","room","socket","kickUser","widget","setWidget","setReaction","setSelf","showTime","setShowTime","selfAndCreator","setSelfAndCreator","fileNumber","setFileNumber","showInfoUser","setShowInfoUser","dialogDiv","marginBottom","bubble","margin","wordBreak","avatar","marginTop","flexShrink","opacity","widgetItem","deleteIcon","pinIcon","container","rowGap","reply","dialogDivInfoNameTime","dialogDivInfoName","fontFamily","fontWeight","dialogDivInfoTime","dialogDivInfoMessageWidget","dialogDivInfoMessage","dialogDivInfoFiles","gridTemplateColumns","gap","des","WebkitLineClamp","WebkitBoxOrient","overflow","textOverflow","workBreak","subInfo","alignContent","subInfoContainer","subInfoFullNameandUsername","subInfoFullName","subInfoUsername","textAlign","kick","useEffect","on","return_dialog","data","off","userId","creator","a","res","status","onMouseEnter","size","subInfoAvatar","fullname","username","moment","createdAt","calendar","content","index","format","pop","classList","toggle","controls","justifyContent","href","rel","objectFit","reaction_id","user_id","tmp","pre_react","every","findIndex","user","splice","emit","Dialogs","dialogs","deleteMessage","MessEnding","useRef","current","scrollIntoView","behavior","roomService","post","mess","curRoom","currentRoom","getCurrentRoom","setCurrentRoom","initCurrentRoom","TabPane","Tabs","ChatHeader","userOnline","userOffline","setUserOnline","setUserOffline","leave","users","setUsers","visible","setVisible","updateVisible","setUpdateVisible","pinnedMessage","setPinnedMessage","showPinnedMessage","setShowPinnedMessage","typeSearch","roomAvatarPreview","setRoomAvatarPreview","roomAvatar","setRoomAvatar","currentUser","description","isPrivate","roomUpdateInfo","setRoomUpdateInfo","setIsPrivate","dialogResult","setDialogResult","showDialogResult","setShowDialogResult","onClose","handleEditInfo","handleUpdateRoomInfo","roomUpdateInfo_","storageRef","toast","success","msg","chatHeader","pinMessageContainer","pinMessageIcon","pinMessageInfo","flexFlow","pinMessageContentText","chatInfo","chatName","numberOfUser","chatTool","tuneIcon","roomInfo","roomTitle","lineHeight","roomName","roomDescription","roomShortId","line","borderBottom","media","overflowY","mediaGrid","members","member","leaveRoom","leaveRoomIcon","with","leaveRoomText","dot","infoIcon","buttonEditDrawer","buttonUpdateDrawer","roomAvatarEdit","plusIconContainer","plusIcon","removeIcon","submitButton","searchResultContainer","searchResultOption","searchOption","dialogContainer","dialogNameAndTime","dialogName","dialogTime","dialogMessage","closeIcon","find","online","r","pinnedMessages","at","roomId","onFinish","values","usersList","first","emails","join","error","response","Option","Select","selectBefore","defaultValue","v","dialogContainerAvatar","dialogContainerInfo","colorOfDialog","messageId","msgId","element","document","getElementById","setTimeout","addonBefore","onKeyPress","includes","temp","sort","b","maxHeight","overflowX","placement","extra","accept","newRoomAvatar","copy","shortId","labelCol","span","wrapperCol","Item","label","rules","required","defaultChecked","checkedChildren","unCheckedChildren","pre","prevRoomUpdateInfo","offset","htmlType","defaultActiveKey","tab","List","fields","add","remove","fieldKey","restField","align","block","messageService","ChatWindow","setLastMsgRoomId","newMessage","setNewMessage","delMessage","setDeleteMessage","prevMessage","setPrevMessage","ctRoom","date","d","Intro","begin","setBegin","text","transform","className","authService","configure","autoClose","draggable","POSITION","BOTTOM_RIGHT","Login","logIn","invalid","errorToggle","setError","email","password","setUser","hover","setHover","code","verifyUser","setUserVerify","formId","setFormId","div","button","loginForm","signupForm","header","createAccount","buttons","forms","alertText","alert","registation","verify","noValidate","startAdornment","Button","preventDefault","Loading","CircularProgress","userService","useStyles","makeStyles","theme","large","spacing","UserArea","logout","classes","userAvatarPreview","setUserAvatarPreview","userInfo","setUserInfo","userAvatar","setUserAvatar","handleEditUserInfo","handleUpdateUserInfo","userInfoToUpdate","userInformation","info","flexGrow","fontStyle","userAvaterEdit","Avatar","closable","title","onCancel","footer","newUserAvatar","pattern","Password","getFieldValue","validator","_","Error","small","Room","lastMsgRoomId","choosen","option","setOption","lastMsg","setLastMsg","room_container","roomMessage","roomMessageName","roomMessageLastMessage","messageTime","roomOption","private","lastMessage","lastMessageDate","fromNow","RoomsList","rooms","joinRoom","switchRoom","roomManage","leaveHandle","RoomsHeader","findRoom","handleSearchRoom","visibleCreate","setVisibleCreate","visibleJoin","setVisibleJoin","setRoom","setShortId","roomHeaderContainer","addUser","hideModalCreate","hideModalJoin","Guide","SearchRoom","resultRoom","setResultRoom","styles","inputSection","borderColor","searchRoom","toLowerCase","App","setConnect","isLoading","setLoading","authenticated","setAuthenticated","setPanel","setRooms","showSearchRoom","setShowSearchRoom","lastMsgRoomId1","setLastMsgRoomId1","io","connect","float","setItem","once","newRoom","clear","window","location","reload","getUserToken","el","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e6fa55b1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nrequire('dotenv').config()\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst storage = firebase.storage()\r\n\r\nexport { storage, firebase as default }\r\n","import SendIcon from '@material-ui/icons/Send'\r\nimport { useState } from 'react'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { TextField, FormControl, InputAdornment } from \"@material-ui/core\"\r\n\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\n\r\nimport { storage } from \"../../firebase/index\"\r\nimport { Icon } from '@iconify/react'\r\n\r\nconst Input = ({ setDialogs }) => {\r\n    const [message, setMessage] = useState('')\r\n    const [showEmoji, setShowEmoji] = useState(false)\r\n    const [files, setFiles] = useState([]);\r\n    const [urls, setUrls] = useState([]);\r\n    const [previewImage, setPreviewImage] = useState([{ id: null, url: null, name: null, fileUrl: null }]);\r\n\r\n    const limit = useMediaQuery({ maxWidth: 900 })\r\n    const limit2 = useMediaQuery({ maxWidth: 600 })\r\n    const style = {\r\n        input: {\r\n            display: 'block',\r\n            position: 'relative',\r\n            // right: '-16px',\r\n            // bottom: '16px',\r\n            // borderSizing: 'border-box',\r\n            left: '10px',\r\n            top: '20px',\r\n            width: '108%',\r\n\r\n        },\r\n\r\n        textField: {\r\n            width: limit2 ? '60%' : limit ? '70%' : '90%',\r\n            // width: '90%',\r\n            fontSize: 'x-large',\r\n            outline: 'none',\r\n            paddingLeft: '20px',\r\n            paddingBottom: '10px',\r\n            paddingTop: '10px',\r\n            marginLeft: '30px',\r\n            backgroundColor: 'transparent',\r\n            color: '#FDFDFD',\r\n        },\r\n\r\n        send: {\r\n            position: 'absolute',\r\n            right: 10,\r\n            cursor: 'pointer',\r\n            color: '#6082B6',\r\n            fontSize: '30px',\r\n        },\r\n\r\n        attach: {\r\n            position: 'absolute',\r\n            right: 100,\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        image: {\r\n            position: 'absolute',\r\n            right: 50,\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        icons: {\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            left: -45,\r\n            color: '#6082B6',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        file: {\r\n            color: '#6082B6',\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            cursor: 'pointer',\r\n            right: 45,\r\n            // left: 12,\r\n            bottom: 14\r\n        },\r\n\r\n        fileImage: {\r\n            color: '#6082B6',\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            cursor: 'pointer',\r\n            right: 50,\r\n            // left: 12,\r\n            bottom: 14\r\n        },\r\n\r\n        preview: {\r\n            zIndex: 1,\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '200px',\r\n            right: '1px',\r\n            bottom: '60px',\r\n            background: '#6588DE',\r\n            boxShadow: '0px 8px 40px rgba(0, 72, 251, 0.3)',\r\n            borderRadius: '14px',\r\n            padding: '20px',\r\n            display: 'flex',\r\n            // justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n\r\n        thumbnail: {\r\n            width: '100px',\r\n            height: '100px',\r\n            borderRadius: '10px'\r\n        },\r\n\r\n        deletePreviewIcon: {\r\n            color: 'red',\r\n            fontSize: '20px',\r\n            cursor: 'pointer',\r\n            position: 'relative',\r\n            top: '-56px',\r\n        },\r\n\r\n        fileName: {\r\n            position: 'relative',\r\n            left: '50px',\r\n            top: '5px',\r\n            color: 'white'\r\n        },\r\n\r\n        addFile: {\r\n            display: 'grid',\r\n            placeItems: 'center',\r\n            position: 'relative',\r\n            bottom: 18,\r\n            left: 18,\r\n            width: '100px',\r\n            height: '100px',\r\n            borderRadius: '10px',\r\n            border: '1px dashed #F9FBFB',\r\n            boxSizing: 'border-box',\r\n            // bottom: '10px'\r\n        },\r\n\r\n        addIcon: {\r\n            fontSize: '50px',\r\n            color: '#F9FBFB',\r\n        }\r\n    }\r\n\r\n    const handleEmojiSelect = (e) => { setMessage((message) => (message += e.native)) }\r\n\r\n    const deletePreview = (id) => {\r\n        setPreviewImage(previewImage.filter(item => item.id !== id))\r\n        // setPreviewFile(previewFile.filter(item => item.id !== id))\r\n        setFiles(files.filter(item => item.id !== id))\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        // convert to base64\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n            const newFile = e.target.files[i]\r\n            newFile[\"id\"] = Math.random()\r\n            let fileUrl = ''\r\n            let name = ''\r\n            // check file type is not image\r\n            if (newFile.type.split('/')[0] !== 'image') {\r\n                fileUrl = 'file.png'\r\n                name = `file ${i + 1}`\r\n            } else {\r\n                fileUrl = null\r\n                name = `image ${i + 1}`\r\n            }\r\n\r\n\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(newFile)\r\n            reader.onloadend = () => {\r\n                setPreviewImage((prevState) => [...prevState, { id: newFile[\"id\"], url: reader.result, name, fileUrl }])\r\n            }\r\n            setFiles((prevState) => [...prevState, newFile])\r\n        }\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        if (message.length > 0 || files.length > 0) {\r\n            const promises = []\r\n            files.map((file) => {\r\n                const promise = new Promise((resolve, reject) => {\r\n                    const metadata = {\r\n                        contentType: file.type\r\n                    }\r\n                    const storageRef = storage.ref(`files/${file.name}`)\r\n                    storageRef.put(file, metadata).then((snapshot) => {\r\n                        snapshot.ref.getDownloadURL().then((url) => {\r\n                            resolve(url)\r\n                        })\r\n                    })\r\n                })\r\n                promises.push(promise)\r\n            })\r\n            Promise.all(promises).then((urls) => {\r\n                setUrls((prevState) => [...prevState, urls])\r\n                setDialogs(message, urls)\r\n            })\r\n        }\r\n        // setPreviewFile([])\r\n        setPreviewImage([])\r\n        setFiles([])\r\n    }\r\n    const PreviewSelectedFiles = () => {\r\n        if (previewImage) {\r\n            return (\r\n                <div style={style.preview}>\r\n                    {previewImage.map((item) => {\r\n                        return (\r\n                            <div key={item.id}>\r\n                                <Icon onClick={() => deletePreview(item.id)} style={style.deletePreviewIcon} icon=\"ep:circle-close\" />\r\n                                <img style={style.thumbnail} src={item.fileUrl ? item.fileUrl : item.url} alt=\"thumb\" />\r\n                                <p style={style.fileName}>{item.name}</p>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div style={style.addFile}>\r\n                        <label htmlFor=\"files\"><Icon style={style.addIcon} icon=\"carbon:add-alt\" /></label>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={style.input}>\r\n            <FormControl fullWidth sx={{ m: 1 }}>\r\n                <TextField\r\n                    style={style.textField}\r\n                    value={message}\r\n                    onKeyUp={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                            sendMessage()\r\n                            setMessage('')\r\n                        }\r\n                    }}\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    placeholder='Type a new message...'\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position='end'>\r\n                                {/* <SendIcon\r\n                                    onClick={() => {\r\n                                        sendMessage()\r\n                                        setMessage('')\r\n                                    }}\r\n                                    color='primary'\r\n                                    fontSize='large'\r\n                                    style={style.send}\r\n                                /> */}\r\n                                <Icon onClick={() => {\r\n                                    sendMessage()\r\n                                    setMessage('')\r\n                                }}\r\n\r\n                                    style={style.send} icon=\"akar-icons:send\" />\r\n\r\n                                <Icon icon=\"fluent:emoji-24-regular\" style={style.icons} onClick={() => { setShowEmoji(!showEmoji) }}></Icon>\r\n                                <label htmlFor=\"files\"><Icon style={style.fileImage} icon=\"akar-icons:image\" /></label>\r\n                                <input id=\"files\" style={{ visibility: \"hidden\" }} type=\"file\" multiple onChange={handleImageChange} />\r\n                                {/* <label htmlFor=\"files\"><Icon style={style.file} icon=\"eva:attach-fill\" /></label>\r\n                                <input id=\"files\" style={{ visibility: \"hidden\" }} type=\"file\" accept=\".pdf, .txt, .docx\" multiple onChange={handleFileChange} /> */}\r\n                                {files.length > 0 && <PreviewSelectedFiles />}\r\n                                {showEmoji && (\r\n                                    <div style={{ position: \"fixed\", bottom: \"80px\", left: \"20%\", zIndex: \"1\" }}>\r\n                                        <Picker\r\n                                            onSelect={handleEmojiSelect}\r\n                                            emojiSize={20} />\r\n                                    </div>\r\n                                )}\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import EmojiEmotionsOutlinedIcon from '@material-ui/icons/EmojiEmotionsOutlined';\r\nimport { useState } from 'react'\r\n\r\nconst Emoji = ({ dialog, react, self }) => {\r\n    const [show, setShow] = useState(false)\r\n\r\n    const style = {\r\n        emoji: {\r\n            borderRadius: '50%',\r\n            padding: '1px',\r\n            cursor: 'pointer',\r\n            transition: 'background 300ms ease-out',\r\n        },\r\n\r\n        emojiList: {  \r\n            display: 'flex',\r\n            position: 'absolute',\r\n            top: -16,\r\n            right: self ? 2 : 'none',\r\n            flexDirection: self ? 'row-reverse' : 'row',\r\n        },\r\n\r\n        allEmoji: { \r\n            position: 'relative',   \r\n        }\r\n    }\r\n\r\n    const setEmoji = () => {\r\n        if (show)\r\n            setShow(false)\r\n        else\r\n            setShow(true)\r\n    }\r\n\r\n    const reaction = (reactionId) => {\r\n        react(reactionId, dialog._id)\r\n    }\r\n\r\n    return (\r\n        <div  style={style.allEmoji} onMouseLeave={() => setShow(false)}>\r\n            {\r\n                show && <div style={style.emojiList}>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(1)}>❤️</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(2)}>😂</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(3)}>😮</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(4)}>😢</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(5)}>😠</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(6)}>👍</div>\r\n                </div>\r\n            }\r\n            <EmojiEmotionsOutlinedIcon\r\n                style={style.emoji}\r\n                onClick={() => setEmoji()}\r\n            ></EmojiEmotionsOutlinedIcon>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emoji","const EmojiIcon = ({emojiIndex}) => {\r\n    const style = {\r\n        marginRight: '2px',\r\n        cursor: 'pointer',\r\n        fontSize: 'small'\r\n    }\r\n    const GetEmoji = () => {\r\n        switch (emojiIndex)\r\n        {\r\n            case 1:\r\n                return <div style={style}>❤️</div>\r\n            case 2:\r\n                return <div style={style}>😂</div>\r\n            case 3:\r\n                return <div style={style}>😮</div>\r\n            case 4:\r\n                return <div style={style}>😢</div>\r\n            case 5:\r\n                return <div style={style}>😠</div>\r\n            case 6:\r\n                return <div style={style}>👍</div>\r\n        }\r\n    }\r\n    return (\r\n        <GetEmoji></GetEmoji>\r\n    )\r\n}\r\n\r\nexport default EmojiIcon","import axios from 'axios';\r\nrequire('dotenv').config()\r\n\r\nconst fetchClient = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\r\n});\r\n\r\nconst beforeRequest = (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        Object.assign(config.headers, { Authorization: `Bearer ${token}` });\r\n    }\r\n    return config;\r\n};\r\n\r\nfetchClient.interceptors.request.use(beforeRequest);\r\n\r\nexport { fetchClient };","import { fetchClient } from './fetch';\r\n\r\nconst getReactionsByMessage = (id) => fetchClient.get(`/reaction/message/${id}/retrieve`);\r\n\r\nexport const reactionService = {\r\n    getReactionsByMessage\r\n};","// import Avatar from '@material-ui/core/Avatar'\r\nimport { useState, useEffect } from 'react'\r\nimport Emoji from '../Emoji/Emoji';\r\nimport EmojiIcon from '../Emoji/EmojiIcon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PushPinIcon from '@mui/icons-material/PushPin';\r\nimport moment from 'moment';\r\nimport { reactionService } from \"../../service/reaction\"\r\nimport { Avatar, Tooltip } from 'antd';\r\n\r\n\r\nconst Icons = ({ reactions, self }) => {\r\n    const style = {\r\n        icons: {\r\n            display: 'flex',\r\n            position: 'absolute',\r\n            right: self && 0,\r\n            left: !self && 0,\r\n            bottom: -9,\r\n            borderRadius: '25px',\r\n            backgroundColor: '#aaa',\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={style.iconsInfo}>\r\n            <div style={style.icons}>\r\n                {reactions.map((reaction) => {\r\n                    if (reaction.from.length !== 0) {\r\n                        return <EmojiIcon key={reaction.reaction_type} emojiIndex={reaction.reaction_type}></EmojiIcon>\r\n                    }\r\n                    return null\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Dialog = ({ dialog, onDelete, room, socket, kickUser }) => {\r\n    const [widget, setWidget] = useState(false)\r\n    const [enter, setEnter] = useState(false)\r\n    const [reactions, setReaction] = useState([])\r\n    const [self, setSelf] = useState(null)\r\n    const [showTime, setShowTime] = useState(false)\r\n    const [selfAndCreator, setSelfAndCreator] = useState(null)\r\n    const [fileNumber, setFileNumber] = useState(0)\r\n    const [showInfoUser, setShowInfoUser] = useState(false)\r\n    const style = {\r\n        dialogDiv: {\r\n            width: '95%',\r\n            position: 'relative',\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'row',\r\n            marginLeft: '20px',\r\n            marginRight: '20px',\r\n            alignItems: 'flex-start',\r\n            padding: '0px',\r\n            marginBottom: '30px',\r\n        },\r\n\r\n        bubble: {\r\n            backgroundColor: self ? '#32a6b8' : '#c27f67',\r\n            color: '#ffffff',\r\n            padding: '5px 10px',\r\n            margin: '0px',\r\n            borderRadius: '25px',\r\n            maxWidth: '100%',\r\n            position: 'relative',\r\n            wordBreak: 'break-word',\r\n        },\r\n\r\n        avatar: {\r\n            position: 'relative',\r\n            marginTop: '15px',\r\n            background: `#${dialog.from.color}`,\r\n            flexShrink: 0,\r\n        },\r\n\r\n        widget: {\r\n            flexShrink: 0,\r\n            opacity: widget ? 1 : 0,\r\n            transition: 'opacity 250ms',\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'flex',\r\n            flexShrink: 0,\r\n        },\r\n\r\n        widgetItem: {\r\n            cursor: 'pointer',\r\n            borderRadius: '50%',\r\n        },\r\n\r\n        deleteIcon: {\r\n            borderRadius: '50%',\r\n            padding: '1px',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        pinIcon: {\r\n            borderRadius: '50%',\r\n            padding: '1px',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: self ? 'flex-end' : 'flex-start',\r\n            rowGap: '1em',\r\n            padding: '10px',\r\n            borderRadius: '14px',\r\n        },\r\n\r\n        reply: {\r\n            display: 'block',\r\n        },\r\n\r\n        dialogDivInfoNameTime: {\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'flex',\r\n            alignItems: 'baseline',\r\n            width: '100%',\r\n            marginBottom: '-10px',\r\n        },\r\n        dialogDivInfoName: {\r\n            fontFamily: 'Poppins',\r\n            color: '#52585D',\r\n            fontSize: '20px',\r\n            fontWeight: '600',\r\n            marginLeft: self ? '10px' : '0px',\r\n        },\r\n        dialogDivInfoTime: {\r\n            fontFamily: 'Poppins',\r\n            opacity: showTime ? 1 : 0,\r\n            transition: 'opacity 250ms',\r\n            color: '#52585D',\r\n            fontSize: '16px',\r\n            marginLeft: self ? '0px' : '10px',\r\n        },\r\n\r\n        dialogDivInfoMessageWidget: {\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'row',\r\n        },\r\n\r\n        dialogDivInfoMessage: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: self ? 'flex-end' : 'flex-start',\r\n            margin: '0xp',\r\n        },\r\n\r\n        dialogDivInfoFiles: {\r\n            display: 'grid',\r\n            gridTemplateColumns: fileNumber === 1 ? 'repeat(1, 1fr)' : fileNumber == 2 ? 'repeat(2, 1fr)' : 'repeat(3, 1fr)',\r\n            gap: '10px',\r\n        },\r\n\r\n        des: {\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '150px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        subInfo: {\r\n            position: 'absolute',\r\n            backgroundColor: 'rgb(227, 246, 252)',\r\n            bottom: '80px',\r\n            left: !self ? '-11px' : 'none',\r\n            right: self ? '-11px' : 'none',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '10px',\r\n            padding: '10px',\r\n            borderRadius: '20px',\r\n            alignContent: 'flex-end',\r\n            alignItems: 'center',\r\n        },\r\n\r\n        subInfoContainer: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '10px'\r\n        },\r\n\r\n        subInfoFullNameandUsername: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '3px',\r\n        },\r\n\r\n        subInfoFullName: {\r\n            fontSize: '20px',\r\n            color: 'rgb(82, 88, 93)',\r\n        },\r\n\r\n        subInfoUsername: {\r\n            color: 'rgb(255, 255, 255)',\r\n            background: 'rgb(101, 136, 222)',\r\n            padding: '4px',\r\n            borderRadius: '10px',\r\n            fontSize: '10px',\r\n            textAlign: 'center',\r\n        },\r\n\r\n        kick: {\r\n            fontSize: '15px',\r\n            margin: '0',\r\n            border: '1px solid red',\r\n            fontWeight: 600,\r\n            color: 'red',\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            borderRadius: '10px',\r\n            cursor: 'pointer',\r\n        }\r\n    }\r\n\r\n    const react = (reaction_id, id) => {\r\n        const user_id = localStorage.getItem('userId')\r\n        const tmp = [...reactions]\r\n        let pre_react = 0\r\n\r\n        tmp.every(react => {\r\n            const index = react.from.findIndex(user => user.userId === user_id)\r\n            if (index !== -1) {\r\n                react.from.splice(index, 1)\r\n                pre_react = react.reaction_type\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n\r\n        if (pre_react !== reaction_id) {\r\n            const index = tmp.findIndex(react => react.reaction_type === reaction_id)\r\n            if (index !== -1) {\r\n                tmp[index].from.push({ userId: user_id, username: ' ' })\r\n            } else {\r\n                tmp.push({\r\n                    reaction_type: reaction_id,\r\n                    from: [{\r\n                        userId: user_id,\r\n                        username: ' '\r\n                    }]\r\n                })\r\n            }\r\n        }\r\n\r\n        setReaction([...tmp])\r\n\r\n        socket.emit('get-reaction', dialog, reaction_id, user_id, room._id)\r\n    }\r\n\r\n    const setPin = () => {\r\n        socket.emit('set-pin', dialog, room._id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('return-reaction', (return_dialog) => {\r\n            if (dialog._id === return_dialog._id) {\r\n                setReaction(return_dialog.data)\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            socket.off('return-reaction')\r\n        }\r\n\r\n    }, [dialog, socket])\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('userId')\r\n        setSelf(userId === dialog.from.userId)\r\n        if (userId === room.creator)\r\n            setSelfAndCreator(true)\r\n    }, [dialog])\r\n\r\n\r\n    useEffect(async () => {\r\n        let res = await reactionService.getReactionsByMessage(dialog._id)\r\n        if (res.status === 200)\r\n            setReaction(res.data.data)\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setFileNumber(dialog.urls.length)\r\n    }, [])\r\n\r\n    return (\r\n        <div id={dialog._id} style={style.dialogDiv} onMouseEnter={() => setShowTime(true)} onMouseLeave={() => setShowTime(false)}>\r\n            {!self &&\r\n                <div onMouseLeave={() => setShowInfoUser(false)}>\r\n                    <Avatar onMouseEnter={() => setShowInfoUser(true)} size={60} style={style.avatar} src={dialog.from.avatar}></Avatar>\r\n                    {showInfoUser && <div style={style.subInfo} >\r\n                        <div style={style.subInfoContainer}>\r\n                            <Avatar size={70} style={style.subInfoAvatar} src={dialog.from.avatar}></Avatar>\r\n                            <div style={style.subInfoFullNameandUsername}>\r\n                                <div style={style.subInfoFullName}>{dialog.from.fullname}</div>\r\n                                <div style={style.subInfoUsername}>{dialog.from.username}</div>\r\n                            </div>\r\n                        </div>\r\n                        {localStorage.getItem(\"userId\") === room.creator && <p style={style.kick} onClick={() => kickUser(dialog.from.userId, room._id)} >Kick</p>}\r\n                    </div>}\r\n                </div>\r\n            }\r\n            {self &&\r\n                <Avatar onMouseEnter={() => setShowInfoUser(true)} size={60} style={style.avatar} src={dialog.from.avatar}></Avatar>\r\n            }\r\n            <div style={style.container} onMouseEnter={() => setWidget(true)} onMouseLeave={() => setWidget(false)}>\r\n                {self && <div style={style.dialogDivInfoNameTime}>\r\n                    <div style={style.dialogDivInfoName}>{dialog.from.username}</div>\r\n                    <div style={style.dialogDivInfoTime}>{moment(dialog.createdAt).calendar()}</div>\r\n                </div>}\r\n                {!self && <div style={style.dialogDivInfoNameTime}>\r\n                    <div style={style.dialogDivInfoName}>{dialog.from.username}</div>\r\n                    <div style={style.dialogDivInfoTime}>{moment(dialog.createdAt).calendar()}</div>\r\n                </div>}\r\n\r\n                <div style={style.dialogDivInfoMessageWidget}>\r\n                    <div style={style.dialogDivInfoMessage}>\r\n                        {dialog.content && <p style={style.bubble}>{dialog.content}</p>}\r\n                        <Icons reactions={reactions} self={self} />\r\n                        <div style={style.dialogDivInfoFiles}>\r\n                            {\r\n                                dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                    let format = url.split('.').pop().split('?')[0]\r\n                                    if (format === 'mp4') {\r\n                                        return (\r\n                                            <video key={index} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} style={{ width: '500px', marginBottom: '10px', transition: '1s' }} controls>\r\n                                                <source src={url} type=\"video/mp4\" />\r\n                                            </video>\r\n                                        )\r\n                                    } else if (format === 'pdf') {\r\n                                        return (\r\n                                            <a style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                <img src='https://firebasestorage.googleapis.com/v0/b/chat-cord-712bf.appspot.com/o/default-avatar%2Fpdf_file_icon.png?alt=media&token=f12bd4a4-9d41-4096-9596-b3dfeb8d24b5' style={{ width: '50px', marginBottom: '10px', marginRight: '10px' }} />\r\n                                                <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                            </a>\r\n                                        )\r\n                                    } else if (format === 'docx' || format === 'doc') {\r\n                                        return (\r\n                                            <a style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                <img src='https://firebasestorage.googleapis.com/v0/b/chat-cord-712bf.appspot.com/o/default-avatar%2Fdocx_file_icon.png?alt=media&token=8c3eeb46-718b-4277-862f-da3236fb6182' style={{ width: '50px', marginBottom: '10px', marginRight: '10px', }} />\r\n                                                <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                            </a>\r\n                                        )\r\n                                    }\r\n                                    else if (format === 'jpg' || format === 'png' || format === 'jpeg') {\r\n                                        return (\r\n                                            <img key={index} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} src={url} style={{ width: '100%', height: '150px', objectFit: 'cover', marginBottom: '10px', transition: '1s' }} />\r\n                                        )\r\n                                    }\r\n                                })\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={style.widget}>\r\n                        <Emoji dialog={dialog} react={react} self={self}></Emoji>\r\n                        <PushPinIcon style={style.pinIcon} onClick={() => {\r\n                            setPin()\r\n                        }}></PushPinIcon>\r\n                        {(self || selfAndCreator) &&\r\n                            <DeleteIcon\r\n                                style={style.deleteIcon}\r\n                                onClick={() => {\r\n                                    onDelete(dialog, room.creator)\r\n                                }}\r\n                            >\r\n                            </DeleteIcon>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dialog","import Dialog from './Dialog'\r\nimport { useEffect, useRef } from 'react'\r\n\r\nconst Dialogs = ({socket, room, dialogs, deleteMessage, kickUser}) => {\r\n    const style = {\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '77vh',\r\n        overflow: 'auto',\r\n        margin: '10px 0px 0px 10px',\r\n    }\r\n\r\n    const MessEnding = useRef(null)\r\n\r\n    useEffect(() => {\r\n        MessEnding.current.scrollIntoView({ behavior: 'smooth' })\r\n    }, [dialogs])\r\n\r\n    return (\r\n        <div style={style}>\r\n            {dialogs.map((dialog, index) => {\r\n                return <Dialog key={index} socket={socket} dialog={dialog} onDelete={deleteMessage} room={room} kickUser={kickUser}></Dialog>\r\n            })}\r\n            <div ref={MessEnding} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import { fetchClient } from './fetch';\r\n\r\nconst getRooms = () => fetchClient.get('/room/retrieve');\r\nconst getRoom = (id) => fetchClient.get(`/room/${id}`);\r\nconst createRoom = (room) => fetchClient.post('/room/create', room);\r\nconst updateRoom = (id, room) => fetchClient.put(`/room/${id}`, room);\r\nconst attendRoom = (id) => fetchClient.post(`/room/${id}/attend`);\r\nconst addMember = (id, user) => fetchClient.post(`/room/${id}/addMember`, user);\r\nconst leaveRoom = (id) => fetchClient.post(`/room/${id}/leave`);\r\nconst getMembers = (id) => fetchClient.get(`/room/${id}/members`);\r\nconst getUserOnline = (id) => fetchClient.get(`/room/${id}/userOnline`);\r\nconst searchMessages = (id, mess) => fetchClient.get(`/room/${id}/messages/${mess}`); \r\nexport const roomService = {\r\n    getRooms,\r\n    getRoom,\r\n    createRoom,\r\n    updateRoom,\r\n    attendRoom,\r\n    addMember,\r\n    leaveRoom,\r\n    getMembers,\r\n    searchMessages\r\n};","const initCurrentRoom = () => {\r\n    var currentRoom = null\r\n    const getCurrentRoom = () => {\r\n        return currentRoom\r\n    }\r\n    const setCurrentRoom = (room) => {\r\n        currentRoom = room\r\n    }\r\n    return {\r\n        getCurrentRoom,\r\n        setCurrentRoom\r\n    }\r\n}\r\n\r\nconst curRoom = initCurrentRoom()\r\n\r\nexport default curRoom\r\n\r\n","import { Input, Select, Avatar, Drawer, Tabs, Space, Form, Switch, Button } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport copy from 'copy-to-clipboard';\r\nimport { toast } from 'react-toastify'\r\nimport { Icon } from '@iconify/react';\r\nimport { storage } from \"../firebase/index\"\r\nimport { roomService } from \"../service/room\"\r\nimport moment from 'moment';\r\nimport curRoom from './Room/CurrentRoom'\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst ChatHeader = ({ userOnline, userOffline, setUserOnline, setUserOffline, room, dialogs, leave, socket }) => {\r\n    const [users, setUsers] = useState([])\r\n    const [visible, setVisible] = useState(false)\r\n    // const [roomPinMessage, setRoomPinMessage] = useState([])\r\n    const [updateVisible, setUpdateVisible] = useState(false)\r\n    const [pinnedMessage, setPinnedMessage] = useState(false);\r\n    const [showPinnedMessage, setShowPinnedMessage] = useState(false);\r\n    var user = []\r\n    let typeSearch = 'All'\r\n    const [roomAvatarPreview, setRoomAvatarPreview] = useState(null)\r\n    const [roomAvatar, setRoomAvatar] = useState()\r\n    const currentUser = localStorage.getItem('userId')\r\n    const [roomUpdateInfo, setRoomUpdateInfo] = useState({\r\n        name: '',\r\n        description: '',\r\n        isPrivate: room.isPrivate,\r\n        avatar: '',\r\n    })\r\n    const [isPrivate, setIsPrivate] = useState(room.isPrivate)\r\n    const [dialogResult, setDialogResult] = useState([])\r\n    const [showDialogResult, setShowDialogResult] = useState(false)\r\n\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n    const handleEditInfo = () => {\r\n        setUpdateVisible(!updateVisible);\r\n    }\r\n\r\n    const handleUpdateRoomAvatar = (e) => {\r\n        const newRoomAvatar = e.target.files[0]\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(newRoomAvatar)\r\n        reader.onloadend = () => {\r\n            setRoomAvatarPreview(reader.result)\r\n        }\r\n        setRoomAvatar(newRoomAvatar)\r\n    }\r\n\r\n\r\n    const handleUpdateRoomInfo = async () => {\r\n        let roomUpdateInfo_ = roomUpdateInfo\r\n        if (roomAvatar) {\r\n            const metadata = {\r\n                contentType: roomAvatar.type\r\n            }\r\n            const storageRef = storage.ref(`roomAvatars/${roomAvatar.name}`)\r\n            const snapshot = await storageRef.put(roomAvatar, metadata)\r\n            const url = await snapshot.ref.getDownloadURL()\r\n            roomUpdateInfo_.avatar = url\r\n        }\r\n        let res = await roomService.updateRoom(room?._id, roomUpdateInfo_)\r\n        if (res.status === 200)\r\n            toast.success(res?.data?.msg)\r\n        setRoomAvatarPreview(roomUpdateInfo.avatar)\r\n        setRoomAvatar(null)\r\n        setUpdateVisible(false)\r\n    }\r\n\r\n    const style = {\r\n        chatHeader: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: '50px',\r\n            backgroundColor: '#6588DE',\r\n            height: '20px',\r\n            width: '100%',\r\n            margin: '0px 0px 0px 10px',\r\n            position: 'relative',\r\n        },\r\n\r\n        pinMessageContainer: {\r\n            // backgroundImage: 'linear-gradient(to right, #E3F6FC, #ffff80)',\r\n            // opacity: '0.5',\r\n            position: 'absolute',\r\n            backgroundColor: '#E3F6FC',\r\n            // bottom: '-67px',\r\n            top: '110px',\r\n            left: '0px',\r\n            zIndex: '1',\r\n            width: '68%',\r\n            height: '50px',\r\n            display: 'flex',\r\n            // alignItems: 'center',\r\n            gap: '10px',\r\n        },\r\n\r\n        pinMessageIcon: {\r\n            position: 'relative',\r\n            left: '5px',\r\n            top: '15px',\r\n            color: 'rgb(101, 136, 222)',\r\n            fontSize: '20px',\r\n        },\r\n\r\n        pinMessageInfo: {\r\n            width: '90%',\r\n            display: 'flex',\r\n            flexFlow: 'column',\r\n            padding: '2px'\r\n            // justifyContent: 'space-between',\r\n            // alignItems: 'center',\r\n        },\r\n\r\n        pinMessageContentText: {\r\n            // fontSize: '14px',\r\n            // width: '80%',\r\n            height: '100%',\r\n            // paddingTop: '12px'\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '107%',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        chatInfo: {\r\n            margin: '5px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        chatName: {\r\n            margin: '0px',\r\n            fontSize: '20px',\r\n            fontWeight: 'bold',\r\n            color: '#FDFDFE',\r\n        },\r\n\r\n        numberOfUser: {\r\n            margin: '0px',\r\n            fontSize: '14px',\r\n            color: '#F2F6F7',\r\n        },\r\n\r\n        chatTool: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            gap: '10px',\r\n            width: '30%',\r\n            position: 'relative',\r\n        },\r\n\r\n        tuneIcon: {\r\n            cursor: 'pointer',\r\n            fontSize: '20px',\r\n        },\r\n\r\n        roomInfo: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n\r\n        roomTitle: {\r\n            marginBottom: '30px',\r\n            fontWeight: 600,\r\n            fontSize: '18px',\r\n            lineHeight: '27px',\r\n            color: '#6588DE',\r\n        },\r\n\r\n        roomAvatar: {\r\n            marginBottom: '20px',\r\n            border: '4px solid #' + room.color,\r\n            borderRadius: '115px',\r\n        },\r\n\r\n        roomName: {\r\n            marginBottom: '6px',\r\n            fontWeight: 600,\r\n            fontSize: '16px',\r\n            lineHeight: '24px',\r\n            color: '#6588DE',\r\n        },\r\n\r\n        roomDescription: {\r\n            marginBottom: '20px',\r\n            fontSize: '12px',\r\n            lineHeight: '150.5%',\r\n            color: '#52585D',\r\n        },\r\n\r\n        roomShortId: {\r\n            cursor: 'pointer',\r\n            fontSize: '20px',\r\n            marginBottom: '30px',\r\n        },\r\n\r\n        line: {\r\n            width: '280px',\r\n            height: '0px',\r\n            borderBottom: '1px solid #D0D9DF',\r\n            marginBottom: '20px',\r\n        },\r\n\r\n        media: {\r\n            height: '400px',\r\n            overflowY: 'auto',\r\n            display: 'block',\r\n        },\r\n\r\n        mediaGrid: {\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(3, 1fr)',\r\n            gap: '10px',\r\n            maxWidth: '100%',\r\n        },\r\n\r\n        file: {\r\n            display: 'flex',\r\n            height: '400px',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n        },\r\n\r\n        members: {\r\n            display: 'flex',\r\n            height: '400px',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            gap: '10px',\r\n            overflowY: 'auto',\r\n        },\r\n\r\n        member: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'flex-end',\r\n            gap: '10px',\r\n        },\r\n\r\n\r\n        leaveRoom: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            cursor: 'pointer',\r\n            fontSize: '20px',\r\n            borderRadius: '8px',\r\n            alignItems: 'center',\r\n            gap: '11px',\r\n            border: '1px solid #6588DE',\r\n            height: '39px',\r\n        },\r\n\r\n        leaveRoomIcon: {\r\n            color: '#6588DE',\r\n            with: '18px',\r\n            height: '20px',\r\n            marginLeft: '14px',\r\n        },\r\n\r\n        leaveRoomText: {\r\n            margin: '0px',\r\n            with: '72px',\r\n            fontWeight: 500,\r\n            fontSize: '12px',\r\n            lineHeight: '18px',\r\n            color: '#6588DE'\r\n        },\r\n\r\n        avatar: {\r\n            position: 'relative',\r\n        },\r\n\r\n        dot: {\r\n            position: 'absolute',\r\n            bottom: '6px',\r\n            right: '3px',\r\n            height: '8px',\r\n            width: '8px',\r\n            borderRadius: '50%',\r\n            backgroundColor: '#46D362',\r\n        },\r\n\r\n        des: {\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '320px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        infoIcon: {\r\n            position: 'relative',\r\n            top: '5px'\r\n        },\r\n\r\n        buttonEditDrawer: {\r\n            border: 'none',\r\n            backgroundColor: '#E3F6FC',\r\n            color: '#6588DE',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        buttonUpdateDrawer: {\r\n            position: 'relative',\r\n            left: '50%',\r\n            marginRight: '5px',\r\n        },\r\n\r\n        roomAvatarEdit: {\r\n            width: 'fit-content',\r\n            display: 'block',\r\n            margin: 'auto',\r\n            border: '4px solid #' + room.color,\r\n            borderRadius: '115px',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        plusIconContainer: {\r\n            width: 55,\r\n            height: 55,\r\n            borderRadius: '50%',\r\n            border: '1px dashed #6ECB63',\r\n            display: 'grid',\r\n            placeItems: 'center',\r\n            backgroundColor: 'rgb(227, 246, 252)'\r\n        },\r\n\r\n        plusIcon: {\r\n            fontSize: '20px',\r\n        },\r\n\r\n        removeIcon: {\r\n            fontSize: '18px',\r\n            color: '#E74C3C',\r\n        },\r\n\r\n        submitButton: {\r\n            borderRadius: '5px'\r\n        },\r\n\r\n        searchResultContainer: {\r\n            position: 'absolute',\r\n            top: '58px',\r\n            left: '0px',\r\n            right: '0px',\r\n            backgroundColor: 'rgb(101, 136, 222)',\r\n            padding: '10px',\r\n            borderRadius: '10px',\r\n            zIndex: '1',\r\n        },\r\n\r\n        searchResultOption: {\r\n            display: 'flex',\r\n            gap: '50px',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n\r\n        searchOption: {\r\n            color: '#fff',\r\n            cursor: 'pointer',\r\n            fontSize: '20px',\r\n            fontWeight: 'bold',\r\n        },\r\n\r\n        dialogContainer: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '10px',\r\n            marginTop: '15px',\r\n        },\r\n\r\n        dialogNameAndTime: {\r\n            display: 'flex',\r\n            gap: '10px',\r\n            alignItems: 'center',\r\n        },\r\n\r\n        dialogName: {\r\n            color: 'white',\r\n            fontSize: '20px',\r\n        },\r\n\r\n        dialogTime: {\r\n            color: 'white'\r\n        },\r\n\r\n        dialogMessage: {\r\n            fontSize: '16px',\r\n            color: 'white',\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '280px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        closeIcon: {\r\n            fontSize: '24px',\r\n            position: 'absolute',\r\n            top: '-19px',\r\n            right: '6px',\r\n            color: 'white',\r\n            cursor: 'pointer',\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let user = users.find(user => user._id === userOnline)\r\n        if (user) {\r\n            user.online = true\r\n            setUsers([...users])\r\n        }\r\n        setUserOnline('')\r\n    }, [userOnline])\r\n\r\n    useEffect(() => {\r\n        let user = users.find(user => user._id === userOffline)\r\n        if (user) {\r\n            user.online = false\r\n            setUsers([...users])\r\n        }\r\n        setUserOffline('')\r\n    }, [userOffline])\r\n\r\n    useEffect(async () => {\r\n        let res = await roomService.getMembers(room?._id)\r\n        if (res.status === 200)\r\n            setUsers(res.data.msg)\r\n\r\n        res = await roomService.getRoom(room?._id)\r\n        let r = res.data.msg\r\n        if (r?.pinnedMessages?.length > 0) {\r\n            setShowPinnedMessage(true)\r\n            setPinnedMessage(r.pinnedMessages.at(-1))\r\n        }\r\n        else\r\n            setShowPinnedMessage(false)\r\n    }, [room])\r\n\r\n    useEffect(() => {\r\n        socket.on('new-pinned-message', (dialog, roomId, r) => {\r\n            if (roomId === curRoom.getCurrentRoom()?._id) {\r\n                if (r.pinnedMessages.length === 0)\r\n                    setShowPinnedMessage(false)\r\n                else {\r\n                    setShowPinnedMessage(true)\r\n                    setPinnedMessage(r.pinnedMessages.at(-1))\r\n                }\r\n            }\r\n        })\r\n    }, [socket])\r\n\r\n    const copyToClipboard = () => {\r\n        copy(room?.shortId)\r\n        toast.success('Copied to clipboard')\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        user = []\r\n        for (let i = 0; i < values.usersList.length; i++) {\r\n            user.push(values.usersList[i].first)\r\n        }\r\n        try {\r\n            let res = await roomService.addMember(room?._id, { emails: user.join(',') })\r\n            if (res.status === 200) {\r\n                toast.success(res.data.msg)\r\n            }\r\n        } catch (e) {\r\n            toast.error(`${e.response.data.msg}`)\r\n        }\r\n    }\r\n\r\n    const getTypeSearch = (v) => {\r\n        typeSearch = v\r\n    }\r\n    const { Option } = Select;\r\n\r\n    const selectBefore = (\r\n        <Select defaultValue=\"All\" onChange={getTypeSearch}>\r\n            <Option value=\"All\">All</Option>\r\n            <Option value=\"Message\">Message</Option>\r\n            <Option value=\"User\">User</Option>\r\n        </Select>\r\n    );\r\n\r\n\r\n    const Dialog = ({ dialog }) => {\r\n        return (\r\n            <div style={style.dialogContainer}>\r\n                <Avatar src={dialog.avatar} size={60} style={style.dialogContainerAvatar} />\r\n\r\n                <div style={style.dialogContainerInfo}>\r\n                    <div style={style.dialogNameAndTime}>\r\n                        <span style={style.dialogName}>{dialog.username}</span>\r\n                        <span style={style.dialogTime}>{moment(dialog.createdAt).calendar()}</span>\r\n                    </div>\r\n                    <div onClick={() => { colorOfDialog(dialog.messageId) }}>\r\n                        <a href={'#' + dialog.messageId} style={style.dialogMessage}>\r\n                            {dialog.content}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const colorOfDialog = (msgId) => {\r\n        var element = document.getElementById(msgId);\r\n        element.style.backgroundColor = 'LightBlue'\r\n        element.style.borderRadius = '10px'\r\n        element.style.paddingRight = '10px'\r\n        setTimeout(() => { element.style.backgroundColor = 'White' }, 1000)\r\n    }\r\n\r\n    return (\r\n        <div style={style.chatHeader}>\r\n            <div style={style.chatInfo} onClick={showDrawer}>\r\n                <p style={style.chatName}>{room?.name} <Icon style={style.infoIcon} icon=\"ant-design:info-circle-outlined\" /></p>\r\n                <p style={style.numberOfUser}>{users?.length + ' members'}</p>\r\n            </div>\r\n            <div style={style.chatTool}>\r\n\r\n                <Input style={style.input} addonBefore={selectBefore} autoComplete='off' placeholder=\"Type user or a message you want to search...\" onKeyPress={async (e) => {\r\n                    if (e.key === 'Enter') {\r\n                        await roomService.searchMessages(room._id, e.target.value).then(\r\n                            (res) => {\r\n                                if (res.data.msg.length > 0) {\r\n                                    setShowDialogResult(true)\r\n                                    if (typeSearch === 'All')\r\n                                        setDialogResult(res.data.msg)\r\n                                    else if (typeSearch === 'Message')\r\n                                        setDialogResult(res.data.msg.filter(m => m.content.includes(e.target.value)))\r\n                                    else if (typeSearch === 'User')\r\n                                        setDialogResult(res.data.msg.filter(m => m.username.includes(e.target.value)))\r\n                                }\r\n                                else setShowDialogResult(false)\r\n                            }\r\n                        );\r\n                    }\r\n                }} />\r\n\r\n                {showDialogResult && dialogResult.length > 0 && <div style={style.searchResultContainer}>\r\n                    <Icon style={style.closeIcon} onClick={() => setShowDialogResult(false)} icon=\"ant-design:close-circle-outlined\" />\r\n\r\n                    <div style={style.searchResultOption}>\r\n                        <div style={style.searchOption} onClick={() => {\r\n                            var temp = [...dialogResult.sort((a, b) => (a.createdAt > b.createdAt) ? 1 : -1)]\r\n                            setDialogResult(temp)\r\n                        }}>Old</div>\r\n                        <div style={style.searchOption} onClick={() => {\r\n                            var temp = [...dialogResult.sort((a, b) => (a.createdAt < b.createdAt) ? 1 : -1)]\r\n                            setDialogResult(temp)\r\n                        }}>New</div>\r\n                    </div>\r\n                    <div style={{ overflow: \"scroll\", maxHeight: \"500px\", overflowX: \"hidden\" }}>\r\n                        {\r\n                            dialogResult?.map((dialog, i) => {\r\n                                return (\r\n                                    <Dialog key={i} dialog={dialog}></Dialog>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n            <Drawer\r\n                placement=\"right\"\r\n                onClose={onClose}\r\n                visible={visible}\r\n                extra={\r\n                    <Space>\r\n                        {\r\n                        room.isPrivate && localStorage.getItem('userId') === room.creator &&<button onClick={handleEditInfo} style={style.buttonEditDrawer}>Edit</button>}\r\n                        {!room.isPrivate && <button onClick={handleEditInfo} style={style.buttonEditDrawer}>Edit</button>}\r\n                    </Space>\r\n                }\r\n            >\r\n                <div style={style.roomInfo}>\r\n                    <div style={style.roomTitle}>Room Info</div>\r\n                    {!updateVisible && <div style={style.roomAvatar}><Avatar size={200} src={room.avatar}></Avatar></div>}\r\n                    {updateVisible &&\r\n                        <div>\r\n                            <label style={style.roomAvatarEdit} htmlFor=\"roomAvatar\"><Avatar size={200} src={roomAvatarPreview ? roomAvatarPreview : room.avatar}></Avatar></label>\r\n                            <input id=\"roomAvatar\" style={{ visibility: \"hidden\" }} accept='image' type=\"file\" onChange={handleUpdateRoomAvatar} />\r\n                        </div>\r\n                    }\r\n                    {!room.isPrivate && <div style={style.roomShortId} onClick={copyToClipboard}>{room?.shortId}</div>}\r\n                    <div style={style.roomName}>{room?.name}</div>\r\n                    <div style={style.roomDescription}>{room?.description}</div>\r\n                    <div style={style.line}></div>\r\n                </div>\r\n                {updateVisible ?\r\n                    <Form\r\n                        labelCol={{ span: 10 }}\r\n                        wrapperCol={{ span: 20 }}\r\n                        onFinish={handleUpdateRoomInfo}\r\n                    >\r\n                        <Form.Item label=\"Room name\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input room name!'\r\n                            },\r\n                        ]}>\r\n                            <Input defaultValue={room.name} onChange={(e) => setRoomUpdateInfo({ ...roomUpdateInfo, name: e.target.value })} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Description\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input room description!'\r\n                            },\r\n                        ]}>\r\n                            <Input defaultValue={room.description} onChange={(e) => setRoomUpdateInfo({ ...roomUpdateInfo, description: e.target.value })} />\r\n                        </Form.Item>\r\n\r\n                        {\r\n                            currentUser == room.creator && <Form.Item label=\"Mode\">\r\n                                <Switch defaultChecked={isPrivate} checkedChildren=\"Private\" unCheckedChildren=\"Public\" onClick={(e) => { setIsPrivate(pre => !pre); setRoomUpdateInfo(prevRoomUpdateInfo => { return ({ ...prevRoomUpdateInfo, isPrivate: !prevRoomUpdateInfo.isPrivate }) }) }} />\r\n                            </Form.Item>\r\n                        }\r\n\r\n                        <Form.Item wrapperCol={{ offset: 10, span: 16 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    :\r\n                    <Tabs style={{ marginBottom: '25px' }} defaultActiveKey=\"1\">\r\n                        <TabPane tab=\"Images\" key=\"1\">\r\n                            <div style={style.media}>\r\n                                <div style={style.mediaGrid}>\r\n                                    {\r\n                                        dialogs.map(dialog => {\r\n                                            return dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                                let format = url.split('.').pop().split('?')[0]\r\n                                                if (format === 'jpg' || format === 'png' || format === 'jpeg') {\r\n                                                    return <img key={index} src={url} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} style={{ width: '100%', height: '100px', objectFit: 'cover', marginBottom: '10px', transition: '1s' }} />\r\n                                                }\r\n                                            })\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab=\"Videos\" key=\"2\">\r\n                            <div style={style.media}>\r\n                                <div style={style.mediaGrid}>\r\n                                    {\r\n                                        dialogs.map(dialog => {\r\n                                            // eslint-disable-next-line array-callback-return\r\n                                            return dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                                let format = url.split('.').pop().split('?')[0]\r\n                                                if (format === 'mp4') {\r\n                                                    return (\r\n                                                        <video key={index} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} style={{ width: '100%', height: '100px', objectFit: 'cover', marginBottom: '10px', transition: '1s' }} controls>\r\n                                                            <source src={url} type=\"video/mp4\" />\r\n                                                        </video>\r\n                                                    )\r\n                                                }\r\n                                            })\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab=\"Files\" key=\"3\">\r\n                            <div style={style.file}>\r\n                                {\r\n                                    dialogs.map(dialog => {\r\n                                        return dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                            let format = url.split('.').pop().split('?')[0]\r\n                                            if (format === 'pdf') {\r\n                                                return (\r\n                                                    <a key={index} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                        <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                                    </a>\r\n                                                )\r\n                                            } else if (format === 'docx') {\r\n                                                return (\r\n                                                    <a key={index} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                        <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                                    </a>\r\n                                                )\r\n                                            }\r\n                                        })\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab=\"Members\" key=\"4\">\r\n                            <div style={style.members}>\r\n                                {\r\n                                    ((currentUser == room.creator && room.isPrivate) || !room.isPrivate) &&\r\n                                    <Form name=\"add user dynamic form\" autoComplete=\"off\" onFinish={onFinish}>\r\n                                        <Form.List name=\"usersList\">\r\n                                            {(fields, { add, remove }) => (\r\n                                                <>\r\n                                                    {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                                                        <Space key={key} style={{ display: 'flex', marginBottom: 2 }} align=\"baseline\">\r\n                                                            <Form.Item\r\n                                                                {...restField}\r\n                                                                name={[name, 'first']}\r\n                                                                fieldKey={[fieldKey, 'first']}\r\n                                                                rules={[{ type: 'email', required: true, message: 'Email is required!' }]}\r\n                                                            >\r\n                                                                <Input placeholder=\"Email\" />\r\n                                                            </Form.Item>\r\n                                                            <Icon style={style.removeIcon} icon=\"gg:remove\" onClick={() => remove(name)} />\r\n                                                            {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\r\n                                                        </Space>\r\n                                                    ))}\r\n                                                    <Form.Item>\r\n                                                        <Button onClick={() => add()} block style={style.plusIconContainer}><Icon style={style.plusIcon} icon=\"carbon:add\" /></Button>\r\n                                                    </Form.Item>\r\n                                                </>\r\n                                            )}\r\n                                        </Form.List>\r\n                                        <Form.Item>\r\n                                            <Button style={style.submitButton} type='primary' htmlType=\"submit\">\r\n                                                Add\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                }\r\n                                {\r\n                                    users?.map((user, index) => {\r\n                                        return (\r\n                                            <div key={index} style={style.member}>\r\n                                                <div style={style.avatar}>\r\n                                                    <Avatar style={{ backgroundColor: '#' + user?.color }} size={50} src={user?.avatar}></Avatar>\r\n                                                    {user.online && <span style={style.dot}></span>}\r\n                                                </div>\r\n                                                <p style={{ fontSize: '16px' }}>{user?.fullname}</p>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                        </TabPane>\r\n                    </Tabs>\r\n                }\r\n                {!updateVisible &&\r\n                    <div style={style.leaveRoom}>\r\n                        <Icon style={style.leaveRoomIcon} icon=\"pepicons:leave\" />\r\n                        <p style={style.leaveRoomText} onClick={() => {\r\n                            onClose()\r\n                            leave(room._id)\r\n                        }\r\n                        }>Leave Room</p>\r\n                    </div>\r\n                }\r\n            </Drawer>\r\n            {showPinnedMessage && <div style={style.pinMessageContainer}>\r\n                <Icon style={style.pinMessageIcon} icon=\"entypo:pin\" />\r\n                <div style={style.pinMessageInfo} onClick={() => { colorOfDialog(pinnedMessage.messageId) }}>\r\n                    <a href={'#' + pinnedMessage.messageId}>\r\n                        <b>Pinned Message</b>\r\n                        <p style={style.pinMessageContentText}>{pinnedMessage ? pinnedMessage?.message : room?.pinnedMessages?.at(-1)?.message}</p>\r\n                        {/* <Icon icon=\"carbon:close-outline\"  /> */}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ChatHeader","import { fetchClient } from './fetch';\r\n\r\nconst getMessages = (id) => fetchClient.get(`message/room/${id}`);\r\n\r\nexport const messageService = {\r\n    getMessages\r\n};","import Input from \"./Message/Input\"\r\nimport Dialogs from \"./Message/Dialogs\"\r\nimport ChatHeader from \"./ChatHeader\"\r\nimport curRoom from './Room/CurrentRoom'\r\nimport { useEffect, useState } from \"react\"\r\nimport { messageService } from \"../service/message\"\r\n\r\nconst ChatWindow = ({ socket, currentRoom, setLastMsgRoomId, leave, kickUser }) => {\r\n    const [dialogs, setDialogs] = useState([])\r\n    const [userOnline, setUserOnline] = useState('')\r\n    const [userOffline, setUserOffline] = useState('')\r\n    const [newMessage, setNewMessage] = useState(null)\r\n    const [delMessage, setDeleteMessage] = useState(null)\r\n    const [prevMessage, setPrevMessage] = useState('')\r\n    const dialogsUpdate = (message, urls) => {\r\n        socket.emit('chat', message, urls, localStorage.getItem('userId'), currentRoom._id)\r\n    }\r\n\r\n    const deleteMessage = (dialog, creator) => {\r\n        const userId = localStorage.getItem('userId')\r\n        if (dialog.from.userId === userId || creator === userId) {\r\n            socket.emit('delete', dialog._id, currentRoom?._id)\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let res = await messageService.getMessages(currentRoom?._id)\r\n        if (res.status === 200) {\r\n            setDialogs(res.data.msg)\r\n        }\r\n    }, [currentRoom])\r\n\r\n    useEffect(() => {\r\n        socket.on('new_message', (dialog, ctRoom) => {\r\n            setLastMsgRoomId({\r\n                roomId: ctRoom,\r\n                msg: dialog.content,\r\n                date: dialog.createdAt\r\n            })\r\n            if (ctRoom === curRoom.getCurrentRoom()?._id) {\r\n                setNewMessage(dialog)\r\n            }\r\n        })\r\n        socket.on('dialog-deleted', (id) => {\r\n            setDeleteMessage(id)\r\n        })\r\n\r\n        return () => {\r\n            socket.off('your_new_message')\r\n            socket.off('dialog-deleted')\r\n        }\r\n    }, [currentRoom, socket])\r\n\r\n    useEffect(() => {\r\n        socket.on('loggedIn', (userId) => {\r\n            setUserOnline(userId)\r\n        })\r\n\r\n        socket.on('loggedOut', (userId) => {\r\n            setUserOffline(userId)\r\n        })\r\n\r\n        return () => {\r\n            socket.off('loggedIn')\r\n            socket.off('loggedOut')\r\n        }\r\n\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        if (newMessage && prevMessage !== newMessage._id) {\r\n            setDialogs([...dialogs, newMessage])\r\n            setPrevMessage(newMessage._id)\r\n        }\r\n    }, [newMessage])\r\n\r\n    useEffect(() => {\r\n        if (delMessage) {\r\n            const temp = [...dialogs]\r\n            temp.every((d, index) => {\r\n                if (d._id === delMessage) {\r\n                    temp.splice(index, 1)\r\n                    return false\r\n                }\r\n                return true\r\n            })\r\n\r\n            setDialogs([...temp])\r\n        }\r\n    }, [delMessage])\r\n\r\n    return (\r\n        <>\r\n            <ChatHeader userOnline={userOnline} userOffline={userOffline} setUserOnline={setUserOnline} setUserOffline={setUserOffline} room={currentRoom} dialogs={dialogs} leave={leave} socket={socket} />\r\n            <Dialogs room={currentRoom} socket={socket} dialogs={dialogs} setDialogs={setDialogs} deleteMessage={deleteMessage} kickUser={kickUser}></Dialogs>\r\n            < Input setDialogs={dialogsUpdate} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatWindow","import { useEffect, useState } from 'react'\r\nimport './Intro.css'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nconst Intro = () => {\r\n    const [begin, setBegin] = useState(false)\r\n\r\n    const limit = useMediaQuery({maxWidth: 1300})\r\n\r\n    const style = {\r\n        container: {\r\n            position: 'absolute',\r\n            left: '10em',\r\n            top: '-2.5em',\r\n            display: limit ? 'none' : 'block'\r\n        },\r\n\r\n        text: {\r\n            fontSize: '30px',\r\n            color: 'cyan',\r\n            fontWeight: 'bold',\r\n            transform: begin ? 'translate(200px, 0)' : 'none',\r\n            opacity: begin ? 1 : 0,\r\n            fontFamily: 'Comfortaa',\r\n            transition: 'transform 1000ms ease-out, opacity 800ms'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setBegin(true)\r\n        }, 2000)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={style.container}>\r\n            <p className='intro-text'>Chatcord</p>\r\n            <p style={style.text}>...connect people around the world</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro","import { fetchClient } from './fetch';\r\n\r\nconst login = (user) => fetchClient.post('/auth/login', user);\r\nconst register = (user) => fetchClient.post('/auth/register', user);\r\nconst verify = (user) => fetchClient.post('/auth/verify', user);\r\n\r\nexport const authService = {\r\n    login,\r\n    register,\r\n    verify\r\n};","import TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { useState } from 'react';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Intro from '../Intro/Intro'\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { authService } from '../../service/auth'\r\n\r\ntoast.configure({\r\n    autoClose: 2000,\r\n    draggable: false,\r\n    position: toast.POSITION.BOTTOM_RIGHT\r\n})\r\n\r\nconst Login = ({ logIn, invalid, errorToggle, message }) => {\r\n    const [error, setError] = useState(false)\r\n    const [user, setUser] = useState({ email: '', fullname: '', username: '', password: '' })\r\n    const [hover, setHover] = useState(false)\r\n    const [verifyUser, setUserVerify] = useState({ email: '', code: '' })\r\n    const [formId, setFormId] = useState('login')\r\n\r\n    const limit = useMediaQuery({ maxWidth: 1300 })\r\n    const style = {\r\n        textField: {\r\n            display: 'block',\r\n            marginBottom: '20px',\r\n        },\r\n\r\n        div: {\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: 'linear-gradient(135deg, rgba(88,63,243,1) 0%, rgba(255,77,0,0.7962535355939251) 100%)',\r\n        },\r\n\r\n        button: {\r\n            width: '100%',\r\n            background: '#000000',\r\n            color: '#ffffff',\r\n            height: '3em',\r\n            marginBottom: '1em'\r\n        },\r\n\r\n        loginForm: {\r\n            width: '350px',\r\n            overflow: 'hidden',\r\n            background: '#ffffff',\r\n            padding: '50px 0px 30px 0px',\r\n            borderRadius: '10px',\r\n            height: '550px',\r\n            maxWidth: '350px',\r\n            transition: 'max-width 200ms'\r\n        },\r\n\r\n        signupForm: {\r\n            width: '350px',\r\n            overflow: 'hidden',\r\n            background: '#ffffff',\r\n            padding: '50px 0px 30px 0px',\r\n            borderRadius: '10px',\r\n            height: '650px',\r\n            maxWidth: '350px',\r\n            transition: 'max-width 200ms',\r\n        },\r\n\r\n        header: {\r\n            fontWeight: 'bold',\r\n            fontSize: '40px',\r\n            marginBottom: '1.5em',\r\n            fontFamily: 'Roboto'\r\n        },\r\n\r\n        createAccount: {\r\n            fontWeight: 'bold',\r\n            cursor: 'pointer',\r\n            color: hover ? '#555555' : '#000000',\r\n            transition: 'color 300ms'\r\n        },\r\n\r\n        buttons: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            margin: 'auto',\r\n            width: '50%',\r\n            paddingTop: '2em',\r\n            marginBottom: '4em'\r\n        },\r\n\r\n        forms: {\r\n            textAlign: 'center',\r\n            position: 'absolute',\r\n            right: limit ? 0 : '10em',\r\n            left: limit ? 0 : 'auto',\r\n            margin: 'auto',\r\n            top: '5em',\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n        },\r\n\r\n        alertText: {\r\n            color: 'red',\r\n            fontWeight: 'bold',\r\n        },\r\n\r\n        alert: {\r\n            color: '#ff0000',\r\n            opacity: invalid ? 1 : 0,\r\n            transition: 'opacity 250ms'\r\n        }\r\n    }\r\n\r\n    const registation = async () => {\r\n        try {\r\n            let result = await authService.register(user)\r\n            toast.success(`${result.data.msg}`)\r\n            setFormId('verify')\r\n        } catch (error) {\r\n            setError(true)\r\n            toast.error(`${error.response.data.msg}`)\r\n        }\r\n    }\r\n\r\n    const verify = async () => {\r\n        let result = await authService.verify(verifyUser)\r\n        if (result.status === 200) {\r\n            toast.success(`${result.data.msg}`)\r\n            setFormId('login')\r\n        }\r\n        else {\r\n            toast.error(`${error.response.data.msg}`,)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={style.div}>\r\n            <Intro />\r\n            <div style={style.forms}>\r\n                {/* Login Form */}\r\n                {formId === 'login' && <form autoComplete='off' noValidate style={style.loginForm}>\r\n                    <h1 style={style.header}>LOGIN</h1>\r\n                    <TextField\r\n                        required\r\n                        value={user.email}\r\n                        id='input-with-icon-textfield'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n                        placeholder='email'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.password}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n                        onKeyUp={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                logIn(user)\r\n                            }\r\n                        }}\r\n                        placeholder='password'\r\n                        type='password'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n                    <h4 style={style.alert}>Something went wrong</h4>\r\n                    <div style={style.buttons}>\r\n                        <Button style={style.button} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            logIn(user)\r\n                        }}>Log in</Button>\r\n                    </div>\r\n\r\n                    <p style={style.createAccount}\r\n                        onMouseEnter={() => setHover(true)}\r\n                        onMouseLeave={() => setHover(false)}\r\n                        onClick={e => {\r\n                            e.preventDefault()\r\n                            setUser({ email: '', password: '' })\r\n                            // setAccount(false)\r\n                            setFormId('signup')\r\n                            // errorToggle(false)\r\n                        }}\r\n                    >Create account ?</p>\r\n                </form>}\r\n\r\n\r\n                {/* verify */}\r\n                {formId === 'verify' && <form autoComplete='off' noValidate style={style.loginForm}>\r\n                    <h1 style={style.header}>Verify</h1>\r\n                    <TextField\r\n                        required\r\n                        value={verifyUser.email}\r\n                        id='input-with-icon-textfield'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUserVerify({ ...verifyUser, email: e.target.value })}\r\n                        placeholder='email'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUserVerify({ ...verifyUser, code: e.target.value })}\r\n                        placeholder='verify code'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    {error ? <h4 style={style.alert}>Something went wrong</h4> : null}\r\n                    <div style={style.buttons}>\r\n                        <Button style={style.button} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            verify()\r\n                        }}>Confirm</Button>\r\n                    </div>\r\n\r\n                    {/* <p style={style.createAccount}\r\n                        onMouseEnter={() => setHover(true)}\r\n                        onMouseLeave={() => setHover(false)}\r\n                        onClick={e => {\r\n                            e.preventDefault()\r\n                            setUser({ username: '', password: '' })\r\n                            setAccount(false)\r\n                            errorToggle(false)\r\n                        }}\r\n                    >Create account ?</p> */}\r\n                </form>}\r\n\r\n                {/* create account */}\r\n                {formId === 'signup' && <form autoComplete='off' noValidate style={style.signupForm}>\r\n                    <h1 style={style.header}>Create account</h1>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.email}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser(user => ({ ...user, email: e.target.value }))}\r\n                        placeholder='email'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.fullname}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser(user => ({ ...user, fullname: e.target.value }))}\r\n                        placeholder='fullname'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.username}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser(user => ({ ...user, username: e.target.value }))}\r\n                        placeholder='username'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.password}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        type='password'\r\n                        onChange={(e) => setUser(user => ({ ...user, password: e.target.value }))}\r\n                        placeholder='password'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        error={error}\r\n                        id={error ? 'standard-error-helper-text' : 'standard-basic'}\r\n                        style={style.textField}\r\n                        type='password'\r\n                        onChange={(e) => {\r\n                            setError(e.target.value !== user.password)\r\n                        }}\r\n                        onKeyUp={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                registation()\r\n                            }\r\n                        }}\r\n                        placeholder='confirm password'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n                    <div style={style.buttons}>\r\n                        <Button style={style.button} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            registation()\r\n                            setUserVerify({ email: user.email })\r\n                        }}>Create Account</Button>\r\n                        <Button style={{ background: '#ffffff', color: '#000000', border: '3px solid black' }} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            setFormId('login')\r\n                        }}>Back</Button>\r\n                    </div>\r\n                </form>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loading = () => {\r\n    const style = {\r\n        textAlign: 'center',\r\n        height: '100%',\r\n        background: 'linear-gradient(135deg, rgba(88,63,243,1) 0%, rgba(255,77,0,0.7962535355939251) 100%)',\r\n\r\n        content: {\r\n            position: 'absolute',\r\n            top: '40%',\r\n            left: '45%',\r\n        }\r\n    }\r\n    return (\r\n        <div style={style}>\r\n            <div style={style.content}>\r\n                <CircularProgress></CircularProgress>\r\n                <p>Wait a few second...</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import { fetchClient } from './fetch';\r\n\r\nconst getUser = () => fetchClient.get('/user/find');\r\nconst updateUser = (id, user) => fetchClient.put(`/user/${id}`, user);\r\nexport const userService = {\r\n    getUser,\r\n    updateUser\r\n};","import Avatar from '@material-ui/core/Avatar'\r\nimport { makeStyles } from \"@material-ui/core\"\r\n// import { useMediaQuery } from 'react-responsive'\r\nimport { Icon } from '@iconify/react'\r\nimport { useState } from 'react'\r\nimport { Modal, Form, Input, Avatar as UserAvatar, Button } from 'antd'\r\nimport { storage } from \"../../firebase/index\"\r\nimport { toast } from 'react-toastify'\r\nimport { userService } from \"../../service/user\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  },\r\n}))\r\n\r\nconst UserArea = ({ user, logout }) => {\r\n  const classes = useStyles()\r\n  const [updateVisible, setUpdateVisible] = useState(false)\r\n  const [userAvatarPreview, setUserAvatarPreview] = useState(null)\r\n  const [userInfo, setUserInfo] = useState({\r\n    fullname: '',\r\n    username: '',\r\n    avatar: '',\r\n    password: '',\r\n  })\r\n  const [userAvatar, setUserAvatar] = useState()\r\n\r\n  const handleEditUserInfo = () => {\r\n    setUpdateVisible(!updateVisible)\r\n  }\r\n\r\n  // TODO: update user info\r\n  const handleUpdateUserInfo = async () => {\r\n    let userInfoToUpdate = userInfo\r\n    if (userAvatar) {\r\n      const metadata = {\r\n        contentType: userAvatar.type\r\n      }\r\n      const storageRef = storage.ref(`userAvatars/${userAvatar.name}`)\r\n      const snapshot = await storageRef.put(userAvatar, metadata)\r\n      const url = await snapshot.ref.getDownloadURL()\r\n      userInfoToUpdate.avatar = url\r\n    }\r\n    try {\r\n      let res = await userService.updateUser(user?.id, userInfoToUpdate)\r\n      toast.success(res?.data?.msg)\r\n    } catch (err) {\r\n      toast.error(`${err?.response?.data?.msg}`)\r\n    }\r\n    setUserAvatarPreview(userInfo.avatar)\r\n    setUserAvatar(null)\r\n    setUpdateVisible(false)\r\n  }\r\n  const handleUpdateUserAvatar = (e) => {\r\n    const newUserAvatar = e.target.files[0]\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(newUserAvatar)\r\n    reader.onloadend = () => {\r\n      setUserAvatarPreview(reader.result)\r\n    }\r\n    setUserAvatar(newUserAvatar)\r\n  }\r\n  // const limit = useMediaQuery({ maxWidth: 1300 })\r\n\r\n  const style = {\r\n    userInformation: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      alignContent: 'flex-start',\r\n      justifyContent: 'flex-end',\r\n      height: '100px',\r\n      width: '100%',\r\n      backgroundColor: '#E3F6FC',\r\n      // borderRadius: '14px',\r\n      marginBottom: '10px',\r\n      // marginLeft: '10px',\r\n    },\r\n    avatar: {\r\n      fontSize: 'xx-large',\r\n      marginRight: '20px',\r\n      marginLeft: '20px',\r\n      background: '#' + user?.color,\r\n      cursor: 'pointer',\r\n    },\r\n    info: {\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'start',\r\n    },\r\n    fullname: {\r\n      fontFamily: 'Poppins',\r\n      fontStyle: 'normal',\r\n      fontWeight: '600',\r\n      fontSize: '20px',\r\n      /* identical to box height */\r\n      color: '#52585D',\r\n      margin: '0px',\r\n    },\r\n    username: {\r\n      fontStyle: 'normal',\r\n      fontFamily: 'Poppins',\r\n      padding: '5px 10px',\r\n      backgroundColor: '#6588DE',\r\n      borderRadius: '14px',\r\n      color: '#FFFFFF',\r\n      fontSize: '10px',\r\n\r\n    },\r\n\r\n    userAvaterEdit: {\r\n      width: 'fit-content',\r\n      display: 'block',\r\n      margin: 'auto',\r\n      border: '4px solid #' + user?.color,\r\n      borderRadius: '115px',\r\n      cursor: 'pointer',\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={style.userInformation}>\r\n      <Avatar onClick={handleEditUserInfo} style={style.avatar} className={classes.large} src={user?.avatar}></Avatar>\r\n\r\n      <Modal visible={updateVisible} closable={false} title=\"Update User Info\" onCancel={handleEditUserInfo} footer={null}>\r\n        {updateVisible &&\r\n          <div>\r\n            <label style={style.userAvaterEdit} htmlFor=\"userAvatar\"><UserAvatar size={200} src={userAvatarPreview ? userAvatarPreview : user.avatar}></UserAvatar></label>\r\n            <input id=\"userAvatar\" style={{ visibility: \"hidden\" }} accept='image/*' type=\"file\" onChange={handleUpdateUserAvatar} />\r\n          </div>\r\n        }\r\n        <Form\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          onFinish={handleUpdateUserInfo}\r\n        >\r\n          <Form.Item label=\"Full Name\" rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your full name!',\r\n            },\r\n          ]}>\r\n            <Input defaultValue={user?.fullname} onChange={(e) => setUserInfo({ ...userInfo, fullname: e.target.value })} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Username\" rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your username!',\r\n            },\r\n          ]}>\r\n            <Input defaultValue={user?.username} onChange={(e) => setUserInfo({ ...userInfo, username: e.target.value })} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" name=\"password\"\r\n            rules={[\r\n              {\r\n                pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/,\r\n                message: 'Password must be at least 6 characters, contain at least one uppercase letter, one lowercase letter, one number and one special character!',\r\n              }\r\n            ]}>\r\n            <Input.Password onChange={(e) => setUserInfo({ ...userInfo, password: e.target.value })} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Confirm Password\" name=\"confirm\"\r\n            rules={[\r\n              {\r\n                pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/,\r\n                message: 'Password must be at least 6 characters, contain at least one uppercase letter, one lowercase letter, one number and one special character!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <div style={style.info}>\r\n        <p style={style.fullname}>{user?.fullname}</p>\r\n        <p style={style.username}>{user?.username}</p>\r\n      </div>\r\n      <Icon icon=\"ion:log-out-outline\" style={{ fontSize: '30px', marginRight: '20px', marginLeft: '20px', cursor: 'pointer' }} onClick={logout} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserArea","// import Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport moment from 'moment';\r\nimport { Avatar } from 'antd';\r\nimport { Icon } from '@iconify/react';\r\nimport { roomService } from \"../../service/room\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10)\r\n    },\r\n\r\n    small: {\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6)\r\n    }\r\n}))\r\n\r\nconst Room = ({ room, onClick, lastMsgRoomId, choosen }) => {\r\n    const classes = useStyles()\r\n    const [option, setOption] = useState(false)\r\n    const [hover, setHover] = useState(false)\r\n    const [lastMsg, setLastMsg] = useState({\r\n        roomId: '',\r\n        msg: '',\r\n        date: null\r\n    })\r\n    const limit = useMediaQuery({ maxWidth: 1300 })\r\n\r\n    const style = {\r\n        room_container: {\r\n            position: 'relative',\r\n            marginTop: '18px',\r\n        },\r\n\r\n        room: {\r\n            position: 'relative',\r\n            width: limit ? '12em' : '90%',\r\n            margin: 'auto',\r\n            background: (choosen || hover) ? '#6588DE' : '#E3F6FC',\r\n            padding: '10px',\r\n            borderRadius: '14px',\r\n            boxShadow: (choosen || hover) ? '0px 8px 40px rgba(0, 72, 251, 0.3)' : 'none',\r\n            overflow: 'hidden',\r\n            marginBottom: 10,\r\n            maxHeight: option ? limit ? '250px' : '220px' : '100px',\r\n            transition: 'max-height 250ms, border 250ms, background 250ms',\r\n            height: '74px',\r\n        },\r\n\r\n        roomInfo: {\r\n            margin: '0px',\r\n            padding: '0px',\r\n            display: 'flex',\r\n            cursor: 'pointer',\r\n            alignItems: 'center',\r\n            alignContent: 'center',\r\n            flexDirection: 'row',\r\n            gap: '10px',\r\n        },\r\n\r\n        avatar: {\r\n            fontSize: '20px',\r\n            flexShrink: 0,\r\n            background: '#' + room?.color,\r\n        },\r\n\r\n        roomMessage: {\r\n            flexGrow: '1',\r\n        },\r\n\r\n        roomMessageName: {\r\n            margin: '0px',\r\n            padding: '0px',\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            color: (choosen || hover) ? '#FDFDFE' : '#52585D',\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '150px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        roomMessageLastMessage: {\r\n            margin: '0px',\r\n            padding: '0px',\r\n            fontSize: '12px',\r\n            color: (choosen || hover) ? '#F2F6F7' : '#96A9BA',\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '150px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        messageTime: {\r\n            color: (choosen || hover) ? '#FDFDFE' : '#96A9BA',\r\n        },\r\n\r\n        button: {\r\n            position: 'absolute',\r\n            fontSize: '50px',\r\n            color: '#5b5b5b',\r\n            right: '0.5em',\r\n            top: 40,\r\n            margin: 'auto',\r\n            transform: option ? 'rotate(90deg)' : 'none',\r\n            transition: 'transform 200ms'\r\n        },\r\n\r\n        roomOption: {\r\n            background: '#c4c4c4',\r\n            fontSize: 'large',\r\n            marginBottom: '0',\r\n            marginTop: '0.1em',\r\n            borderRadius: '5px',\r\n            cursor: 'pointer',\r\n            paddingLeft: '1em',\r\n        },\r\n\r\n        private: {\r\n            position: 'absolute',\r\n            fontSize: '30px',\r\n            right: 0,\r\n            top: 0,\r\n            color: '#52585D',\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (option && !choosen) {\r\n            setOption(false)\r\n        }\r\n        if (room?._id === lastMsgRoomId.roomId) {\r\n            room.lastMessage = lastMsgRoomId.msg\r\n            room.lastMessageDate = lastMsgRoomId.date\r\n        }\r\n        setLastMsg({\r\n            roomId: room?._id,\r\n            msg: room?.lastMessage,\r\n            date: room?.lastMessageDate,\r\n        })\r\n    }, [lastMsgRoomId])\r\n\r\n\r\n    useEffect(() => {\r\n        setLastMsg({\r\n            roomId: room?._id,\r\n            msg: room?.lastMessage,\r\n            date: room?.lastMessageDate,\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={style.room_container} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)}>\r\n            <div style={style.room}>\r\n                <div style={style.roomInfo} onClick={() => onClick(room)}>\r\n                    <Avatar size={56} style={style.avatar} src={room.avatar}></Avatar>\r\n                    <div style={style.roomMessage}>\r\n                        <p style={style.roomMessageName}>{room?.name}</p>\r\n                        <p style={style.roomMessageLastMessage}>{lastMsg.msg}</p>\r\n                    </div>\r\n                    <span style={style.messageTime}>{moment(`${lastMsg.date}`).fromNow()}</span>\r\n                    {room.isPrivate && <Icon style={style.private} icon=\"ri:chat-private-line\" />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room","// import CreateRoom from \"./CreateRoom\"\r\nimport Room from \"../Room/Room\"\r\n\r\nconst RoomsList = ({rooms, joinRoom, leaveRoom, switchRoom, roomManage, currentRoom, lastMsgRoomId, setLastMsgRoomId}) => {\r\n    const style = {\r\n        roomList: {\r\n            overflow: 'auto',\r\n            width: '100%',\r\n            height: '77%',\r\n            backgroundColor: '#E3F6FC',\r\n            // borderRadius: '5px',\r\n            // marginLeft: '10px',\r\n        },\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={style.roomList}>\r\n          {/* <CreateRoom joinRoom={joinRoom}></CreateRoom> */}\r\n          {rooms?.map((room, index) => {\r\n            return (\r\n              <Room key={index} choosen={currentRoom?._id === room?._id} room={room} lastMsgRoomId={lastMsgRoomId} setLastMsgRoomId={setLastMsgRoomId} leaveHandle={leaveRoom} onClick={switchRoom} roomManage={roomManage}></Room>\r\n            )\r\n          })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomsList","/* eslint-disable no-unused-vars */\r\nimport { Icon } from '@iconify/react';\r\nimport { Modal, Button, Form, Input, Switch } from 'antd';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst RoomsHeader = ({ joinRoom, findRoom, handleSearchRoom }) => {\r\n    const [visibleCreate, setVisibleCreate] = useState(false)\r\n    const [visibleJoin, setVisibleJoin] = useState(false)\r\n    const [isPrivate, setIsPrivate] = useState(false)\r\n    const [room, setRoom] = useState({ name: '', description: '', isPrivate: false })\r\n\r\n    const [shortId, setShortId] = useState('')\r\n\r\n\r\n    const style = {\r\n        roomHeaderContainer: {\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n            alignItems: 'center',\r\n            backgroundColor: '#E3F6FC',\r\n            // borderRadius: '14px',\r\n            // marginBottom: '10px',\r\n            // marginLeft: '10px',\r\n            height: '10%',\r\n            padding: '10px',\r\n            width: '100%',\r\n        },\r\n        input: {\r\n            width: '100%',\r\n            outline: 'none',\r\n            fontSize: '1.2rem',\r\n            borderRadius: '8px',\r\n            height: '40px',\r\n            backgroundColor: '#FDFDFD',\r\n            border: '1px solid #6588DE',\r\n            boxSizing: 'border-box',\r\n            margin: '5px',\r\n            marginLeft: '15px',\r\n        },\r\n        add: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n        join: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n        addUser: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n    }\r\n\r\n    const showModalCreate = () => {\r\n        setVisibleCreate(true);\r\n    }\r\n\r\n    const hideModalCreate = () => {\r\n        setVisibleCreate(false);\r\n    }\r\n\r\n    const creatRoom = () => {\r\n        joinRoom(room)\r\n        hideModalCreate()\r\n    }\r\n\r\n    const showModalJoin = () => {\r\n        setVisibleJoin(true);\r\n    }\r\n\r\n    const hideModalJoin = () => {\r\n        setVisibleJoin(false);\r\n    }\r\n\r\n    const joinWithRoomId = () => {\r\n        findRoom(shortId)\r\n        hideModalJoin()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={style.roomHeaderContainer}>\r\n                <Icon style={style.add} icon=\"akar-icons:search\" onClick={handleSearchRoom} />\r\n                <Icon style={style.add} icon=\"akar-icons:chat-add\" onClick={showModalCreate} />\r\n                <Icon style={style.join} icon=\"fluent:chat-arrow-back-16-regular\" onClick={showModalJoin} />\r\n            </div>\r\n\r\n            <Modal title=\"Create room\" closable={false} visible={visibleCreate} footer={[\r\n                <Button onClick={hideModalCreate}>\r\n                    Cancel\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" onClick={creatRoom} >\r\n                    Create\r\n                </Button>,\r\n            ]}>\r\n                <Form name=\"control-hooks\">\r\n                    <Form.Item label=\"Room name\" name=\"roomName\" rules={[{ required: true }]} onChange={(e) => setRoom(room => ({ ...room, name: e.target.value }))}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Description\" name=\"description\" rules={[{ required: true }]} onChange={(e) => setRoom(room => ({ ...room, description: e.target.value }))}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Switch checkedChildren=\"Private\" unCheckedChildren=\"Public\" onChange={(e) => setRoom(room => ({ ...room, isPrivate: !isPrivate }))} />\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Modal title=\"Join room\" closable={false} visible={visibleJoin} footer={[\r\n                <Button onClick={hideModalJoin}>\r\n                    Cancel\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" onClick={joinWithRoomId} >\r\n                    Join\r\n                </Button>,\r\n            ]}>\r\n                <Form name=\"control-hooks\">\r\n                    <Form.Item label=\"Room ID\" name=\"roomShortId\" rules={[{ required: true }]} onChange={(e) => setShortId(e.target.value)}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default RoomsHeader","const Guide = () => {\r\n    const styles = {\r\n        guide: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '95%',\r\n            fontSize: '1.5em',\r\n            backgroundColor: 'rgb(227, 246, 252)',\r\n            margin: 'auto 20px',\r\n            borderRadius: '14px',\r\n        },\r\n    }\r\n    return (\r\n        <div style={styles.guide}>\r\n            <h1>pick a room to start <br></br> or create a new room</h1> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guide;","import { useState } from \"react\";\r\nimport { Icon } from '@iconify/react';\r\nimport RoomsList from \"../Rooms/RoomsList\";\r\nimport Room from \"../Room/Room\";\r\n\r\nconst SearchRoom = ({ rooms, joinRoom, leaveRoom, switchRoom, roomManage, currentRoom, handleSearchRoom, lastMsgRoomId, setLastMsgRoomId }) => {\r\n    const [resultRoom, setResultRoom] = useState([]);\r\n\r\n    const styles = {\r\n        inputSection: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n        },\r\n        input: {\r\n            width: '100%',\r\n            height: '40px',\r\n            borderRadius: '10px',\r\n            borderColor: '#6588DE',\r\n        },\r\n        searchRoom: {\r\n            width: \"100%\",\r\n            height: \"102%\",\r\n            overflowY: 'hidden'\r\n        },\r\n        add: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setResultRoom(rooms.filter(room => room.name.toLowerCase().includes(value.toLowerCase())));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={styles.searchRoom}>\r\n            <div style={styles.inputSection}>\r\n                <Icon style={styles.add} icon=\"bx:bx-arrow-back\" onClick={() => handleSearchRoom()} />\r\n                <input style={styles.input} placeholder=\"search room\" onChange={handleChange} />\r\n            </div>\r\n            <RoomsList currentRoom={currentRoom} rooms={resultRoom} joinRoom={joinRoom} leaveRoom={leaveRoom} switchRoom={switchRoom} roomManage={roomManage} handleSearchRoom={handleSearchRoom} lastMsgRoomId={lastMsgRoomId} setLastMsgRoomId={setLastMsgRoomId} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchRoom;","/* eslint-disable no-unused-vars */\r\nimport { useState, useEffect } from 'react';\r\nimport '../src/App.css';\r\nimport io from 'socket.io-client';\r\nimport ChatWindow from \"./Components/ChatWindow\";\r\nimport Login from './Components/Login/Login';\r\nimport Loading from './Components/Loading';\r\nimport UserArea from \"./Components/UserInformation/UserArea\";\r\nimport RoomsList from \"./Components/Rooms/RoomsList\";\r\nimport RoomsHeader from \"./Components/Rooms/RoomsHeader\";\r\nimport Guide from './Components/Guide/Guide';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { toast } from 'react-toastify'\r\nimport SearchRoom from './Components/List/SearchRoom';\r\nimport { userService } from './service/user';\r\nimport { roomService } from './service/room';\r\nimport { authService } from './service/auth';\r\nimport curRoom from './Components/Room/CurrentRoom'\r\nrequire('dotenv').config()\r\n\r\nfunction App() {\r\n  const [connected, setConnect] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const [isLoading, setLoading] = useState(true)\r\n  const [authenticated, setAuthenticated] = useState(false)\r\n  const [user, setUser] = useState(null)\r\n  const [roomPanel, setPanel] = useState(false)\r\n  const [currentRoom, setCurrentRoom] = useState(null)\r\n  const [lastMsgRoomId, setLastMsgRoomId] = useState({\r\n    roomId: '',\r\n    msg: '',\r\n    date: null\r\n  })\r\n  const [rooms, setRooms] = useState([])\r\n  const [message, setMessage] = useState('')\r\n  const [showSearchRoom, setShowSearchRoom] = useState(false)\r\n  const [lastMsgRoomId1, setLastMsgRoomId1] = useState({\r\n    roomId: '',\r\n    msg: '',\r\n    date: null\r\n  })\r\n\r\n  const socket = io.connect(process.env.REACT_APP_API_URL || 'http://localhost:8080');\r\n\r\n  const limit = useMediaQuery({ maxWidth: 1300 })\r\n  const style = {\r\n    left: {\r\n      width: limit ? '15em' : '25%',\r\n      float: 'left',\r\n      boxSizing: 'border-box',\r\n    },\r\n\r\n    right: {\r\n      width: '100%',\r\n      height: '100%',\r\n      float: 'right',\r\n      position: 'relative',\r\n      flexGrow: 1,\r\n    },\r\n\r\n    userInformation: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      borderBottom: '2px solid #4a336e',\r\n      padding: '20px',\r\n      fontSize: 'large',\r\n      marginBottom: '10px',\r\n    },\r\n  }\r\n\r\n  const logIn = async (user) => {\r\n    try {\r\n      const result = await authService.login(user)\r\n      localStorage.setItem(\"token\", result.data.token);\r\n      setError(result.data.token === null)\r\n      let res = await userService.getUser()\r\n      if (res.status === 200) {\r\n        localStorage.setItem(\"userId\", res.data.msg._id)\r\n        setUser(res.data.msg)\r\n        socket.emit('login', res.data.msg._id)\r\n        res = await roomService.getRooms()\r\n        if (res.status === 200) setRooms(res.data.msg)\r\n        socket.once('connected', () => setConnect(true))\r\n      }\r\n      setAuthenticated(true)\r\n      toast.success('logged in successfully')\r\n    } catch (err) {\r\n      toast.error(`${err?.response?.data?.msg}`)\r\n    }\r\n  }\r\n\r\n  const leaveRoom = async (id) => {\r\n    let res = await roomService.leaveRoom(id)\r\n    if (res.status === 200) {\r\n      socket.emit('leaveRoom', id)\r\n      toast.success('left room successfully')\r\n      const index = rooms.findIndex(room => room._id === id)\r\n      if (index !== -1) {\r\n        rooms.splice(index, 1)\r\n        const tmp = [...rooms]\r\n        tmp.every((room, index) => {\r\n          if (room._id === id) {\r\n            tmp.splice(index, 1)\r\n            return false\r\n          }\r\n          return true\r\n        })\r\n        setCurrentRoom(null)\r\n        curRoom.setCurrentRoom(null)\r\n      }\r\n    } else {\r\n      toast.error(`${res.response.data.msg}`)\r\n    }\r\n  }\r\n\r\n  const kickUser = async (userId, roomId) => {\r\n    socket.emit('kick', userId, roomId)\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on('kicked', (userId, roomId) => {\r\n      if (localStorage.getItem(\"userId\") === userId) {\r\n        toast.error('you have been kicked from this room')\r\n        socket.emit('leaveRoom', roomId)\r\n        const index = rooms.findIndex(room => room._id === roomId)\r\n        if (index !== -1) {\r\n          rooms.splice(index, 1)\r\n          const tmp = [...rooms]\r\n          tmp.every((room, index) => {\r\n            if (room._id === roomId) {\r\n              tmp.splice(index, 1)\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n          setRooms(tmp)\r\n          setCurrentRoom(null)\r\n          curRoom.setCurrentRoom(null)\r\n        }\r\n      }\r\n    })\r\n  }, [socket])\r\n\r\n  const findRoom = async (shortId) => {\r\n    const index = rooms.findIndex(room => room.shortId === shortId)\r\n    if (index === -1) {\r\n      let res = await roomService.attendRoom(shortId)\r\n      if (res.status === 200) {\r\n        setRooms([res.data.msg, ...rooms])\r\n        setCurrentRoom(res.data.msg)\r\n        curRoom.setCurrentRoom(res.data.msg)\r\n      } else if (res.status === 400) {\r\n        setCurrentRoom(res.data.msg)\r\n        curRoom.setCurrentRoom(res.data.msg)\r\n      } else {\r\n        toast.error(`${res.data.msg}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  const joinRoom = async (room) => {\r\n    if (room) {\r\n      try {\r\n        let response = await roomService.createRoom(room)\r\n        const newRoom = response.data.msg\r\n        setRooms([newRoom, ...rooms])\r\n        setCurrentRoom(newRoom)\r\n      } catch (err) {\r\n        toast.error(`${err?.response?.data?.msg}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  const switchRoom = (newRoom) => {\r\n    setLoading(true)\r\n    if (!currentRoom) {\r\n      socket.emit('joinRoom', newRoom?._id)\r\n    }\r\n    if (currentRoom && newRoom?._id !== currentRoom?._id) {\r\n      socket.emit('leaveRoom', currentRoom?._id)\r\n      socket.emit('joinRoom', newRoom?._id)\r\n    }\r\n    setCurrentRoom({...newRoom})\r\n    curRoom.setCurrentRoom({...newRoom})\r\n    setShowSearchRoom(false)\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n  const logout = async () => {\r\n    let userId = localStorage.getItem(\"userId\")\r\n    socket.emit('logout', userId)\r\n    localStorage.clear()\r\n    window.location.reload()\r\n  }\r\n\r\n  const roomManage = (room) => {\r\n    setPanel(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getUserToken() {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token !== null) {\r\n        let res = await userService.getUser()\r\n        if (res.status === 200) {\r\n          localStorage.setItem(\"userId\", res.data.msg._id)\r\n          setAuthenticated(true)\r\n          setUser(res.data.msg)\r\n          res = await roomService.getRooms()\r\n          if (res.status === 200) setRooms(res.data.msg)\r\n          socket.emit('login', res.data.msg._id)\r\n          socket.once('connected', () => setConnect(true))\r\n          setLoading(false)\r\n        }\r\n      } else {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    getUserToken()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (currentRoom) {\r\n      socket.emit('joinRoom', currentRoom._id)\r\n    }\r\n  }, [currentRoom])\r\n\r\n  useEffect(() => {\r\n    if (lastMsgRoomId.roomId.length > 0) {\r\n      let res = rooms.find(room => room._id === lastMsgRoomId.roomId)\r\n      if (lastMsgRoomId.roomId !== rooms[0]?._id) {\r\n        setRooms([res, ...rooms.filter(el => el._id !== res._id)])\r\n      }\r\n    }\r\n    setLastMsgRoomId1({\r\n      roomId: lastMsgRoomId.roomId,\r\n      msg: lastMsgRoomId.msg,\r\n      date: lastMsgRoomId.date\r\n    })\r\n  }, [lastMsgRoomId])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isLoading ? <Loading></Loading> : (authenticated ?\r\n        <div style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n          <div style={{ height: '100%', display: 'flex' }}>\r\n            <div style={style.left}>\r\n              <UserArea user={user} logout={logout}></UserArea>\r\n              {showSearchRoom && <SearchRoom currentRoom={currentRoom} rooms={rooms} joinRoom={joinRoom} leaveRoom={leaveRoom} switchRoom={switchRoom} roomManage={roomManage} handleSearchRoom={setShowSearchRoom} lastMsgRoomId={lastMsgRoomId1} setLastMsgRoomId={setLastMsgRoomId1}/>}\r\n              {!showSearchRoom && <RoomsHeader joinRoom={joinRoom} findRoom={findRoom} handleSearchRoom={setShowSearchRoom}></RoomsHeader>}\r\n              {!showSearchRoom && <RoomsList currentRoom={currentRoom} rooms={rooms} joinRoom={joinRoom} lastMsgRoomId={lastMsgRoomId1} setLastMsgRoomId={setLastMsgRoomId1} leaveRoom={leaveRoom} switchRoom={switchRoom} roomManage={roomManage} />}\r\n            </div>\r\n            {currentRoom ? <div style={style.right}>\r\n              <ChatWindow socket={socket} currentRoom={currentRoom} setLastMsgRoomId={setLastMsgRoomId} leave={leaveRoom} kickUser={kickUser}></ChatWindow>\r\n            </div> : <Guide></Guide>}\r\n          </div>\r\n        </div> : <Login message={message} logIn={logIn} invalid={error} errorToggle={setError}></Login>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}