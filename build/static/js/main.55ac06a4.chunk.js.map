{"version":3,"sources":["firebase/index.js","Components/Message/Input.js","Components/Emoji/Emoji.js","Components/Emoji/EmojiIcon.js","service/fetch.js","service/reaction.js","Components/Message/Dialog.js","Components/Message/Dialogs.js","service/room.js","Components/ChatHeader.js","service/message.js","Components/ChatWindow.js","Components/Intro/Intro.js","service/auth.js","Components/Login/Login.js","Components/Loading.js","service/user.js","Components/UserInformation/UserArea.js","Components/Room/Room.js","Components/Rooms/RoomsList.js","Components/Rooms/RoomsHeader.js","Components/Guide/Guide.js","Components/List/SearchRoom.js","App.js","index.js"],"names":["require","config","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","Input","setDialogs","useState","message","setMessage","showEmoji","setShowEmoji","files","setFiles","setUrls","id","url","name","fileUrl","previewImage","setPreviewImage","limit","useMediaQuery","maxWidth","style","input","display","position","left","top","width","textField","fontSize","outline","paddingLeft","paddingBottom","paddingTop","marginLeft","backgroundColor","color","send","right","cursor","attach","image","icons","file","bottom","fileImage","preview","zIndex","height","background","boxShadow","borderRadius","padding","alignItems","thumbnail","deletePreviewIcon","fileName","addFile","placeItems","border","boxSizing","addIcon","sendMessage","length","promises","map","promise","Promise","resolve","reject","metadata","contentType","type","ref","put","then","snapshot","getDownloadURL","push","all","urls","prevState","PreviewSelectedFiles","item","onClick","filter","icon","src","alt","htmlFor","FormControl","fullWidth","sx","m","TextField","value","onKeyUp","e","key","variant","placeholder","onChange","target","autoComplete","InputProps","endAdornment","InputAdornment","visibility","multiple","i","newFile","Math","random","split","reader","FileReader","readAsDataURL","onloadend","result","onSelect","native","emojiSize","Emoji","dialog","react","self","show","setShow","emoji","transition","emojiList","flexDirection","allEmoji","reaction","reactionId","_id","onMouseLeave","EmojiIcon","emojiIndex","marginRight","GetEmoji","fetchClient","axios","create","baseURL","interceptors","request","use","token","localStorage","getItem","Object","assign","headers","Authorization","reactionService","get","Icons","reactions","paddingRight","iconsInfo","from","reaction_type","Dialog","onDelete","room","socket","kickUser","widget","setWidget","setReaction","setSelf","showTime","setShowTime","selfAndCreator","setSelfAndCreator","fileNumber","setFileNumber","showInfoUser","setShowInfoUser","dialogDiv","marginBottom","bubble","margin","avatar","marginTop","flexShrink","opacity","widgetItem","deleteIcon","pinIcon","container","rowGap","reply","dialogDivInfoNameTime","dialogDivInfoName","fontFamily","fontWeight","dialogDivInfoTime","dialogDivInfoMessageWidget","dialogDivInfoMessage","dialogDivInfoFiles","gridTemplateColumns","gap","des","WebkitLineClamp","WebkitBoxOrient","overflow","textOverflow","workBreak","subInfo","alignContent","subInfoContainer","subInfoFullNameandUsername","subInfoFullName","subInfoUsername","textAlign","kick","useEffect","on","return_dialog","data","userId","creator","off","a","res","status","onMouseEnter","size","subInfoAvatar","fullname","username","moment","createdAt","calendar","content","index","format","pop","classList","toggle","controls","justifyContent","href","rel","objectFit","reaction_id","user_id","tmp","pre_react","every","findIndex","user","splice","emit","Dialogs","dialogs","deleteMessage","MessEnding","useRef","current","scrollIntoView","behavior","roomService","post","TabPane","Tabs","ChatHeader","userOnline","leave","isLoading","setLoading","users","setUsers","visible","setVisible","updateVisible","setUpdateVisible","pinnedMessage","setPinnedMessage","showPinnedMessage","setShowPinnedMessage","roomAvatarPreview","setRoomAvatarPreview","roomAvatar","setRoomAvatar","currentUser","description","isPrivate","roomUpdateInfo","setRoomUpdateInfo","setIsPrivate","onClose","handleUpdateRoomInfo","roomUpdateInfo_","storageRef","toast","success","msg","chatHeader","pinMessageContainer","pinMessageIcon","chatInfo","chatName","numberOfUser","chatTool","tuneIcon","roomInfo","roomTitle","lineHeight","roomName","roomDescription","roomShortId","line","borderBottom","media","overflowY","mediaGrid","members","member","leaveRoom","leaveRoomIcon","with","leaveRoomText","dot","infoIcon","buttonEditDrawer","buttonUpdateDrawer","roomAvatarEdit","plusIconContainer","plusIcon","removeIcon","submitButton","Option","Select","selectBefore","defaultValue","r","pinnedMessages","at","roomId","onFinish","values","usersList","first","emails","join","error","response","addonBefore","placement","extra","accept","newRoomAvatar","copy","shortId","labelCol","span","wrapperCol","Item","label","rules","required","defaultChecked","checkedChildren","unCheckedChildren","pre","prevRoomUpdateInfo","offset","htmlType","defaultActiveKey","tab","List","fields","add","remove","fieldKey","restField","align","block","online","pinMessageInfo","pinMessageTitle","pinMessageContent","pinMessageAvatar","pinMessageName","pinMessageContentText","messageService","ChatWindow","currentRoom","setLastMsgRoomId","setUserOnline","newMessage","setNewMessage","ctRoom","temp","d","Intro","begin","setBegin","text","transform","setTimeout","className","authService","configure","autoClose","draggable","POSITION","BOTTOM_RIGHT","Login","logIn","invalid","errorToggle","setError","email","password","setUser","hover","setHover","code","verifyUser","setUserVerify","formId","setFormId","div","button","loginForm","signupForm","header","createAccount","buttons","forms","alertText","alert","registation","verify","noValidate","startAdornment","Button","preventDefault","Loading","CircularProgress","userService","useStyles","makeStyles","theme","large","spacing","UserArea","logout","classes","userAvatarPreview","setUserAvatarPreview","userInfo","setUserInfo","userAvatar","setUserAvatar","handleEditUserInfo","handleUpdateUserInfo","userInfoToUpdate","userInformation","info","flexGrow","fontStyle","userAvaterEdit","Avatar","closable","title","onCancel","footer","newUserAvatar","pattern","Password","getFieldValue","validator","_","Error","small","Room","lastMsgRoomId","choosen","leaveHandle","roomManage","option","setOption","lastMsg","setLastMsg","lastMsgTime","setLastMsgTime","updateMsg","setUpdateMsg","room_container","maxHeight","roomMessage","roomMessageName","roomMessageLastMessage","messageTime","roomOption","private","lastMessage","lastMessageDate","fromNow","RoomsList","rooms","joinRoom","switchRoom","RoomsHeader","findRoom","handleSearchRoom","visibleCreate","setVisibleCreate","visibleJoin","setVisibleJoin","setRoom","setShortId","roomHeaderContainer","addUser","hideModalCreate","hideModalJoin","Guide","SearchRoom","resultRoom","setResultRoom","styles","inputSection","borderColor","searchRoom","toLowerCase","includes","App","setConnect","authenticated","setAuthenticated","setPanel","setCurrentRoom","setRooms","showSearchRoom","setShowSearchRoom","io","connect","float","setItem","once","console","log","newRoom","clear","window","location","reload","find","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55ac06a4.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nrequire('dotenv').config()\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst storage = firebase.storage()\r\n\r\nexport { storage, firebase as default }\r\n","import SendIcon from '@material-ui/icons/Send'\r\nimport { useState } from 'react'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { TextField, FormControl, InputAdornment } from \"@material-ui/core\"\r\n\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\n\r\nimport { storage } from \"../../firebase/index\"\r\nimport { Icon } from '@iconify/react'\r\n\r\nconst Input = ({ setDialogs }) => {\r\n    const [message, setMessage] = useState('')\r\n    const [showEmoji, setShowEmoji] = useState(false)\r\n    const [files, setFiles] = useState([]);\r\n    const [urls, setUrls] = useState([]);\r\n    const [previewImage, setPreviewImage] = useState([{ id: null, url: null, name: null, fileUrl: null }]);\r\n\r\n    const limit = useMediaQuery({ maxWidth: 900 })\r\n    const limit2 = useMediaQuery({ maxWidth: 600 })\r\n    const style = {\r\n        input: {\r\n            display: 'block',\r\n            position: 'relative',\r\n            // right: '-16px',\r\n            // bottom: '16px',\r\n            // borderSizing: 'border-box',\r\n            left: '10px',\r\n            top: '20px',\r\n            width: '108%',\r\n\r\n        },\r\n\r\n        textField: {\r\n            width: limit2 ? '60%' : limit ? '70%' : '90%',\r\n            // width: '90%',\r\n            fontSize: 'x-large',\r\n            outline: 'none',\r\n            paddingLeft: '20px',\r\n            paddingBottom: '10px',\r\n            paddingTop: '10px',\r\n            marginLeft: '30px',\r\n            backgroundColor: 'transparent',\r\n            color: '#FDFDFD',\r\n        },\r\n\r\n        send: {\r\n            position: 'absolute',\r\n            right: 10,\r\n            cursor: 'pointer',\r\n            color: '#6082B6',\r\n            fontSize: '30px',\r\n        },\r\n\r\n        attach: {\r\n            position: 'absolute',\r\n            right: 100,\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        image: {\r\n            position: 'absolute',\r\n            right: 50,\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        icons: {\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            left: -45,\r\n            color: '#6082B6',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        file: {\r\n            color: '#6082B6',\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            cursor: 'pointer',\r\n            right: 45,\r\n            // left: 12,\r\n            bottom: 14\r\n        },\r\n\r\n        fileImage: {\r\n            color: '#6082B6',\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            cursor: 'pointer',\r\n            right: 50,\r\n            // left: 12,\r\n            bottom: 14\r\n        },\r\n\r\n        preview: {\r\n            zIndex: 1,\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '200px',\r\n            right: '1px',\r\n            bottom: '60px',\r\n            background: '#6588DE',\r\n            boxShadow: '0px 8px 40px rgba(0, 72, 251, 0.3)',\r\n            borderRadius: '14px',\r\n            padding: '20px',\r\n            display: 'flex',\r\n            // justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n\r\n        thumbnail: {\r\n            width: '100px',\r\n            height: '100px',\r\n            borderRadius: '10px'\r\n        },\r\n\r\n        deletePreviewIcon: {\r\n            color: 'red',\r\n            fontSize: '20px',\r\n            cursor: 'pointer',\r\n            position: 'relative',\r\n            top: '-56px',\r\n        },\r\n\r\n        fileName: {\r\n            position: 'relative',\r\n            left: '50px',\r\n            top: '5px',\r\n            color: 'white'\r\n        },\r\n\r\n        addFile: {\r\n            display: 'grid',\r\n            placeItems: 'center',\r\n            position: 'relative',\r\n            bottom: 18,\r\n            left: 18,\r\n            width: '100px',\r\n            height: '100px',\r\n            borderRadius: '10px',\r\n            border: '1px dashed #F9FBFB',\r\n            boxSizing: 'border-box',\r\n            // bottom: '10px'\r\n        },\r\n\r\n        addIcon: {\r\n            fontSize: '50px',\r\n            color: '#F9FBFB',\r\n        }\r\n    }\r\n\r\n    const handleEmojiSelect = (e) => { setMessage((message) => (message += e.native)) }\r\n\r\n    const deletePreview = (id) => {\r\n        setPreviewImage(previewImage.filter(item => item.id !== id))\r\n        // setPreviewFile(previewFile.filter(item => item.id !== id))\r\n        setFiles(files.filter(item => item.id !== id))\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        // convert to base64\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n            const newFile = e.target.files[i]\r\n            newFile[\"id\"] = Math.random()\r\n            let fileUrl = ''\r\n            let name = ''\r\n            // check file type is not image\r\n            if (newFile.type.split('/')[0] !== 'image') {\r\n                fileUrl = 'file.png'\r\n                name = `file ${i + 1}`\r\n            } else {\r\n                fileUrl = null\r\n                name = `image ${i + 1}`\r\n            }\r\n\r\n\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(newFile)\r\n            reader.onloadend = () => {\r\n                setPreviewImage((prevState) => [...prevState, { id: newFile[\"id\"], url: reader.result, name, fileUrl }])\r\n            }\r\n            setFiles((prevState) => [...prevState, newFile])\r\n        }\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        if (message.length > 0 || files.length > 0) {\r\n            const promises = []\r\n            files.map((file) => {\r\n                const promise = new Promise((resolve, reject) => {\r\n                    const metadata = {\r\n                        contentType: file.type\r\n                    }\r\n                    const storageRef = storage.ref(`files/${file.name}`)\r\n                    storageRef.put(file, metadata).then((snapshot) => {\r\n                        snapshot.ref.getDownloadURL().then((url) => {\r\n                            resolve(url)\r\n                        })\r\n                    })\r\n                })\r\n                promises.push(promise)\r\n            })\r\n            Promise.all(promises).then((urls) => {\r\n                setUrls((prevState) => [...prevState, urls])\r\n                setDialogs(message, urls)\r\n            })\r\n        }\r\n        // setPreviewFile([])\r\n        setPreviewImage([])\r\n        setFiles([])\r\n    }\r\n    const PreviewSelectedFiles = () => {\r\n        if (previewImage) {\r\n            return (\r\n                <div style={style.preview}>\r\n                    {previewImage.map((item) => {\r\n                        return (\r\n                            <div key={item.id}>\r\n                                <Icon onClick={() => deletePreview(item.id)} style={style.deletePreviewIcon} icon=\"ep:circle-close\" />\r\n                                <img style={style.thumbnail} src={item.fileUrl ? item.fileUrl : item.url} alt=\"thumb\" />\r\n                                <p style={style.fileName}>{item.name}</p>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div style={style.addFile}>\r\n                        <label htmlFor=\"files\"><Icon style={style.addIcon} icon=\"carbon:add-alt\" /></label>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={style.input}>\r\n            <FormControl fullWidth sx={{ m: 1 }}>\r\n                <TextField\r\n                    style={style.textField}\r\n                    value={message}\r\n                    onKeyUp={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                            sendMessage()\r\n                            setMessage('')\r\n                        }\r\n                    }}\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    placeholder='Type a new message...'\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position='end'>\r\n                                {/* <SendIcon\r\n                                    onClick={() => {\r\n                                        sendMessage()\r\n                                        setMessage('')\r\n                                    }}\r\n                                    color='primary'\r\n                                    fontSize='large'\r\n                                    style={style.send}\r\n                                /> */}\r\n                                <Icon onClick={() => {\r\n                                    sendMessage()\r\n                                    setMessage('')\r\n                                }}\r\n\r\n                                    style={style.send} icon=\"akar-icons:send\" />\r\n\r\n                                <Icon icon=\"fluent:emoji-24-regular\" style={style.icons} onClick={() => { setShowEmoji(!showEmoji) }}></Icon>\r\n                                <label htmlFor=\"files\"><Icon style={style.fileImage} icon=\"akar-icons:image\" /></label>\r\n                                <input id=\"files\" style={{ visibility: \"hidden\" }} type=\"file\" multiple onChange={handleImageChange} />\r\n                                {/* <label htmlFor=\"files\"><Icon style={style.file} icon=\"eva:attach-fill\" /></label>\r\n                                <input id=\"files\" style={{ visibility: \"hidden\" }} type=\"file\" accept=\".pdf, .txt, .docx\" multiple onChange={handleFileChange} /> */}\r\n                                {files.length > 0 && <PreviewSelectedFiles />}\r\n                                {showEmoji && (\r\n                                    <div style={{ position: \"fixed\", bottom: \"80px\", left: \"20%\", zIndex: \"1\" }}>\r\n                                        <Picker\r\n                                            onSelect={handleEmojiSelect}\r\n                                            emojiSize={20} />\r\n                                    </div>\r\n                                )}\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import EmojiEmotionsOutlinedIcon from '@material-ui/icons/EmojiEmotionsOutlined';\r\nimport { useState } from 'react'\r\n\r\nconst Emoji = ({ dialog, react, self }) => {\r\n    const [show, setShow] = useState(false)\r\n\r\n    const style = {\r\n        emoji: {\r\n            borderRadius: '50%',\r\n            padding: '1px',\r\n            cursor: 'pointer',\r\n            transition: 'background 300ms ease-out',\r\n        },\r\n\r\n        emojiList: {  \r\n            display: 'flex',\r\n            position: 'absolute',\r\n            top: -16,\r\n            right: self ? 2 : 'none',\r\n            flexDirection: self ? 'row-reverse' : 'row',\r\n        },\r\n\r\n        allEmoji: { \r\n            position: 'relative',   \r\n        }\r\n    }\r\n\r\n    const setEmoji = () => {\r\n        if (show)\r\n            setShow(false)\r\n        else\r\n            setShow(true)\r\n    }\r\n\r\n    const reaction = (reactionId) => {\r\n        react(reactionId, dialog._id)\r\n    }\r\n\r\n    return (\r\n        <div  style={style.allEmoji} onMouseLeave={() => setShow(false)}>\r\n            {\r\n                show && <div style={style.emojiList}>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(1)}>❤️</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(2)}>😂</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(3)}>😮</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(4)}>😢</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(5)}>😠</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(6)}>👍</div>\r\n                </div>\r\n            }\r\n            <EmojiEmotionsOutlinedIcon\r\n                style={style.emoji}\r\n                onClick={() => setEmoji()}\r\n            ></EmojiEmotionsOutlinedIcon>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emoji","const EmojiIcon = ({emojiIndex}) => {\r\n    const style = {\r\n        marginRight: '2px',\r\n        cursor: 'pointer',\r\n        fontSize: 'small'\r\n    }\r\n    const GetEmoji = () => {\r\n        switch (emojiIndex)\r\n        {\r\n            case 1:\r\n                return <div style={style}>❤️</div>\r\n            case 2:\r\n                return <div style={style}>😂</div>\r\n            case 3:\r\n                return <div style={style}>😮</div>\r\n            case 4:\r\n                return <div style={style}>😢</div>\r\n            case 5:\r\n                return <div style={style}>😠</div>\r\n            case 6:\r\n                return <div style={style}>👍</div>\r\n        }\r\n    }\r\n    return (\r\n        <GetEmoji></GetEmoji>\r\n    )\r\n}\r\n\r\nexport default EmojiIcon","import axios from 'axios';\r\nrequire('dotenv').config()\r\n\r\nconst fetchClient = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\r\n});\r\n\r\nconst beforeRequest = (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        Object.assign(config.headers, { Authorization: `Bearer ${token}` });\r\n    }\r\n    return config;\r\n};\r\n\r\nfetchClient.interceptors.request.use(beforeRequest);\r\n\r\nexport { fetchClient };","import { fetchClient } from './fetch';\r\n\r\nconst getReactionsByMessage = (id) => fetchClient.get(`/reaction/message/${id}/retrieve`);\r\n\r\nexport const reactionService = {\r\n    getReactionsByMessage\r\n};","// import Avatar from '@material-ui/core/Avatar'\r\nimport { useState, useEffect } from 'react'\r\nimport Emoji from '../Emoji/Emoji';\r\nimport EmojiIcon from '../Emoji/EmojiIcon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PushPinIcon from '@mui/icons-material/PushPin';\r\nimport moment from 'moment';\r\nimport { reactionService } from \"../../service/reaction\"\r\nimport { Avatar, Tooltip } from 'antd';\r\n\r\n\r\nconst Icons = ({ reactions, self }) => {\r\n    const style = {\r\n        icons: {\r\n            display: 'flex',\r\n            position: 'absolute',\r\n            right: self && 0,\r\n            left: !self && 0,\r\n            bottom: -9,\r\n            borderRadius: '25px',\r\n            backgroundColor: '#aaa',\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={style.iconsInfo}>\r\n            <div style={style.icons}>\r\n                {reactions.map((reaction) => {\r\n                    if (reaction.from.length !== 0) {\r\n                        return <EmojiIcon key={reaction.reaction_type} emojiIndex={reaction.reaction_type}></EmojiIcon>\r\n                    }\r\n                    return null\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Dialog = ({ dialog, onDelete, room, socket, kickUser }) => {\r\n    const [widget, setWidget] = useState(false)\r\n    const [enter, setEnter] = useState(false)\r\n    const [reactions, setReaction] = useState([])\r\n    const [self, setSelf] = useState(null)\r\n    const [showTime, setShowTime] = useState(false)\r\n    const [selfAndCreator, setSelfAndCreator] = useState(null)\r\n    const [fileNumber, setFileNumber] = useState(0)\r\n    const [showInfoUser, setShowInfoUser] = useState(false)\r\n    const style = {\r\n        dialogDiv: {\r\n            width: '95%',\r\n            position: 'relative',\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'row',\r\n            marginLeft: '20px',\r\n            marginRight: '20px',\r\n            alignItems: 'flex-start',\r\n            padding: '0px',\r\n            marginBottom: '30px',\r\n        },\r\n\r\n        bubble: {\r\n            backgroundColor: self ? '#32a6b8' : '#c27f67',\r\n            color: '#ffffff',\r\n            padding: '5px 10px',\r\n            margin: '0px',\r\n            borderRadius: '25px',\r\n            maxWidth: '100%',\r\n            position: 'relative',\r\n        },\r\n\r\n        avatar: {\r\n            position: 'relative',\r\n            marginTop: '15px',\r\n            background: `#${dialog.from.color}`,\r\n            flexShrink: 0,\r\n        },\r\n\r\n        widget: {\r\n            flexShrink: 0,\r\n            opacity: widget ? 1 : 0,\r\n            transition: 'opacity 250ms',\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'flex',\r\n            flexShrink: 0,\r\n        },\r\n\r\n        widgetItem: {\r\n            cursor: 'pointer',\r\n            borderRadius: '50%',\r\n        },\r\n\r\n        deleteIcon: {\r\n            borderRadius: '50%',\r\n            padding: '1px',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        pinIcon: {\r\n            borderRadius: '50%',\r\n            padding: '1px',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: self ? 'flex-end' : 'flex-start',\r\n            rowGap: '1em',\r\n            padding: '10px',\r\n            borderRadius: '14px',\r\n        },\r\n\r\n        reply: {\r\n            display: 'block',\r\n        },\r\n\r\n        dialogDivInfoNameTime: {\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'flex',\r\n            alignItems: 'baseline',\r\n            width: '100%',\r\n            marginBottom: '-10px',\r\n        },\r\n        dialogDivInfoName: {\r\n            fontFamily: 'Poppins',\r\n            color: '#52585D',\r\n            fontSize: '20px',\r\n            fontWeight: '600',\r\n            marginLeft: self ? '10px' : '0px',\r\n        },\r\n        dialogDivInfoTime: {\r\n            fontFamily: 'Poppins',\r\n            opacity: showTime ? 1 : 0,\r\n            transition: 'opacity 250ms',\r\n            color: '#52585D',\r\n            fontSize: '16px',\r\n            marginLeft: self ? '0px' : '10px',\r\n        },\r\n\r\n        dialogDivInfoMessageWidget: {\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'flex',\r\n        },\r\n\r\n        dialogDivInfoMessage: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: self ? 'flex-end' : 'flex-start',\r\n            margin: '0xp',\r\n        },\r\n\r\n        dialogDivInfoFiles: {\r\n            display: 'grid',\r\n            gridTemplateColumns: fileNumber === 1 ? 'repeat(1, 1fr)' : fileNumber == 2 ? 'repeat(2, 1fr)' : 'repeat(3, 1fr)',\r\n            gap: '10px',\r\n        },\r\n\r\n        des: {\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '150px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        subInfo: {\r\n            position: 'absolute',\r\n            backgroundColor: 'rgb(227, 246, 252)',\r\n            bottom: '80px',\r\n            left: !self ? '-11px': 'none',\r\n            right: self ? '-11px': 'none',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '10px',\r\n            padding: '10px',\r\n            borderRadius: '20px',\r\n            alignContent: 'flex-end',\r\n            alignItems: 'center',\r\n        },\r\n\r\n        subInfoContainer: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '10px'\r\n        },\r\n\r\n        subInfoFullNameandUsername: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '3px',\r\n        },\r\n\r\n        subInfoFullName: {\r\n            fontSize: '20px',\r\n            color: 'rgb(82, 88, 93)',\r\n        },\r\n\r\n        subInfoUsername: {\r\n            color: 'rgb(255, 255, 255)',\r\n            background: 'rgb(101, 136, 222)',\r\n            padding: '4px',\r\n            borderRadius: '10px',\r\n            fontSize: '10px',\r\n            textAlign: 'center',\r\n        },\r\n\r\n        kick: {\r\n            fontSize: '15px',\r\n            margin: '0',\r\n            border: '1px solid red',\r\n            fontWeight: 600,\r\n            color: 'red',\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            borderRadius: '10px',\r\n            cursor: 'pointer',\r\n        }\r\n    }\r\n\r\n    const react = (reaction_id, id) => {\r\n        const user_id = localStorage.getItem('userId')\r\n        const tmp = [...reactions]\r\n        let pre_react = 0\r\n\r\n        tmp.every(react => {\r\n            const index = react.from.findIndex(user => user.userId === user_id)\r\n            if (index !== -1) {\r\n                react.from.splice(index, 1)\r\n                pre_react = react.reaction_type\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n\r\n        if (pre_react !== reaction_id) {\r\n            const index = tmp.findIndex(react => react.reaction_type === reaction_id)\r\n            if (index !== -1) {\r\n                tmp[index].from.push({ userId: user_id, username: ' ' })\r\n            } else {\r\n                tmp.push({\r\n                    reaction_type: reaction_id,\r\n                    from: [{\r\n                        userId: user_id,\r\n                        username: ' '\r\n                    }]\r\n                })\r\n            }\r\n        }\r\n\r\n        setReaction([...tmp])\r\n\r\n        socket.emit('get-reaction', dialog, reaction_id, user_id, room._id)\r\n    }\r\n\r\n    const setPin = () => {\r\n        socket.emit('set-pin', dialog, room._id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('return-reaction', (return_dialog) => {\r\n            if (dialog._id === return_dialog._id) {\r\n                setReaction(return_dialog.data)\r\n            }\r\n        })\r\n\r\n        if (self === null) {\r\n            const userId = localStorage.getItem('userId')\r\n            setSelf(userId === dialog.from.userId)\r\n            if (userId === room.creator)\r\n                setSelfAndCreator(true)\r\n        }\r\n\r\n        return () => {\r\n            socket.off('return-reaction')\r\n        }\r\n    }, [dialog, socket])\r\n\r\n\r\n    useEffect(async () => {\r\n        let res = await reactionService.getReactionsByMessage(dialog._id)\r\n        if (res.status === 200)\r\n            setReaction(res.data.data)\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setFileNumber(dialog.urls.length)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={style.dialogDiv} onMouseEnter={() => setShowTime(true)} onMouseLeave={() => setShowTime(false)}>\r\n            {!self &&\r\n                <div>\r\n                    <Avatar onMouseEnter={() => setShowInfoUser(!showInfoUser)} size={60} style={style.avatar} src={dialog.from.avatar}></Avatar>\r\n                    {showInfoUser && <div style={style.subInfo}>\r\n                        <div style={style.subInfoContainer}>\r\n                            <Avatar size={70} style={style.subInfoAvatar} src={dialog.from.avatar}></Avatar>\r\n                            <div style={style.subInfoFullNameandUsername}>\r\n                                <div style={style.subInfoFullName}>{dialog.from.fullname}</div>\r\n                                <div style={style.subInfoUsername}>{dialog.from.username}</div>\r\n                            </div>\r\n                        </div>\r\n                        {localStorage.getItem(\"userId\") === room.creator && <p style={style.kick} onClick={() => kickUser(dialog.from.userId, room._id)} >Kick</p>}\r\n                    </div>}\r\n                </div>\r\n            }\r\n            {self &&\r\n                <div>\r\n                    <Avatar onMouseEnter={() => setShowInfoUser(!showInfoUser)} size={60} style={style.avatar} src={dialog.from.avatar}></Avatar>\r\n                    {showInfoUser && <div style={style.subInfo}>\r\n                        <div style={style.subInfoContainer}>\r\n                            <Avatar size={70} style={style.subInfoAvatar} src={dialog.from.avatar}></Avatar>\r\n                            <div style={style.subInfoFullNameandUsername}>\r\n                                <div style={style.subInfoFullName}>{dialog.from.fullname}</div>\r\n                                <div style={style.subInfoUsername}>{dialog.from.username}</div>\r\n                            </div>\r\n                        </div>\r\n                        <p style={style.kick} onClick={() => kickUser(dialog.from.userId, room._id)} >Kick</p>\r\n                    </div>}\r\n                </div>\r\n            }\r\n            <div style={style.container} onMouseEnter={() => setWidget(true)} onMouseLeave={() => setWidget(false)}>\r\n                {self && <div style={style.dialogDivInfoNameTime}>\r\n                    <div style={style.dialogDivInfoName}>{dialog.from.username}</div>\r\n                    <div style={style.dialogDivInfoTime}>{moment(dialog.createdAt).calendar()}</div>\r\n                </div>}\r\n                {!self && <div style={style.dialogDivInfoNameTime}>\r\n                    <div style={style.dialogDivInfoName}>{dialog.from.username}</div>\r\n                    <div style={style.dialogDivInfoTime}>{moment(dialog.createdAt).calendar()}</div>\r\n                </div>}\r\n\r\n                <div style={style.dialogDivInfoMessageWidget}>\r\n                    <div style={style.dialogDivInfoMessage}>\r\n                        {dialog.content && <p style={style.bubble}>{dialog.content}</p>}\r\n                        <Icons reactions={reactions} self={self} />\r\n                        <div style={style.dialogDivInfoFiles}>\r\n                            {\r\n                                dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                    let format = url.split('.').pop().split('?')[0]\r\n                                    if (format === 'mp4') {\r\n                                        return (\r\n                                            <video key={index} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} style={{ width: '500px', marginBottom: '10px', transition: '1s' }} controls>\r\n                                                <source src={url} type=\"video/mp4\" />\r\n                                            </video>\r\n                                        )\r\n                                    } else if (format === 'pdf') {\r\n                                        return (\r\n                                            <a style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                <img src='https://firebasestorage.googleapis.com/v0/b/chat-cord-712bf.appspot.com/o/default-avatar%2Fpdf_file_icon.png?alt=media&token=f12bd4a4-9d41-4096-9596-b3dfeb8d24b5' style={{ width: '50px', marginBottom: '10px', marginRight: '10px' }} />\r\n                                                <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                            </a>\r\n                                        )\r\n                                    } else if (format === 'docx' || format === 'doc') {\r\n                                        return (\r\n                                            <a style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                <img src='https://firebasestorage.googleapis.com/v0/b/chat-cord-712bf.appspot.com/o/default-avatar%2Fdocx_file_icon.png?alt=media&token=8c3eeb46-718b-4277-862f-da3236fb6182' style={{ width: '50px', marginBottom: '10px', marginRight: '10px', }} />\r\n                                                <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                            </a>\r\n                                        )\r\n                                    }\r\n                                    else if (format === 'jpg' || format === 'png' || format === 'jpeg') {\r\n                                        return (\r\n                                            <img key={index} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} src={url} style={{ width: '100%', height: '150px', objectFit: 'cover', marginBottom: '10px', transition: '1s' }} />\r\n                                        )\r\n                                    }\r\n                                })\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={style.widget}>\r\n                        <Emoji dialog={dialog} react={react} self={self}></Emoji>\r\n                        <PushPinIcon style={style.pinIcon} onClick={() => {\r\n                            setPin()\r\n                        }}></PushPinIcon>\r\n                        {(self || selfAndCreator) &&\r\n                            <DeleteIcon\r\n                                style={style.deleteIcon}\r\n                                onClick={() => {\r\n                                    onDelete(dialog, room.creator)\r\n                                }}\r\n                            >\r\n                            </DeleteIcon>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dialog","import Dialog from './Dialog'\r\nimport { useEffect, useRef } from 'react'\r\n// import { padding } from '@mui/system'\r\n\r\nconst Dialogs = ({socket, room, dialogs, deleteMessage, kickUser}) => {\r\n    const style = {\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '77vh',\r\n        overflow: 'auto',\r\n        margin: '10px 0px 0px 10px',\r\n    }\r\n\r\n    const MessEnding = useRef(null)\r\n\r\n    useEffect(() => {\r\n        MessEnding.current.scrollIntoView({ behavior: 'smooth' })\r\n    }, [dialogs])\r\n\r\n    return (\r\n        <div style={style}>\r\n            {dialogs.map((dialog, index) => {\r\n                return <Dialog key={index} socket={socket} dialog={dialog} onDelete={deleteMessage} room={room} kickUser={kickUser}></Dialog>\r\n            })}\r\n            <div ref={MessEnding} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import { fetchClient } from './fetch';\r\n\r\nconst getRooms = () => fetchClient.get('/room/retrieve');\r\nconst getRoom = (id) => fetchClient.get(`/room/${id}`);\r\nconst createRoom = (room) => fetchClient.post('/room/create', room);\r\nconst updateRoom = (id, room) => fetchClient.put(`/room/${id}`, room);\r\nconst attendRoom = (id) => fetchClient.post(`/room/${id}/attend`);\r\nconst addMember = (id, user) => fetchClient.post(`/room/${id}/addMember`, user);\r\nconst leaveRoom = (id) => fetchClient.post(`/room/${id}/leave`);\r\nconst getMembers = (id) => fetchClient.get(`/room/${id}/members`);\r\nconst getUserOnline = (id) => fetchClient.get(`/room/${id}/userOnline`);\r\n\r\nexport const roomService = {\r\n    getRooms,\r\n    getRoom,\r\n    createRoom,\r\n    updateRoom,\r\n    attendRoom,\r\n    addMember,\r\n    leaveRoom,\r\n    getMembers\r\n};","import { Input, Select, Avatar, Drawer, Tabs, Space, Form, Switch, Button } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport copy from 'copy-to-clipboard';\r\nimport { toast } from 'react-toastify'\r\nimport { Icon } from '@iconify/react';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { storage } from \"../firebase/index\"\r\nimport { roomService } from \"../service/room\"\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst ChatHeader = ({ userOnline, room, dialogs, leave, socket }) => {\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    const [visible, setVisible] = useState(false)\r\n    const [updateVisible, setUpdateVisible] = useState(false)\r\n    const [pinnedMessage, setPinnedMessage] = useState(false);\r\n    const [showPinnedMessage, setShowPinnedMessage] = useState(false);\r\n    var user = []\r\n    const [roomAvatarPreview, setRoomAvatarPreview] = useState(null)\r\n    const [roomAvatar, setRoomAvatar] = useState()\r\n    const currentUser = localStorage.getItem('userId')\r\n    const [roomUpdateInfo, setRoomUpdateInfo] = useState({\r\n        name: '',\r\n        description: '',\r\n        isPrivate: room.isPrivate,\r\n        avatar: '',\r\n    })\r\n    const [isPrivate, setIsPrivate] = useState(room.isPrivate)\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n    const handleEditInfo = () => {\r\n        setUpdateVisible(!updateVisible);\r\n    }\r\n\r\n    const handleUpdateRoomAvatar = (e) => {\r\n        const newRoomAvatar = e.target.files[0]\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(newRoomAvatar)\r\n        reader.onloadend = () => {\r\n            setRoomAvatarPreview(reader.result)\r\n        }\r\n        setRoomAvatar(newRoomAvatar)\r\n    }\r\n\r\n\r\n    const handleUpdateRoomInfo = async () => {\r\n        let roomUpdateInfo_ = roomUpdateInfo\r\n        if (roomAvatar) {\r\n            const metadata = {\r\n                contentType: roomAvatar.type\r\n            }\r\n            const storageRef = storage.ref(`roomAvatars/${roomAvatar.name}`)\r\n            const snapshot = await storageRef.put(roomAvatar, metadata)\r\n            const url = await snapshot.ref.getDownloadURL()\r\n            roomUpdateInfo_.avatar = url\r\n        }\r\n        let res = await roomService.updateRoom(room?._id, roomUpdateInfo_)\r\n        if (res.status === 200)\r\n            toast.success(res?.data?.msg)\r\n        setRoomAvatarPreview(roomUpdateInfo.avatar)\r\n        setRoomAvatar(null)\r\n        setUpdateVisible(false)\r\n    }\r\n\r\n    const style = {\r\n        chatHeader: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: '50px',\r\n            backgroundColor: '#6588DE',\r\n            height: '20px',\r\n            width: '100%',\r\n            margin: '0px 0px 0px 10px',\r\n            position: 'relative',\r\n        },\r\n\r\n        pinMessageContainer: {\r\n            // opacity: showPinnedMessage || room?.pinnedMessages?.length > 0 ? 1 : 0,\r\n            position: 'absolute',\r\n            backgroundColor: '#E3F6FC',\r\n            bottom: '-67px',\r\n            left: '0px',\r\n            zIndex: '1',\r\n            width: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '10px',\r\n        },\r\n\r\n        pinMessageIcon: {\r\n\r\n        },\r\n\r\n        chatInfo: {\r\n            margin: '5px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        chatName: {\r\n            margin: '0px',\r\n            fontSize: '20px',\r\n            fontWeight: 'bold',\r\n            color: '#FDFDFE',\r\n        },\r\n\r\n        numberOfUser: {\r\n            margin: '0px',\r\n            fontSize: '14px',\r\n            color: '#F2F6F7',\r\n        },\r\n\r\n        chatTool: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            gap: '10px',\r\n\r\n        },\r\n\r\n        tuneIcon: {\r\n            cursor: 'pointer',\r\n            fontSize: '20px',\r\n        },\r\n\r\n        roomInfo: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n\r\n        roomTitle: {\r\n            marginBottom: '30px',\r\n            fontWeight: 600,\r\n            fontSize: '18px',\r\n            lineHeight: '27px',\r\n            color: '#6588DE',\r\n        },\r\n\r\n        roomAvatar: {\r\n            marginBottom: '20px',\r\n            border: '4px solid #' + room.color,\r\n            borderRadius: '115px',\r\n        },\r\n\r\n        roomName: {\r\n            marginBottom: '6px',\r\n            fontWeight: 600,\r\n            fontSize: '16px',\r\n            lineHeight: '24px',\r\n            color: '#6588DE',\r\n        },\r\n\r\n        roomDescription: {\r\n            marginBottom: '20px',\r\n            fontSize: '12px',\r\n            lineHeight: '150.5%',\r\n            color: '#52585D',\r\n        },\r\n\r\n        roomShortId: {\r\n            cursor: 'pointer',\r\n            fontSize: '20px',\r\n            marginBottom: '30px',\r\n        },\r\n\r\n        line: {\r\n            width: '280px',\r\n            height: '0px',\r\n            borderBottom: '1px solid #D0D9DF',\r\n            marginBottom: '20px',\r\n        },\r\n\r\n        media: {\r\n            height: '400px',\r\n            overflowY: 'auto',\r\n            display: 'block',\r\n        },\r\n\r\n        mediaGrid: {\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(3, 1fr)',\r\n            gap: '10px',\r\n            maxWidth: '100%',\r\n        },\r\n\r\n        file: {\r\n            display: 'flex',\r\n            height: '400px',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n        },\r\n\r\n        members: {\r\n            display: 'flex',\r\n            height: '400px',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            gap: '10px',\r\n            overflowY: 'auto',\r\n        },\r\n\r\n        member: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'flex-end',\r\n            gap: '10px',\r\n        },\r\n\r\n\r\n        leaveRoom: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            cursor: 'pointer',\r\n            fontSize: '20px',\r\n            borderRadius: '8px',\r\n            alignItems: 'center',\r\n            gap: '11px',\r\n            border: '1px solid #6588DE',\r\n            height: '39px',\r\n        },\r\n\r\n        leaveRoomIcon: {\r\n            color: '#6588DE',\r\n            with: '18px',\r\n            height: '20px',\r\n            marginLeft: '14px',\r\n        },\r\n\r\n        leaveRoomText: {\r\n            margin: '0px',\r\n            with: '72px',\r\n            fontWeight: 500,\r\n            fontSize: '12px',\r\n            lineHeight: '18px',\r\n            color: '#6588DE'\r\n        },\r\n\r\n        avatar: {\r\n            position: 'relative',\r\n        },\r\n\r\n        dot: {\r\n            position: 'absolute',\r\n            bottom: '6px',\r\n            right: '3px',\r\n            height: '8px',\r\n            width: '8px',\r\n            borderRadius: '50%',\r\n            backgroundColor: '#46D362',\r\n        },\r\n\r\n        des: {\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '320px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        infoIcon: {\r\n            position: 'relative',\r\n            top: '5px'\r\n        },\r\n\r\n        buttonEditDrawer: {\r\n            border: 'none',\r\n            backgroundColor: '#E3F6FC',\r\n            color: '#6588DE',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        buttonUpdateDrawer: {\r\n            position: 'relative',\r\n            left: '50%',\r\n            marginRight: '5px',\r\n        },\r\n\r\n        roomAvatarEdit: {\r\n            width: 'fit-content',\r\n            display: 'block',\r\n            margin: 'auto',\r\n            border: '4px solid #' + room.color,\r\n            borderRadius: '115px',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        plusIconContainer: {\r\n            width: 55,\r\n            height: 55,\r\n            borderRadius: '50%',\r\n            border: '1px dashed #6ECB63',\r\n            display: 'grid',\r\n            placeItems: 'center',\r\n            backgroundColor: 'rgb(227, 246, 252)'\r\n        },\r\n\r\n        plusIcon: {\r\n            fontSize: '20px',\r\n        },\r\n\r\n        removeIcon: {\r\n            fontSize: '18px',\r\n            color: '#E74C3C',\r\n        },\r\n\r\n        submitButton: {\r\n            borderRadius: '5px'\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const { Option } = Select;\r\n\r\n    const selectBefore = (\r\n        <Select defaultValue=\"Message\">\r\n            <Option value=\"Message\">Message</Option>\r\n            <Option value=\"User\">User</Option>\r\n        </Select>\r\n    );\r\n\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        let res = await roomService.getMembers(room?._id)\r\n        if (res.status === 200)\r\n            setUsers(res.data.msg)\r\n\r\n        res = await roomService.getRoom(room?._id)\r\n        let r = res.data.msg\r\n        if (r?.pinnedMessages?.length > 0) {\r\n            setShowPinnedMessage(true)\r\n            setPinnedMessage(r.pinnedMessages.at(-1))\r\n        }\r\n        else\r\n            setShowPinnedMessage(false)\r\n        setLoading(false)\r\n    }, [room])\r\n\r\n    useEffect(() => {\r\n        socket.on('new-pinned-message', (dialog, roomId, r) => {\r\n            if (roomId === room._id) {\r\n                if (r.pinnedMessages.length === 0)\r\n                    setShowPinnedMessage(false)\r\n                else {\r\n                    setShowPinnedMessage(true)\r\n                    setPinnedMessage(r.pinnedMessages.at(-1))\r\n                }\r\n            }\r\n        })\r\n    }, [socket])\r\n\r\n    const copyToClipboard = () => {\r\n        copy(room?.shortId)\r\n        toast.success('Copied to clipboard')\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        user = []\r\n        for (let i = 0; i < values.usersList.length; i++) {\r\n            user.push(values.usersList[i].first)\r\n        }\r\n        try {\r\n            let res = await roomService.addMember(room?._id, { emails: user.join(',') })\r\n            if (res.status === 200) {\r\n                toast.success(res.data.msg)\r\n            }\r\n        } catch (e) {\r\n            toast.error(`${e.response.data.msg}`)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        !isLoading && <div style={style.chatHeader}>\r\n            <div style={style.chatInfo} onClick={showDrawer}>\r\n                <p style={style.chatName}>{room?.name} <Icon style={style.infoIcon} icon=\"ant-design:info-circle-outlined\" /></p>\r\n                <p style={style.numberOfUser}>{users?.length + ' members'}</p>\r\n            </div>\r\n            <div style={style.chatTool}>\r\n                <Input style={style.input} autoComplete='off' addonBefore={selectBefore} placeholder=\"Type user or a message you what to search...\" />\r\n            </div>\r\n            <Drawer\r\n                placement=\"right\"\r\n                onClose={onClose}\r\n                visible={visible}\r\n                extra={\r\n                    <Space>\r\n                        <button onClick={handleEditInfo} style={style.buttonEditDrawer}>Edit</button>\r\n                    </Space>\r\n                }\r\n            >\r\n                <div style={style.roomInfo}>\r\n                    <div style={style.roomTitle}>Room Info</div>\r\n                    {!updateVisible && <div style={style.roomAvatar}><Avatar size={200} src={room.avatar}></Avatar></div>}\r\n                    {updateVisible &&\r\n                        <div>\r\n                            <label style={style.roomAvatarEdit} htmlFor=\"roomAvatar\"><Avatar size={200} src={roomAvatarPreview ? roomAvatarPreview : room.avatar}></Avatar></label>\r\n                            <input id=\"roomAvatar\" style={{ visibility: \"hidden\" }} accept='image' type=\"file\" onChange={handleUpdateRoomAvatar} />\r\n                        </div>\r\n                    }\r\n                    {!room.isPrivate && <div style={style.roomShortId} onClick={copyToClipboard}>{room?.shortId}</div>}\r\n                    <div style={style.roomName}>{room?.name}</div>\r\n                    <div style={style.roomDescription}>{room?.description}</div>\r\n                    <div style={style.line}></div>\r\n                </div>\r\n                {updateVisible ?\r\n                    <Form\r\n                        labelCol={{ span: 10 }}\r\n                        wrapperCol={{ span: 20 }}\r\n                        onFinish={handleUpdateRoomInfo}\r\n                    >\r\n                        <Form.Item label=\"Room name\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input room name!'\r\n                            },\r\n                        ]}>\r\n                            <Input defaultValue={room.name} onChange={(e) => setRoomUpdateInfo({ ...roomUpdateInfo, name: e.target.value })} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Description\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input room description!'\r\n                            },\r\n                        ]}>\r\n                            <Input defaultValue={room.description} onChange={(e) => setRoomUpdateInfo({ ...roomUpdateInfo, description: e.target.value })} />\r\n                        </Form.Item>\r\n\r\n                        {\r\n                            currentUser == room.creator && <Form.Item label=\"Mode\">\r\n                                <Switch defaultChecked={isPrivate} checkedChildren=\"Private\" unCheckedChildren=\"Public\" onClick={(e) => { setIsPrivate(pre => !pre); setRoomUpdateInfo(prevRoomUpdateInfo => { return ({ ...prevRoomUpdateInfo, isPrivate: !prevRoomUpdateInfo.isPrivate }) }) }} />\r\n                            </Form.Item>\r\n                        }\r\n\r\n                        <Form.Item wrapperCol={{ offset: 10, span: 16 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    :\r\n                    <Tabs style={{ marginBottom: '25px' }} defaultActiveKey=\"1\">\r\n                        <TabPane tab=\"Images\" key=\"1\">\r\n                            <div style={style.media}>\r\n                                <div style={style.mediaGrid}>\r\n                                    {\r\n                                        dialogs.map(dialog => {\r\n                                            return dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                                let format = url.split('.').pop().split('?')[0]\r\n                                                if (format === 'jpg' || format === 'png' || format === 'jpeg') {\r\n                                                    return <img key={index} src={url} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} style={{ width: '100%', height: '100px', objectFit: 'cover', marginBottom: '10px', transition: '1s' }} />\r\n                                                }\r\n                                            })\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab=\"Videos\" key=\"2\">\r\n                            <div style={style.media}>\r\n                                <div style={style.mediaGrid}>\r\n                                    {\r\n                                        dialogs.map(dialog => {\r\n                                            return dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                                let format = url.split('.').pop().split('?')[0]\r\n                                                if (format === 'mp4') {\r\n                                                    return (\r\n                                                        <video key={index} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} style={{ width: '100%', height: '100px', objectFit: 'cover', marginBottom: '10px', transition: '1s' }} controls>\r\n                                                            <source src={url} type=\"video/mp4\" />\r\n                                                        </video>\r\n                                                    )\r\n                                                }\r\n                                            })\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab=\"Files\" key=\"3\">\r\n                            <div style={style.file}>\r\n                                {\r\n                                    dialogs.map(dialog => {\r\n                                        return dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                            let format = url.split('.').pop().split('?')[0]\r\n                                            if (format === 'pdf') {\r\n                                                return (\r\n                                                    <a key={index} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                        <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                                    </a>\r\n                                                )\r\n                                            } else if (format === 'docx') {\r\n                                                return (\r\n                                                    <a key={index} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                        <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                                    </a>\r\n                                                )\r\n                                            }\r\n                                        })\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab=\"Members\" key=\"4\">\r\n                            <div style={style.members}>\r\n                                {\r\n                                    ((currentUser == room.creator && room.isPrivate) || !room.isPrivate) &&\r\n                                    <Form name=\"add user dynamic form\" autoComplete=\"off\" onFinish={onFinish}>\r\n                                        <Form.List name=\"usersList\">\r\n                                            {(fields, { add, remove }) => (\r\n                                                <>\r\n                                                    {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                                                        <Space key={key} style={{ display: 'flex', marginBottom: 2 }} align=\"baseline\">\r\n                                                            <Form.Item\r\n                                                                {...restField}\r\n                                                                name={[name, 'first']}\r\n                                                                fieldKey={[fieldKey, 'first']}\r\n                                                                rules={[{ type: 'email', required: true, message: 'Email is required!' }]}\r\n                                                            >\r\n                                                                <Input placeholder=\"Email\" />\r\n                                                            </Form.Item>\r\n                                                            <Icon style={style.removeIcon} icon=\"gg:remove\" onClick={() => remove(name)} />\r\n                                                            {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\r\n                                                        </Space>\r\n                                                    ))}\r\n                                                    <Form.Item>\r\n                                                        <Button onClick={() => add()} block style={style.plusIconContainer}><Icon style={style.plusIcon} icon=\"carbon:add\" /></Button>\r\n                                                    </Form.Item>\r\n                                                </>\r\n                                            )}\r\n                                        </Form.List>\r\n                                        <Form.Item>\r\n                                            <Button style={style.submitButton} type='primary' htmlType=\"submit\">\r\n                                                Add\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                }\r\n                                {\r\n                                    users?.map((user, index) => {\r\n                                        return (\r\n                                            <div key={index} style={style.member}>\r\n                                                <div style={style.avatar}>\r\n                                                    <Avatar style={{ backgroundColor: '#' + user?.color }} size={50} src={user?.avatar}></Avatar>\r\n                                                    {userOnline && user.online && <span style={style.dot}></span>}\r\n                                                </div>\r\n                                                <p style={{ fontSize: '16px' }}>{user?.fullname}</p>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                        </TabPane>\r\n                    </Tabs>\r\n                }\r\n                {!updateVisible &&\r\n                    <div style={style.leaveRoom}>\r\n                        <Icon style={style.leaveRoomIcon} icon=\"pepicons:leave\" />\r\n                        <p style={style.leaveRoomText} onClick={() => {\r\n                            onClose()\r\n                            leave(room._id)\r\n                        }\r\n                        }>Leave Room</p>\r\n                    </div>\r\n                }\r\n            </Drawer>\r\n            {showPinnedMessage && <div style={style.pinMessageContainer}>\r\n                <Icon style={style.pinMessageIcon} icon=\"bi:pin-angle-fill\" />\r\n                <div style={style.pinMessageInfo}>\r\n                    <div style={style.pinMessageTitle}>Pinned message</div>\r\n                    <div style={style.pinMessageContent}>\r\n                        <Avatar style={style.pinMessageAvatar} src={pinnedMessage ? pinnedMessage?.avatar : room?.pinnedMessages?.at(-1)?.avatar}></Avatar>\r\n                        <div>\r\n                            <p style={style.pinMessageName}>{pinnedMessage ? pinnedMessage?.username : room?.pinnedMessages?.at(-1)?.username}</p>\r\n                            <p style={style.pinMessageContentText}>{pinnedMessage ? pinnedMessage?.message : room?.pinnedMessages?.at(-1)?.message}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ChatHeader","import { fetchClient } from './fetch';\r\n\r\nconst getMessages = (id) => fetchClient.get(`message/room/${id}`);\r\n\r\nexport const messageService = {\r\n    getMessages\r\n};","import Input from \"./Message/Input\"\r\nimport Dialogs from \"./Message/Dialogs\"\r\nimport ChatHeader from \"./ChatHeader\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { messageService } from \"../service/message\"\r\n\r\nconst ChatWindow = ({ socket, currentRoom, setLastMsgRoomId, leave, kickUser }) => {\r\n    const [dialogs, setDialogs] = useState([])\r\n    const [userOnline, setUserOnline] = useState('')\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [newMessage, setNewMessage] = useState(null)\r\n\r\n    const dialogsUpdate = (message, urls) => {\r\n        socket.emit('chat', message, urls, localStorage.getItem('userId'), currentRoom._id)\r\n    }\r\n\r\n    const deleteMessage = (dialog, creator) => {\r\n        const userId = localStorage.getItem('userId')\r\n        if (dialog.from.userId === userId || creator === userId) {\r\n            // const temp = [...dialogs]\r\n            // temp.every((d, index) => {\r\n            //     if (d._id === dialog._id) {\r\n            //         temp.splice(index, 1)\r\n            //         return false\r\n            //     }\r\n            //     return true\r\n            // })\r\n            // setDialogs([...temp])\r\n            socket.emit('delete', dialog._id, currentRoom?._id)\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (currentRoom?._id !== -1) {\r\n            setLoading(true)\r\n            let res = await messageService.getMessages(currentRoom?._id)\r\n            if (res.status === 200) {\r\n                setDialogs(res.data.msg)\r\n                setLoading(false)\r\n            }\r\n        }\r\n    }, [currentRoom])\r\n\r\n    useEffect(() => {\r\n        socket.on('new_message', (dialog, ctRoom) => {\r\n            setLastMsgRoomId(ctRoom)\r\n            setLastMsgRoomId('')\r\n            if (ctRoom === currentRoom?._id)\r\n                setNewMessage(dialog)\r\n        })\r\n        socket.on('dialog-deleted', (id) => {\r\n            const temp = [...dialogs]\r\n            temp.every((d, index) => {\r\n                if (d._id === id) {\r\n                    temp.splice(index, 1)\r\n                    return false\r\n                }\r\n                return true\r\n            })\r\n            setDialogs([...temp])\r\n        })\r\n\r\n        return () => {\r\n            socket.off('your_new_message')\r\n            socket.off('dialog-deleted')\r\n        }\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on('loggedIn', (userId) => {\r\n            setUserOnline(userId)\r\n        })\r\n\r\n        socket.on('loggedOut', (userId) => {\r\n            setUserOnline(userId)\r\n        })\r\n\r\n        return () => {\r\n            socket.off('loggedIn')\r\n            socket.off('loggedOut')\r\n        }\r\n\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        if (newMessage)\r\n            setDialogs([...dialogs, newMessage])\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [newMessage])\r\n\r\n    return (\r\n        <div>\r\n            <ChatHeader userOnline={userOnline} room={currentRoom} dialogs={dialogs} leave={leave} socket={socket} />\r\n            {!isLoading && <div><Dialogs room={currentRoom} socket={socket} dialogs={dialogs} setDialogs={setDialogs} deleteMessage={deleteMessage} kickUser={kickUser}></Dialogs>\r\n                < Input setDialogs={dialogsUpdate} /></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatWindow","import { useEffect, useState } from 'react'\r\nimport './Intro.css'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nconst Intro = () => {\r\n    const [begin, setBegin] = useState(false)\r\n\r\n    const limit = useMediaQuery({maxWidth: 1300})\r\n\r\n    const style = {\r\n        container: {\r\n            position: 'absolute',\r\n            left: '10em',\r\n            top: '-2.5em',\r\n            display: limit ? 'none' : 'block'\r\n        },\r\n\r\n        text: {\r\n            fontSize: '30px',\r\n            color: 'cyan',\r\n            fontWeight: 'bold',\r\n            transform: begin ? 'translate(200px, 0)' : 'none',\r\n            opacity: begin ? 1 : 0,\r\n            fontFamily: 'Comfortaa',\r\n            transition: 'transform 1000ms ease-out, opacity 800ms'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setBegin(true)\r\n        }, 2000)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={style.container}>\r\n            <p className='intro-text'>Chatcord</p>\r\n            <p style={style.text}>...connect people around the world</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro","import { fetchClient } from './fetch';\r\n\r\nconst login = (user) => fetchClient.post('/auth/login', user);\r\nconst register = (user) => fetchClient.post('/auth/register', user);\r\nconst verify = (user) => fetchClient.post('/auth/verify', user);\r\n\r\nexport const authService = {\r\n    login,\r\n    register,\r\n    verify\r\n};","import TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { useState } from 'react';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Intro from '../Intro/Intro'\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { authService } from '../../service/auth'\r\n\r\ntoast.configure({\r\n    autoClose: 2000,\r\n    draggable: false,\r\n    position: toast.POSITION.BOTTOM_RIGHT\r\n})\r\n\r\nconst Login = ({ logIn, invalid, errorToggle, message }) => {\r\n    const [error, setError] = useState(false)\r\n    const [user, setUser] = useState({ email: '', fullname: '', username: '', password: '' })\r\n    const [hover, setHover] = useState(false)\r\n    const [verifyUser, setUserVerify] = useState({ email: '', code: '' })\r\n    const [formId, setFormId] = useState('login')\r\n\r\n    const limit = useMediaQuery({ maxWidth: 1300 })\r\n    const style = {\r\n        textField: {\r\n            display: 'block',\r\n            marginBottom: '20px',\r\n        },\r\n\r\n        div: {\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: 'linear-gradient(135deg, rgba(88,63,243,1) 0%, rgba(255,77,0,0.7962535355939251) 100%)',\r\n        },\r\n\r\n        button: {\r\n            width: '100%',\r\n            background: '#000000',\r\n            color: '#ffffff',\r\n            height: '3em',\r\n            marginBottom: '1em'\r\n        },\r\n\r\n        loginForm: {\r\n            width: '350px',\r\n            overflow: 'hidden',\r\n            background: '#ffffff',\r\n            padding: '50px 0px 30px 0px',\r\n            borderRadius: '10px',\r\n            height: '550px',\r\n            maxWidth: '350px',\r\n            transition: 'max-width 200ms'\r\n        },\r\n\r\n        signupForm: {\r\n            width: '350px',\r\n            overflow: 'hidden',\r\n            background: '#ffffff',\r\n            padding: '50px 0px 30px 0px',\r\n            borderRadius: '10px',\r\n            height: '650px',\r\n            maxWidth: '350px',\r\n            transition: 'max-width 200ms',\r\n        },\r\n\r\n        header: {\r\n            fontWeight: 'bold',\r\n            fontSize: '40px',\r\n            marginBottom: '1.5em',\r\n            fontFamily: 'Roboto'\r\n        },\r\n\r\n        createAccount: {\r\n            fontWeight: 'bold',\r\n            cursor: 'pointer',\r\n            color: hover ? '#555555' : '#000000',\r\n            transition: 'color 300ms'\r\n        },\r\n\r\n        buttons: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            margin: 'auto',\r\n            width: '50%',\r\n            paddingTop: '2em',\r\n            marginBottom: '4em'\r\n        },\r\n\r\n        forms: {\r\n            textAlign: 'center',\r\n            position: 'absolute',\r\n            right: limit ? 0 : '10em',\r\n            left: limit ? 0 : 'auto',\r\n            margin: 'auto',\r\n            top: '5em',\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n        },\r\n\r\n        alertText: {\r\n            color: 'red',\r\n            fontWeight: 'bold',\r\n        },\r\n\r\n        alert: {\r\n            color: '#ff0000',\r\n            opacity: invalid ? 1 : 0,\r\n            transition: 'opacity 250ms'\r\n        }\r\n    }\r\n\r\n    const registation = async () => {\r\n        try {\r\n            let result = await authService.register(user)\r\n            toast.success(`${result.data.msg}`)\r\n            setFormId('verify')\r\n        } catch (error) {\r\n            setError(true)\r\n            toast.error(`${error.response.data.msg}`)\r\n        }\r\n    }\r\n\r\n    const verify = async () => {\r\n        let result = await authService.verify(verifyUser)\r\n        if (result.status === 200) {\r\n            toast.success(`${result.data.msg}`)\r\n            setFormId('login')\r\n        }\r\n        else {\r\n            toast.error(`${error.response.data.msg}`,)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={style.div}>\r\n            <Intro />\r\n            <div style={style.forms}>\r\n                {/* Login Form */}\r\n                {formId === 'login' && <form autoComplete='off' noValidate style={style.loginForm}>\r\n                    <h1 style={style.header}>LOGIN</h1>\r\n                    <TextField\r\n                        required\r\n                        value={user.email}\r\n                        id='input-with-icon-textfield'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n                        placeholder='email'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.password}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n                        onKeyUp={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                logIn(user)\r\n                            }\r\n                        }}\r\n                        placeholder='password'\r\n                        type='password'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n                    <h4 style={style.alert}>Something went wrong</h4>\r\n                    <div style={style.buttons}>\r\n                        <Button style={style.button} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            logIn(user)\r\n                        }}>Log in</Button>\r\n                    </div>\r\n\r\n                    <p style={style.createAccount}\r\n                        onMouseEnter={() => setHover(true)}\r\n                        onMouseLeave={() => setHover(false)}\r\n                        onClick={e => {\r\n                            e.preventDefault()\r\n                            setUser({ email: '', password: '' })\r\n                            // setAccount(false)\r\n                            setFormId('signup')\r\n                            // errorToggle(false)\r\n                        }}\r\n                    >Create account ?</p>\r\n                </form>}\r\n\r\n\r\n                {/* verify */}\r\n                {formId === 'verify' && <form autoComplete='off' noValidate style={style.loginForm}>\r\n                    <h1 style={style.header}>Verify</h1>\r\n                    <TextField\r\n                        required\r\n                        value={verifyUser.email}\r\n                        id='input-with-icon-textfield'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUserVerify({ ...verifyUser, email: e.target.value })}\r\n                        placeholder='email'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUserVerify({ ...verifyUser, code: e.target.value })}\r\n                        placeholder='verify code'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    {error ? <h4 style={style.alert}>Something went wrong</h4> : null}\r\n                    <div style={style.buttons}>\r\n                        <Button style={style.button} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            verify()\r\n                        }}>Confirm</Button>\r\n                    </div>\r\n\r\n                    {/* <p style={style.createAccount}\r\n                        onMouseEnter={() => setHover(true)}\r\n                        onMouseLeave={() => setHover(false)}\r\n                        onClick={e => {\r\n                            e.preventDefault()\r\n                            setUser({ username: '', password: '' })\r\n                            setAccount(false)\r\n                            errorToggle(false)\r\n                        }}\r\n                    >Create account ?</p> */}\r\n                </form>}\r\n\r\n                {/* create account */}\r\n                {formId === 'signup' && <form autoComplete='off' noValidate style={style.signupForm}>\r\n                    <h1 style={style.header}>Create account</h1>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.email}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser(user => ({ ...user, email: e.target.value }))}\r\n                        placeholder='email'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.fullname}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser(user => ({ ...user, fullname: e.target.value }))}\r\n                        placeholder='fullname'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.username}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser(user => ({ ...user, username: e.target.value }))}\r\n                        placeholder='username'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.password}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        type='password'\r\n                        onChange={(e) => setUser(user => ({ ...user, password: e.target.value }))}\r\n                        placeholder='password'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        error={error}\r\n                        id={error ? 'standard-error-helper-text' : 'standard-basic'}\r\n                        style={style.textField}\r\n                        type='password'\r\n                        onChange={(e) => {\r\n                            setError(e.target.value !== user.password)\r\n                        }}\r\n                        onKeyUp={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                registation()\r\n                            }\r\n                        }}\r\n                        placeholder='confirm password'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n                    <div style={style.buttons}>\r\n                        <Button style={style.button} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            registation()\r\n                            setUserVerify({ email: user.email })\r\n                        }}>Create Account</Button>\r\n                        <Button style={{ background: '#ffffff', color: '#000000', border: '3px solid black' }} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            setFormId('login')\r\n                        }}>Back</Button>\r\n                    </div>\r\n                </form>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loading = () => {\r\n    const style = {\r\n        textAlign: 'center',\r\n        height: '100%',\r\n        background: 'linear-gradient(135deg, rgba(88,63,243,1) 0%, rgba(255,77,0,0.7962535355939251) 100%)',\r\n\r\n        content: {\r\n            position: 'absolute',\r\n            top: '40%',\r\n            left: '45%',\r\n        }\r\n    }\r\n    return (\r\n        <div style={style}>\r\n            <div style={style.content}>\r\n                <CircularProgress></CircularProgress>\r\n                <p>Wait a few second...</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import { fetchClient } from './fetch';\r\n\r\nconst getUser = () => fetchClient.get('/user/find');\r\nconst updateUser = (id, user) => fetchClient.put(`/user/${id}`, user);\r\nexport const userService = {\r\n    getUser,\r\n    updateUser\r\n};","import Avatar from '@material-ui/core/Avatar'\r\nimport { makeStyles } from \"@material-ui/core\"\r\n// import { useMediaQuery } from 'react-responsive'\r\nimport { Icon } from '@iconify/react'\r\nimport { useState } from 'react'\r\nimport { Modal, Form, Input, Avatar as UserAvatar, Button } from 'antd'\r\nimport { storage } from \"../../firebase/index\"\r\nimport { toast } from 'react-toastify'\r\nimport { userService } from \"../../service/user\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  },\r\n}))\r\n\r\nconst UserArea = ({ user, logout }) => {\r\n  const classes = useStyles()\r\n  const [updateVisible, setUpdateVisible] = useState(false)\r\n  const [userAvatarPreview, setUserAvatarPreview] = useState(null)\r\n  const [userInfo, setUserInfo] = useState({\r\n    fullname: '',\r\n    username: '',\r\n    avatar: '',\r\n    password: '',\r\n  })\r\n  const [userAvatar, setUserAvatar] = useState()\r\n\r\n  const handleEditUserInfo = () => {\r\n    setUpdateVisible(!updateVisible)\r\n  }\r\n\r\n  // TODO: update user info\r\n  const handleUpdateUserInfo = async () => {\r\n    let userInfoToUpdate = userInfo\r\n    if (userAvatar) {\r\n      const metadata = {\r\n        contentType: userAvatar.type\r\n      }\r\n      const storageRef = storage.ref(`userAvatars/${userAvatar.name}`)\r\n      const snapshot = await storageRef.put(userAvatar, metadata)\r\n      const url = await snapshot.ref.getDownloadURL()\r\n      userInfoToUpdate.avatar = url\r\n    }\r\n    try {\r\n      let res = await userService.updateUser(user?.id, userInfoToUpdate)\r\n      toast.success(res?.data?.msg)\r\n    } catch (err) {\r\n      toast.error(`${err?.response?.data?.msg}`)\r\n    }\r\n    setUserAvatarPreview(userInfo.avatar)\r\n    setUserAvatar(null)\r\n    setUpdateVisible(false)\r\n  }\r\n  const handleUpdateUserAvatar = (e) => {\r\n    const newUserAvatar = e.target.files[0]\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(newUserAvatar)\r\n    reader.onloadend = () => {\r\n      setUserAvatarPreview(reader.result)\r\n    }\r\n    setUserAvatar(newUserAvatar)\r\n  }\r\n  // const limit = useMediaQuery({ maxWidth: 1300 })\r\n\r\n  const style = {\r\n    userInformation: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      alignContent: 'flex-start',\r\n      justifyContent: 'flex-end',\r\n      height: '100px',\r\n      width: '100%',\r\n      backgroundColor: '#E3F6FC',\r\n      // borderRadius: '14px',\r\n      marginBottom: '10px',\r\n      // marginLeft: '10px',\r\n    },\r\n    avatar: {\r\n      fontSize: 'xx-large',\r\n      marginRight: '20px',\r\n      marginLeft: '20px',\r\n      background: '#' + user?.color,\r\n      cursor: 'pointer',\r\n    },\r\n    info: {\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'start',\r\n    },\r\n    fullname: {\r\n      fontFamily: 'Poppins',\r\n      fontStyle: 'normal',\r\n      fontWeight: '600',\r\n      fontSize: '20px',\r\n      /* identical to box height */\r\n      color: '#52585D',\r\n      margin: '0px',\r\n    },\r\n    username: {\r\n      fontStyle: 'normal',\r\n      fontFamily: 'Poppins',\r\n      padding: '5px 10px',\r\n      backgroundColor: '#6588DE',\r\n      borderRadius: '14px',\r\n      color: '#FFFFFF',\r\n      fontSize: '10px',\r\n\r\n    },\r\n\r\n    userAvaterEdit: {\r\n      width: 'fit-content',\r\n      display: 'block',\r\n      margin: 'auto',\r\n      border: '4px solid #' + user?.color,\r\n      borderRadius: '115px',\r\n      cursor: 'pointer',\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={style.userInformation}>\r\n      <Avatar onClick={handleEditUserInfo} style={style.avatar} className={classes.large} src={user?.avatar}></Avatar>\r\n\r\n      <Modal visible={updateVisible} closable={false} title=\"Update User Info\" onCancel={handleEditUserInfo} footer={null}>\r\n        {updateVisible &&\r\n          <div>\r\n            <label style={style.userAvaterEdit} htmlFor=\"userAvatar\"><UserAvatar size={200} src={userAvatarPreview ? userAvatarPreview : user.avatar}></UserAvatar></label>\r\n            <input id=\"userAvatar\" style={{ visibility: \"hidden\" }} accept='image/*' type=\"file\" onChange={handleUpdateUserAvatar} />\r\n          </div>\r\n        }\r\n        <Form\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          onFinish={handleUpdateUserInfo}\r\n        >\r\n          <Form.Item label=\"Full Name\" rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your full name!',\r\n            },\r\n          ]}>\r\n            <Input defaultValue={user?.fullname} onChange={(e) => setUserInfo({ ...userInfo, fullname: e.target.value })} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Username\" rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your username!',\r\n            },\r\n          ]}>\r\n            <Input defaultValue={user?.username} onChange={(e) => setUserInfo({ ...userInfo, username: e.target.value })} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" name=\"password\"\r\n            rules={[\r\n              {\r\n                pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/,\r\n                message: 'Password must be at least 6 characters, contain at least one uppercase letter, one lowercase letter, one number and one special character!',\r\n              }\r\n            ]}>\r\n            <Input.Password onChange={(e) => setUserInfo({ ...userInfo, password: e.target.value })} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Confirm Password\" name=\"confirm\"\r\n            rules={[\r\n              {\r\n                pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/,\r\n                message: 'Password must be at least 6 characters, contain at least one uppercase letter, one lowercase letter, one number and one special character!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <div style={style.info}>\r\n        <p style={style.fullname}>{user?.fullname}</p>\r\n        <p style={style.username}>{user?.username}</p>\r\n      </div>\r\n      <Icon icon=\"ion:log-out-outline\" style={{ fontSize: '30px', marginRight: '20px', marginLeft: '20px', cursor: 'pointer' }} onClick={logout} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserArea","// import Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport moment from 'moment';\r\nimport { Avatar } from 'antd';\r\nimport { Icon } from '@iconify/react';\r\nimport { roomService } from \"../../service/room\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10)\r\n    },\r\n\r\n    small: {\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6)\r\n    }\r\n}))\r\n\r\nconst Room = ({ room, onClick, lastMsgRoomId, setLastMsgRoomId, leaveHandle, roomManage, choosen }) => {\r\n    const classes = useStyles()\r\n    const [option, setOption] = useState(false)\r\n    const [hover, setHover] = useState(false)\r\n    const [lastMsg, setLastMsg] = useState('')\r\n    const [lastMsgTime, setLastMsgTime] = useState(null)\r\n    const [updateMsg, setUpdateMsg] = useState(false)\r\n    const limit = useMediaQuery({ maxWidth: 1300 })\r\n\r\n    const style = {\r\n        room_container: {\r\n            position: 'relative',\r\n            marginTop: '18px',\r\n        },\r\n\r\n        room: {\r\n            position: 'relative',\r\n            width: limit ? '12em' : '90%',\r\n            margin: 'auto',\r\n            background: (choosen || hover) ? '#6588DE' : '#E3F6FC',\r\n            padding: '10px',\r\n            borderRadius: '14px',\r\n            boxShadow: (choosen || hover) ? '0px 8px 40px rgba(0, 72, 251, 0.3)' : 'none',\r\n            overflow: 'hidden',\r\n            marginBottom: 10,\r\n            maxHeight: option ? limit ? '250px' : '220px' : '100px',\r\n            transition: 'max-height 250ms, border 250ms, background 250ms',\r\n            height: '74px',\r\n        },\r\n\r\n        roomInfo: {\r\n            margin: '0px',\r\n            padding: '0px',\r\n            display: 'flex',\r\n            cursor: 'pointer',\r\n            alignItems: 'center',\r\n            alignContent: 'center',\r\n            flexDirection: 'row',\r\n            gap: '10px',\r\n        },\r\n\r\n        avatar: {\r\n            fontSize: '20px',\r\n            flexShrink: 0,\r\n            background: '#' + room?.color,\r\n        },\r\n\r\n        roomMessage: {\r\n            flexGrow: '1',\r\n        },\r\n\r\n        roomMessageName: {\r\n            margin: '0px',\r\n            padding: '0px',\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            color: (choosen || hover) ? '#FDFDFE' : '#52585D',\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '150px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        roomMessageLastMessage: {\r\n            margin: '0px',\r\n            padding: '0px',\r\n            fontSize: '12px',\r\n            color: (choosen || hover) ? '#F2F6F7' : '#96A9BA',\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '150px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        messageTime: {\r\n            color: (choosen || hover) ? '#FDFDFE' : '#96A9BA',\r\n        },\r\n\r\n        button: {\r\n            position: 'absolute',\r\n            fontSize: '50px',\r\n            color: '#5b5b5b',\r\n            right: '0.5em',\r\n            top: 40,\r\n            margin: 'auto',\r\n            transform: option ? 'rotate(90deg)' : 'none',\r\n            transition: 'transform 200ms'\r\n        },\r\n\r\n        roomOption: {\r\n            background: '#c4c4c4',\r\n            fontSize: 'large',\r\n            marginBottom: '0',\r\n            marginTop: '0.1em',\r\n            borderRadius: '5px',\r\n            cursor: 'pointer',\r\n            paddingLeft: '1em',\r\n        },\r\n\r\n        private: {\r\n            position: 'absolute',\r\n            fontSize: '30px',\r\n            right: 0,\r\n            top: 0,\r\n            color: '#52585D',\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (option && !choosen) {\r\n            setOption(false)\r\n        }\r\n        if (room?._id === lastMsgRoomId) {\r\n            let res = await roomService.getRoom(lastMsgRoomId)\r\n            if (res.status === 200) {\r\n                setLastMsg(res.data.msg.lastMessage)\r\n                setLastMsgTime(res.data.msg.lastMessageDate)\r\n                setUpdateMsg(true)\r\n            }\r\n        }\r\n    }, [choosen, lastMsgRoomId])\r\n\r\n    return (\r\n        <div style={style.room_container} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)}>\r\n            <div style={style.room}>\r\n                <div style={style.roomInfo} onClick={() => onClick(room)}>\r\n                    <Avatar size={56} style={style.avatar} src={room.avatar}></Avatar>\r\n                    <div style={style.roomMessage}>\r\n                        <p style={style.roomMessageName}>{room?.name}</p>\r\n                        <p style={style.roomMessageLastMessage}>{updateMsg ? lastMsg : room?.lastMessage}</p>\r\n                    </div>\r\n                    <span style={style.messageTime}>{moment(`${updateMsg ? lastMsgTime : room?.lastMessageDate}`).fromNow()}</span>\r\n                    {room.isPrivate && <Icon style={style.private} icon=\"ri:chat-private-line\" />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room","// import CreateRoom from \"./CreateRoom\"\r\nimport Room from \"../Room/Room\"\r\n\r\nconst RoomsList = ({rooms, joinRoom, leaveRoom, switchRoom, roomManage, currentRoom, lastMsgRoomId, setLastMsgRoomId}) => {\r\n    const style = {\r\n        roomList: {\r\n            overflow: 'auto',\r\n            width: '100%',\r\n            height: '77%',\r\n            backgroundColor: '#E3F6FC',\r\n            // borderRadius: '5px',\r\n            // marginLeft: '10px',\r\n        },\r\n    }\r\n\r\n    return (\r\n        <div style={style.roomList}>\r\n          {/* <CreateRoom joinRoom={joinRoom}></CreateRoom> */}\r\n          {rooms?.map((room, index) => {\r\n            return (\r\n              <Room key={index} choosen={currentRoom?._id === room?._id} room={room} lastMsgRoomId={lastMsgRoomId} setLastMsgRoomId={setLastMsgRoomId} leaveHandle={leaveRoom} onClick={switchRoom} roomManage={roomManage}></Room>\r\n            )\r\n          })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomsList","/* eslint-disable no-unused-vars */\r\nimport { Icon } from '@iconify/react';\r\nimport { Modal, Button, Form, Input, Switch } from 'antd';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst RoomsHeader = ({ joinRoom, findRoom, handleSearchRoom }) => {\r\n    const [visibleCreate, setVisibleCreate] = useState(false)\r\n    const [visibleJoin, setVisibleJoin] = useState(false)\r\n    const [isPrivate, setIsPrivate] = useState(false)\r\n    const [room, setRoom] = useState({ name: '', description: '', isPrivate: false })\r\n\r\n    const [shortId, setShortId] = useState('')\r\n\r\n\r\n    const style = {\r\n        roomHeaderContainer: {\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n            alignItems: 'center',\r\n            backgroundColor: '#E3F6FC',\r\n            // borderRadius: '14px',\r\n            // marginBottom: '10px',\r\n            // marginLeft: '10px',\r\n            height: '10%',\r\n            padding: '10px',\r\n            width: '100%',\r\n        },\r\n        input: {\r\n            width: '100%',\r\n            outline: 'none',\r\n            fontSize: '1.2rem',\r\n            borderRadius: '8px',\r\n            height: '40px',\r\n            backgroundColor: '#FDFDFD',\r\n            border: '1px solid #6588DE',\r\n            boxSizing: 'border-box',\r\n            margin: '5px',\r\n            marginLeft: '15px',\r\n        },\r\n        add: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n        join: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n        addUser: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n    }\r\n\r\n    const showModalCreate = () => {\r\n        setVisibleCreate(true);\r\n    }\r\n\r\n    const hideModalCreate = () => {\r\n        setVisibleCreate(false);\r\n    }\r\n\r\n    const creatRoom = () => {\r\n        joinRoom(room)\r\n        hideModalCreate()\r\n    }\r\n\r\n    const showModalJoin = () => {\r\n        setVisibleJoin(true);\r\n    }\r\n\r\n    const hideModalJoin = () => {\r\n        setVisibleJoin(false);\r\n    }\r\n\r\n    const joinWithRoomId = () => {\r\n        findRoom(shortId)\r\n        hideModalJoin()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={style.roomHeaderContainer}>\r\n                <Icon style={style.add} icon=\"akar-icons:search\" onClick={handleSearchRoom} />\r\n                <Icon style={style.add} icon=\"akar-icons:chat-add\" onClick={showModalCreate} />\r\n                <Icon style={style.join} icon=\"fluent:chat-arrow-back-16-regular\" onClick={showModalJoin} />\r\n            </div>\r\n\r\n            <Modal title=\"Create room\" closable={false} visible={visibleCreate} footer={[\r\n                <Button onClick={hideModalCreate}>\r\n                    Cancel\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" onClick={creatRoom} >\r\n                    Create\r\n                </Button>,\r\n            ]}>\r\n                <Form name=\"control-hooks\">\r\n                    <Form.Item label=\"Room name\" name=\"roomName\" rules={[{ required: true }]} onChange={(e) => setRoom(room => ({ ...room, name: e.target.value }))}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Description\" name=\"description\" rules={[{ required: true }]} onChange={(e) => setRoom(room => ({ ...room, description: e.target.value }))}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Switch checkedChildren=\"Private\" unCheckedChildren=\"Public\" onChange={(e) => setRoom(room => ({ ...room, isPrivate: !isPrivate }))} />\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Modal title=\"Join room\" closable={false} visible={visibleJoin} footer={[\r\n                <Button onClick={hideModalJoin}>\r\n                    Cancel\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" onClick={joinWithRoomId} >\r\n                    Join\r\n                </Button>,\r\n            ]}>\r\n                <Form name=\"control-hooks\">\r\n                    <Form.Item label=\"Room ID\" name=\"roomShortId\" rules={[{ required: true }]} onChange={(e) => setShortId(e.target.value)}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default RoomsHeader","const Guide = () => {\r\n    const styles = {\r\n        guide: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '95%',\r\n            fontSize: '1.5em',\r\n            backgroundColor: 'rgb(227, 246, 252)',\r\n            margin: 'auto 20px',\r\n            borderRadius: '14px',\r\n        },\r\n    }\r\n    return (\r\n        <div style={styles.guide}>\r\n            <h1>pick a room to start <br></br> or create a new room</h1> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guide;","import { useState } from \"react\";\r\nimport { Icon } from '@iconify/react';\r\nimport RoomsList from \"../Rooms/RoomsList\";\r\nimport Room from \"../Room/Room\";\r\n\r\nconst SearchRoom = ({rooms, joinRoom, leaveRoom, switchRoom, roomManage, currentRoom, handleSearchRoom }) => {\r\n    const [resultRoom, setResultRoom] = useState([]);\r\n\r\n    const styles = {\r\n        inputSection: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n        },\r\n        input: {\r\n            width: '100%',\r\n            height: '40px',\r\n            borderRadius: '10px',\r\n            borderColor: '#6588DE',\r\n        },\r\n        searchRoom: {\r\n            width: \"100%\",\r\n            height: \"102%\",\r\n            overflowY: 'hidden'\r\n        },\r\n        add: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n        \r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setResultRoom(rooms.filter(room => room.name.toLowerCase().includes(value.toLowerCase())));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={styles.searchRoom}>\r\n            <div style={styles.inputSection}>\r\n                <Icon style={styles.add} icon=\"bx:bx-arrow-back\" onClick={() => handleSearchRoom()}/>\r\n                <input style={styles.input} placeholder=\"search room\" onChange={handleChange} />\r\n            </div>\r\n            <RoomsList currentRoom={currentRoom} rooms={resultRoom} joinRoom={joinRoom} leaveRoom={leaveRoom} switchRoom={switchRoom} roomManage={roomManage} handleSearchRoom={handleSearchRoom} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchRoom;","/* eslint-disable no-unused-vars */\r\nimport { useState, useEffect } from 'react';\r\nimport '../src/App.css';\r\nimport io from 'socket.io-client';\r\nimport ChatWindow from \"./Components/ChatWindow\";\r\nimport Login from './Components/Login/Login';\r\nimport Loading from './Components/Loading';\r\nimport UserArea from \"./Components/UserInformation/UserArea\";\r\nimport RoomsList from \"./Components/Rooms/RoomsList\";\r\nimport RoomsHeader from \"./Components/Rooms/RoomsHeader\";\r\nimport Guide from './Components/Guide/Guide';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { toast } from 'react-toastify'\r\nimport SearchRoom from './Components/List/SearchRoom';\r\nimport { userService } from './service/user';\r\nimport { roomService } from './service/room';\r\nimport { authService } from './service/auth';\r\nrequire('dotenv').config()\r\n\r\nfunction App() {\r\n  const [connected, setConnect] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const [isLoading, setLoading] = useState(true)\r\n  const [authenticated, setAuthenticated] = useState(false)\r\n  const [user, setUser] = useState(null)\r\n  const [roomPanel, setPanel] = useState(false)\r\n  const [currentRoom, setCurrentRoom] = useState(null)\r\n  const [lastMsgRoomId, setLastMsgRoomId] = useState('')\r\n  const [rooms, setRooms] = useState([])\r\n  const [message, setMessage] = useState('')\r\n  const [showSearchRoom, setShowSearchRoom] = useState(false)\r\n  const [updateCurrentRoom, setUpdateCurrentRoom] = useState(false)\r\n\r\n  const socket = io.connect(process.env.REACT_APP_API_URL || 'http://localhost:8080');\r\n\r\n  const limit = useMediaQuery({ maxWidth: 1300 })\r\n  const style = {\r\n    left: {\r\n      width: limit ? '15em' : '25%',\r\n      float: 'left',\r\n      boxSizing: 'border-box',\r\n    },\r\n\r\n    right: {\r\n      width: '100%',\r\n      height: '100%',\r\n      float: 'right',\r\n      position: 'relative',\r\n      flexGrow: 1,\r\n    },\r\n\r\n    userInformation: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      borderBottom: '2px solid #4a336e',\r\n      padding: '20px',\r\n      fontSize: 'large',\r\n      marginBottom: '10px',\r\n    },\r\n  }\r\n\r\n  const logIn = async (user) => {\r\n    try {\r\n      const result = await authService.login(user)\r\n      localStorage.setItem(\"token\", result.data.token);\r\n      setError(result.data.token === null)\r\n      let res = await userService.getUser()\r\n      if (res.status === 200) {\r\n        localStorage.setItem(\"userId\", res.data.msg._id)\r\n        setUser(res.data.msg)\r\n        socket.emit('login', res.data.msg._id)\r\n        res = await roomService.getRooms()\r\n        if (res.status === 200) setRooms(res.data.msg)\r\n        socket.once('connected', () => setConnect(true))\r\n      }\r\n      setAuthenticated(true)\r\n      toast.success('logged in successfully')\r\n    } catch (err) {\r\n      toast.error(`${err?.response?.data?.msg}`)\r\n    }\r\n  }\r\n\r\n  const leaveRoom = async (id) => {\r\n    let res = await roomService.leaveRoom(id)\r\n    if (res.status === 200) {\r\n      socket.emit('leaveRoom', id)\r\n      toast.success('left room successfully')\r\n      const index = rooms.findIndex(room => room._id === id)\r\n      if (index !== -1) {\r\n        rooms.splice(index, 1)\r\n        const tmp = [...rooms]\r\n        tmp.every((room, index) => {\r\n          if (room._id === id) {\r\n            tmp.splice(index, 1)\r\n            return false\r\n          }\r\n          return true\r\n        })\r\n        setCurrentRoom(null)\r\n      }\r\n    } else {\r\n      toast.error(`${res.response.data.msg}`)\r\n    }\r\n  }\r\n\r\n  const kickUser = async (userId, roomId) => {\r\n    console.log(userId+ '   ' +roomId)\r\n    socket.emit('kick', userId, roomId)\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on('kicked', (userId, roomId) => {\r\n      if (localStorage.getItem(\"userId\") === userId) {\r\n        toast.error('you have been kicked from this room')\r\n        socket.emit('leaveRoom', roomId)\r\n        const index = rooms.findIndex(room => room._id === roomId)\r\n        if (index !== -1) {\r\n          rooms.splice(index, 1)\r\n          const tmp = [...rooms]\r\n          tmp.every((room, index) => {\r\n            if (room._id === roomId) {\r\n              tmp.splice(index, 1)\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n          setRooms(tmp)\r\n          setCurrentRoom(null)\r\n        }\r\n      }\r\n    })\r\n  }, [socket])\r\n\r\n  const findRoom = async (shortId) => {\r\n    const index = rooms.findIndex(room => room.shortId === shortId)\r\n    if (index === -1) {\r\n      let res = await roomService.attendRoom(shortId)\r\n      if (res.status === 200) {\r\n        setRooms([res.data.msg, ...rooms])\r\n        setCurrentRoom(res.data.msg)\r\n      } else if (res.status === 400) {\r\n        setCurrentRoom(res.data.msg)\r\n      } else {\r\n        toast.error(`${res.data.msg}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  const joinRoom = async (room) => {\r\n    if (room) {\r\n      try {\r\n        let response = await roomService.createRoom(room)\r\n        const newRoom = response.data.msg\r\n        setRooms([newRoom, ...rooms])\r\n        // if (!currentRoom) {\r\n        //   socket.emit('joinRoom', newRoom._id)\r\n        // }\r\n        // if (currentRoom && newRoom?._id !== currentRoom?._id) {\r\n        //   socket.emit('leaveRoom', currentRoom?._id)\r\n        //   socket.emit('joinRoom', newRoom?._id)\r\n        // }\r\n        // setCurrentRoom(newRoom)\r\n        setCurrentRoom(newRoom)\r\n      } catch (err) {\r\n        toast.error(`${err?.response?.data?.msg}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  const switchRoom = (newRoom) => {\r\n    setLoading(true)\r\n    if (!currentRoom) {\r\n      socket.emit('joinRoom', newRoom?._id)\r\n    }\r\n    if (currentRoom && newRoom?._id !== currentRoom?._id) {\r\n      socket.emit('leaveRoom', currentRoom?._id)\r\n      socket.emit('joinRoom', newRoom?._id)\r\n    }\r\n    setCurrentRoom(newRoom)\r\n    setShowSearchRoom(false)\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n  const logout = async () => {\r\n    let userId = localStorage.getItem(\"userId\")\r\n    socket.emit('logout', userId)\r\n    localStorage.clear()\r\n    window.location.reload()\r\n  }\r\n\r\n  const roomManage = (room) => {\r\n    setPanel(true)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token !== null) {\r\n      let res = await userService.getUser()\r\n      if (res.status === 200) {\r\n        localStorage.setItem(\"userId\", res.data.msg._id)\r\n        setAuthenticated(true)\r\n        setUser(res.data.msg)\r\n        res = await roomService.getRooms()\r\n        if (res.status === 200) setRooms(res.data.msg)\r\n        socket.emit('login', res.data.msg._id)\r\n        socket.once('connected', () => setConnect(true))\r\n        setLoading(false)\r\n      }\r\n    } else {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (currentRoom) {\r\n      socket.emit('joinRoom', currentRoom._id)\r\n    }\r\n  }, [currentRoom])\r\n\r\n  useEffect(async () => {\r\n    if (lastMsgRoomId) {\r\n      let res = rooms.find(room => room._id === lastMsgRoomId)\r\n      if (lastMsgRoomId !== rooms[0]?._id) {\r\n        setRooms([res, ...rooms.filter(el => el._id !== res._id)])\r\n        // setCurrentRoom(currentRoom)\r\n      }\r\n    }\r\n  }, [lastMsgRoomId])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isLoading ? <Loading></Loading> : (authenticated ?\r\n        <div style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n          <div style={{ height: '100%', display: 'flex' }}>\r\n            <div style={style.left}>\r\n              <UserArea user={user} logout={logout}></UserArea>\r\n              {showSearchRoom && <SearchRoom currentRoom={currentRoom} rooms={rooms} joinRoom={joinRoom} leaveRoom={leaveRoom} switchRoom={switchRoom} roomManage={roomManage} handleSearchRoom={setShowSearchRoom} />}\r\n              {!showSearchRoom && <RoomsHeader joinRoom={joinRoom} findRoom={findRoom} handleSearchRoom={setShowSearchRoom}></RoomsHeader>}\r\n              {!showSearchRoom && <RoomsList currentRoom={currentRoom} rooms={rooms} joinRoom={joinRoom} lastMsgRoomId={lastMsgRoomId} setLastMsgRoomId={setLastMsgRoomId} leaveRoom={leaveRoom} switchRoom={switchRoom} roomManage={roomManage} />}\r\n            </div>\r\n            {currentRoom ? <div style={style.right}>\r\n              <ChatWindow socket={socket} currentRoom={currentRoom} setLastMsgRoomId={setLastMsgRoomId} leave={leaveRoom} kickUser={kickUser}></ChatWindow>\r\n            </div> : <Guide></Guide>}\r\n          </div>\r\n        </div> : <Login message={message} logIn={logIn} invalid={error} errorToggle={setError}></Login>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}