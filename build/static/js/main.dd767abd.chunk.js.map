{"version":3,"sources":["firebase/index.js","Components/Message/Input.js","Components/Emoji/Emoji.js","Components/Emoji/EmojiIcon.js","service/fetch.js","service/reaction.js","Components/Message/Dialog.js","Components/Message/Dialogs.js","service/room.js","Components/ChatHeader.js","service/message.js","Components/ChatWindow.js","Components/Intro/Intro.js","service/auth.js","Components/Login/Login.js","service/user.js","Components/UserInformation/UserArea.js","Components/Room/Room.js","Components/Rooms/RoomsList.js","Components/Rooms/RoomsHeader.js","Components/Guide/Guide.js","Components/List/SearchRoom.js","App.js","index.js"],"names":["require","config","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","Input","setDialogs","useState","message","setMessage","showEmoji","setShowEmoji","files","setFiles","setUrls","id","url","name","fileUrl","previewImage","setPreviewImage","limit","useMediaQuery","maxWidth","style","input","display","position","left","top","width","textField","fontSize","outline","paddingLeft","paddingBottom","paddingTop","marginLeft","backgroundColor","color","send","right","cursor","attach","image","icons","file","bottom","fileImage","preview","zIndex","height","background","boxShadow","borderRadius","padding","alignItems","thumbnail","deletePreviewIcon","fileName","addFile","placeItems","border","boxSizing","addIcon","sendMessage","length","promises","map","promise","Promise","resolve","reject","metadata","contentType","type","ref","put","then","snapshot","getDownloadURL","push","all","urls","prevState","PreviewSelectedFiles","item","onClick","filter","icon","src","alt","htmlFor","FormControl","fullWidth","sx","m","TextField","value","onKeyUp","e","key","variant","placeholder","onChange","target","autoComplete","InputProps","endAdornment","InputAdornment","visibility","multiple","i","newFile","Math","random","split","reader","FileReader","readAsDataURL","onloadend","result","onSelect","native","emojiSize","Emoji","dialog","react","self","show","setShow","emoji","transition","emojiList","flexDirection","allEmoji","reaction","reactionId","_id","onMouseLeave","EmojiIcon","emojiIndex","marginRight","GetEmoji","fetchClient","axios","create","baseURL","interceptors","request","use","token","localStorage","getItem","Object","assign","headers","Authorization","reactionService","get","Icons","reactions","paddingRight","iconsInfo","from","reaction_type","Dialog","onDelete","room","socket","widget","setWidget","setReaction","setSelf","showTime","setShowTime","selfAndCreator","setSelfAndCreator","fileNumber","setFileNumber","dialogDiv","marginBottom","bubble","margin","avatar","marginTop","flexShrink","opacity","widgetItem","deleteIcon","pinIcon","container","rowGap","reply","dialogDivInfoNameTime","dialogDivInfoName","fontFamily","fontWeight","dialogDivInfoTime","dialogDivInfoMessageWidget","dialogDivInfoMessage","dialogDivInfoFiles","gridTemplateColumns","gap","des","WebkitLineClamp","WebkitBoxOrient","overflow","textOverflow","workBreak","useEffect","on","return_dialog","data","userId","creator","off","a","res","status","onMouseEnter","size","username","moment","createdAt","calendar","content","index","format","pop","classList","toggle","controls","justifyContent","href","rel","objectFit","reaction_id","tmp","pre_react","every","findIndex","user","splice","emit","Dialogs","dialogs","deleteMessage","MessEnding","useRef","current","scrollIntoView","behavior","roomService","post","TabPane","Tabs","ChatHeader","userOnlines","leave","users","setUsers","setRoom","visible","setVisible","updateVisible","setUpdateVisible","pinnedMessage","setPinnedMessage","showPinnedMessage","setShowPinnedMessage","roomAvatarPreview","setRoomAvatarPreview","roomAvatar","setRoomAvatar","currentUser","description","isPrivate","roomUpdateInfo","setRoomUpdateInfo","setIsPrivate","onClose","handleUpdateRoomInfo","roomUpdateInfo_","storageRef","toast","success","msg","chatHeader","pinMessageContainer","pinMessageIcon","chatInfo","chatName","numberOfUser","chatTool","tuneIcon","roomInfo","roomTitle","lineHeight","roomName","roomDescription","roomShortId","line","borderBottom","media","overflowY","mediaGrid","members","member","leaveRoom","leaveRoomIcon","with","leaveRoomText","dot","infoIcon","buttonEditDrawer","buttonUpdateDrawer","roomAvatarEdit","plusIconContainer","plusIcon","removeIcon","submitButton","Option","Select","selectBefore","defaultValue","pinnedMessages","roomId","r","at","onFinish","values","usersList","first","emails","join","error","response","addonBefore","placement","extra","accept","newRoomAvatar","copy","shortId","labelCol","span","wrapperCol","Item","label","rules","required","defaultChecked","checkedChildren","unCheckedChildren","pre","prevRoomUpdateInfo","offset","htmlType","defaultActiveKey","tab","List","fields","add","remove","fieldKey","restField","align","block","includes","fullname","pinMessageInfo","pinMessageTitle","pinMessageContent","pinMessageAvatar","pinMessageName","pinMessageContentText","messageService","ChatWindow","setLastMsgRoomId","rooms","setRooms","currentRoom","newMessage","setNewMessage","setUserOnlines","ctRoom","temp","d","Intro","begin","setBegin","text","transform","setTimeout","className","authService","configure","autoClose","draggable","POSITION","BOTTOM_RIGHT","Login","logIn","invalid","errorToggle","setError","email","password","setUser","hover","setHover","code","verifyUser","setUserVerify","formId","setFormId","div","button","loginForm","signupForm","header","createAccount","buttons","forms","textAlign","alertText","alert","registation","verify","noValidate","startAdornment","Button","preventDefault","userService","useStyles","makeStyles","theme","large","spacing","UserArea","logout","classes","userAvatarPreview","setUserAvatarPreview","userInfo","setUserInfo","userAvatar","setUserAvatar","handleEditUserInfo","handleUpdateUserInfo","userInfoToUpdate","userInformation","alignContent","info","flexGrow","fontStyle","userAvaterEdit","Avatar","closable","title","onCancel","footer","newUserAvatar","pattern","Password","getFieldValue","validator","_","Error","small","Room","lastMsgRoomId","choosen","leaveHandle","roomManage","option","setOption","lastMsg","setLastMsg","lastMsgTime","setLastMsgTime","updateMsg","setUpdateMsg","room_container","maxHeight","roomMessage","roomMessageName","roomMessageLastMessage","messageTime","roomOption","private","lastMessage","lastMessageDate","fromNow","RoomsList","joinRoom","switchRoom","RoomsHeader","findRoom","handleSearchRoom","visibleCreate","setVisibleCreate","visibleJoin","setVisibleJoin","setShortId","roomHeaderContainer","addUser","hideModalCreate","hideModalJoin","Guide","SearchRoom","resultRoom","setResultRoom","styles","inputSection","borderColor","searchRoom","toLowerCase","App","setConnect","authenticated","setAuthenticated","setPanel","setCurrentRoom","setLogin","showSearchRoom","setShowSearchRoom","io","connect","float","setItem","listOfRooom","newRoom","clear","window","location","reload","once","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWAEAA,EAAQ,KAAUC,SAalBC,IAASC,cAVc,CACrBC,OAAQC,0CACRC,WAAYD,kCACZE,UAAWF,kBACXG,cAAeH,8BACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAKjB,IAAMO,EAAUV,IAASU,U,eCmRVC,EAzRD,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACb,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAwBN,mBAAS,IAAjC,mBAAaO,GAAb,WACA,EAAwCP,mBAAS,CAAC,CAAEQ,GAAI,KAAMC,IAAK,KAAMC,KAAM,KAAMC,QAAS,QAA9F,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQC,wBAAc,CAAEC,SAAU,MAElCC,EAAQ,CACVC,MAAO,CACHC,QAAS,QACTC,SAAU,WAIVC,KAAM,OACNC,IAAK,OACLC,MAAO,QAIXC,UAAW,CACPD,MAfOR,wBAAc,CAAEC,SAAU,MAejB,MAAQF,EAAQ,MAAQ,MAExCW,SAAU,UACVC,QAAS,OACTC,YAAa,OACbC,cAAe,OACfC,WAAY,OACZC,WAAY,OACZC,gBAAiB,cACjBC,MAAO,WAGXC,KAAM,CACFb,SAAU,WACVc,MAAO,GACPC,OAAQ,UACRH,MAAO,UACPP,SAAU,QAGdW,OAAQ,CACJhB,SAAU,WACVc,MAAO,IACPC,OAAQ,WAGZE,MAAO,CACHjB,SAAU,WACVc,MAAO,GACPC,OAAQ,WAGZG,MAAO,CACHb,SAAU,OACVL,SAAU,WACVC,MAAO,GACPW,MAAO,UACPG,OAAQ,WAGZI,KAAM,CACFP,MAAO,UACPP,SAAU,OACVL,SAAU,WACVe,OAAQ,UACRD,MAAO,GAEPM,OAAQ,IAGZC,UAAW,CACPT,MAAO,UACPP,SAAU,OACVL,SAAU,WACVe,OAAQ,UACRD,MAAO,GAEPM,OAAQ,IAGZE,QAAS,CACLC,OAAQ,EACRvB,SAAU,WACVG,MAAO,OACPqB,OAAQ,QACRV,MAAO,MACPM,OAAQ,OACRK,WAAY,UACZC,UAAW,qCACXC,aAAc,OACdC,QAAS,OACT7B,QAAS,OAET8B,WAAY,UAGhBC,UAAW,CACP3B,MAAO,QACPqB,OAAQ,QACRG,aAAc,QAGlBI,kBAAmB,CACfnB,MAAO,MACPP,SAAU,OACVU,OAAQ,UACRf,SAAU,WACVE,IAAK,SAGT8B,SAAU,CACNhC,SAAU,WACVC,KAAM,OACNC,IAAK,MACLU,MAAO,SAGXqB,QAAS,CACLlC,QAAS,OACTmC,WAAY,SACZlC,SAAU,WACVoB,OAAQ,GACRnB,KAAM,GACNE,MAAO,QACPqB,OAAQ,QACRG,aAAc,OACdQ,OAAQ,qBACRC,UAAW,cAIfC,QAAS,CACLhC,SAAU,OACVO,MAAO,YAsCT0B,EAAc,WAChB,GAAIzD,EAAQ0D,OAAS,GAAKtD,EAAMsD,OAAS,EAAG,CACxC,IAAMC,EAAW,GACjBvD,EAAMwD,KAAI,SAACtB,GACP,IAAMuB,EAAU,IAAIC,SAAQ,SAACC,EAASC,GAClC,IAAMC,EAAW,CACbC,YAAa5B,EAAK6B,MAEHvE,EAAQwE,IAAR,gBAAqB9B,EAAK7B,OAClC4D,IAAI/B,EAAM2B,GAAUK,MAAK,SAACC,GACjCA,EAASH,IAAII,iBAAiBF,MAAK,SAAC9D,GAChCuD,EAAQvD,YAIpBmD,EAASc,KAAKZ,MAElBC,QAAQY,IAAIf,GAAUW,MAAK,SAACK,GACxBrE,GAAQ,SAACsE,GAAD,4BAAmBA,GAAnB,CAA8BD,OACtC7E,EAAWE,EAAS2E,MAI5B/D,EAAgB,IAChBP,EAAS,KAEPwE,EAAuB,WACzB,GAAIlE,EACA,OACI,sBAAKK,MAAOA,EAAMyB,QAAlB,UACK9B,EAAaiD,KAAI,SAACkB,GACf,OACI,gCACI,cAAC,IAAD,CAAMC,QAAS,kBAjEpBxE,EAiEwCuE,EAAKvE,GAhEhEK,EAAgBD,EAAaqE,QAAO,SAAAF,GAAI,OAAIA,EAAKvE,KAAOA,WAExDF,EAASD,EAAM4E,QAAO,SAAAF,GAAI,OAAIA,EAAKvE,KAAOA,MAHxB,IAACA,GAiEkDS,MAAOA,EAAMkC,kBAAmB+B,KAAK,oBAClF,qBAAKjE,MAAOA,EAAMiC,UAAWiC,IAAKJ,EAAKpE,QAAUoE,EAAKpE,QAAUoE,EAAKtE,IAAK2E,IAAI,UAC9E,mBAAGnE,MAAOA,EAAMmC,SAAhB,SAA2B2B,EAAKrE,SAH1BqE,EAAKvE,OAQvB,qBAAKS,MAAOA,EAAMoC,QAAlB,SACI,uBAAOgC,QAAQ,QAAf,SAAuB,cAAC,IAAD,CAAMpE,MAAOA,EAAMwC,QAASyB,KAAK,2BAQ5E,OACI,qBAAKjE,MAAOA,EAAMC,MAAlB,SACI,cAACoE,EAAA,EAAD,CAAaC,WAAS,EAACC,GAAI,CAAEC,EAAG,GAAhC,SACI,cAACC,EAAA,EAAD,CACIzE,MAAOA,EAAMO,UACbmE,MAAO1F,EACP2F,QAAS,SAACC,GACQ,UAAVA,EAAEC,MACFpC,IACAxD,EAAW,MAGnBM,GAAG,iBACHuF,QAAQ,WACRC,YAAY,wBACZC,SAAU,SAACJ,GAAD,OAAO3F,EAAW2F,EAAEK,OAAOP,QACrCQ,aAAa,MACbC,WAAY,CACRC,aACI,eAACC,EAAA,EAAD,CAAgBlF,SAAS,MAAzB,UAUI,cAAC,IAAD,CAAM4D,QAAS,WACXtB,IACAxD,EAAW,KAGXe,MAAOA,EAAMgB,KAAMiD,KAAK,oBAE5B,cAAC,IAAD,CAAMA,KAAK,0BAA0BjE,MAAOA,EAAMqB,MAAO0C,QAAS,WAAQ5E,GAAcD,MACxF,uBAAOkF,QAAQ,QAAf,SAAuB,cAAC,IAAD,CAAMpE,MAAOA,EAAMwB,UAAWyC,KAAK,uBAC1D,uBAAO1E,GAAG,QAAQS,MAAO,CAAEsF,WAAY,UAAYnC,KAAK,OAAOoC,UAAQ,EAACP,SAjH1E,SAACJ,GAEvB,IAF8B,IAAD,WAEpBY,GACL,IAAMC,EAAUb,EAAEK,OAAO7F,MAAMoG,GAC/BC,EAAO,GAASC,KAAKC,SACrB,IAAIjG,EAAU,GACVD,EAAO,GAEwB,UAA/BgG,EAAQtC,KAAKyC,MAAM,KAAK,IACxBlG,EAAU,WACVD,EAAI,eAAW+F,EAAI,KAEnB9F,EAAU,KACVD,EAAI,gBAAY+F,EAAI,IAIxB,IAAMK,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,UAAY,WACfpG,GAAgB,SAACgE,GAAD,4BAAmBA,GAAnB,CAA8B,CAAErE,GAAIkG,EAAO,GAAQjG,IAAKqG,EAAOI,OAAQxG,OAAMC,iBAEjGL,GAAS,SAACuE,GAAD,4BAAmBA,GAAnB,CAA8B6B,QApBlCD,EAAI,EAAGA,EAAIZ,EAAEK,OAAO7F,MAAMsD,OAAQ8C,IAAM,EAAxCA,MAkHgBpG,EAAMsD,OAAS,GAAK,cAACmB,EAAD,IACpB3E,GACG,qBAAKc,MAAO,CAAEG,SAAU,QAASoB,OAAQ,OAAQnB,KAAM,MAAOsB,OAAQ,KAAtE,SACI,cAAC,IAAD,CACIwE,SAhId,SAACtB,GAAQ3F,GAAW,SAACD,GAAD,OAAcA,EAAW4F,EAAEuB,WAiIjCC,UAAW,kB,yBC9NxCC,EAvDD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC5B,EAAwBzH,oBAAS,GAAjC,mBAAO0H,EAAP,KAAaC,EAAb,KAEM1G,EAAQ,CACV2G,MAAO,CACH7E,aAAc,MACdC,QAAS,MACTb,OAAQ,UACR0F,WAAY,6BAGhBC,UAAW,CACP3G,QAAS,OACTC,SAAU,WACVE,KAAM,GACNY,MAAOuF,EAAO,EAAI,OAClBM,cAAeN,EAAO,cAAgB,OAG1CO,SAAU,CACN5G,SAAU,aAWZ6G,EAAW,SAACC,GACdV,EAAMU,EAAYX,EAAOY,MAG7B,OACI,sBAAMlH,MAAOA,EAAM+G,SAAUI,aAAc,kBAAMT,GAAQ,IAAzD,UAEQD,GAAQ,sBAAKzG,MAAOA,EAAM6G,UAAlB,UACJ,qBAAK7G,MAAO,CAACQ,SAAU,OAAQU,OAAO,WAAY6C,QAAS,kBAAMiD,EAAS,IAA1E,0BACA,qBAAKhH,MAAO,CAACQ,SAAU,OAAQU,OAAO,WAAY6C,QAAS,kBAAMiD,EAAS,IAA1E,0BACA,qBAAKhH,MAAO,CAACQ,SAAU,OAAQU,OAAO,WAAY6C,QAAS,kBAAMiD,EAAS,IAA1E,0BACA,qBAAKhH,MAAO,CAACQ,SAAU,OAAQU,OAAO,WAAY6C,QAAS,kBAAMiD,EAAS,IAA1E,0BACA,qBAAKhH,MAAO,CAACQ,SAAU,OAAQU,OAAO,WAAY6C,QAAS,kBAAMiD,EAAS,IAA1E,0BACA,qBAAKhH,MAAO,CAACQ,SAAU,OAAQU,OAAO,WAAY6C,QAAS,kBAAMiD,EAAS,IAA1E,6BAGR,cAAC,IAAD,CACIhH,MAAOA,EAAM2G,MACb5C,QAAS,WAvBb2C,GADAD,UCAGW,EA5BG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACVrH,EAAQ,CACVsH,YAAa,MACbpG,OAAQ,UACRV,SAAU,SAER+G,EAAW,WACb,OAAQF,GAEJ,KAAK,EACD,OAAO,qBAAKrH,MAAOA,EAAZ,0BACX,KAAK,EACD,OAAO,qBAAKA,MAAOA,EAAZ,0BACX,KAAK,EACD,OAAO,qBAAKA,MAAOA,EAAZ,0BACX,KAAK,EACD,OAAO,qBAAKA,MAAOA,EAAZ,0BACX,KAAK,EACD,OAAO,qBAAKA,MAAOA,EAAZ,0BACX,KAAK,EACD,OAAO,qBAAKA,MAAOA,EAAZ,4BAGnB,OACI,cAACuH,EAAD,K,wECvBRvJ,EAAQ,KAAUC,SAElB,IAAMuJ,EAAcC,IAAMC,OAAO,CAC7BC,QAAStJ,wCAWbmJ,EAAYI,aAAaC,QAAQC,KARX,SAAC7J,GACnB,IAAM8J,EAAQC,aAAaC,QAAQ,SAInC,OAHIF,GACAG,OAAOC,OAAOlK,EAAOmK,QAAS,CAAEC,cAAc,UAAD,OAAYN,KAEtD9J,KCVX,IAEaqK,EAFiB,SAAC/I,GAAD,OAAQiI,EAAYe,IAAZ,qBAAsChJ,I,SCStEiJ,EAAQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,UAAWjC,EAAW,EAAXA,KAElBxG,EAAQ,CACVqB,MAAO,CACHnB,QAAS,OACTC,SAAU,WACVc,MAAOuF,GAAQ,EACfpG,MAAOoG,GAAQ,EACfjF,QAAS,EACTO,aAAc,OACdhB,gBAAiB,OACjBJ,YAAa,EACbgI,aAAc,IAItB,OACI,qBAAK1I,MAAOA,EAAM2I,UAAlB,SACI,qBAAK3I,MAAOA,EAAMqB,MAAlB,gBACKoH,QADL,IACKA,OADL,EACKA,EAAW7F,KAAI,SAACoE,GACb,OAA6B,IAAzBA,EAAS4B,KAAKlG,OACP,cAAC,EAAD,CAAyC2E,WAAU,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAU6B,eAA/D,OAAgB7B,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAU6B,eAE9B,aA0RZC,EAlRA,SAAC,GAAwC,IAAtCxC,EAAqC,EAArCA,OAAQyC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACtC,EAA4BlK,oBAAS,GAArC,mBAAOmK,EAAP,KAAeC,EAAf,KACA,EAA0BpK,oBAAS,GAAnC,mBACA,GADA,UACiCA,mBAAS,KAA1C,mBAAO0J,EAAP,KAAkBW,EAAlB,KACA,EAAwBrK,mBAAS,MAAjC,mBAAOyH,EAAP,KAAa6C,EAAb,KACA,EAAgCtK,oBAAS,GAAzC,mBAAOuK,EAAP,KAAiBC,EAAjB,KACA,EAA4CxK,mBAAS,MAArD,mBAAOyK,EAAP,KAAuBC,EAAvB,KACA,EAAoC1K,mBAAS,GAA7C,mBAAO2K,EAAP,KAAmBC,EAAnB,KAEM3J,EAAQ,CACV4J,UAAW,CACPtJ,MAAO,MACPH,SAAU,WACVD,QAAS,OACT4G,cAAeN,EAAO,cAAgB,MACtC3F,WAAY,OACZyG,YAAa,OACbtF,WAAY,aACZD,QAAS,MACT8H,aAAc,QAGlBC,OAAQ,CACJhJ,gBAAiB0F,EAAO,UAAY,UACpCzF,MAAO,UACPgB,QAAS,WACTgI,OAAQ,MACRjI,aAAc,OACd/B,SAAU,OACVI,SAAU,YAGd6J,OAAQ,CACJ7J,SAAU,WACV8J,UAAW,OACXrI,WAAW,IAAD,OAAM0E,EAAOsC,KAAK7H,OAC5BmJ,WAAY,GAGhBhB,OAAO,aACHgB,WAAY,EACZC,QAASjB,EAAS,EAAI,EACtBtC,WAAY,gBACZ1G,QAAS,OACT4G,cAAeN,EAAO,cAAgB,QALpC,aAMU,GAGhB4D,WAAY,CACRlJ,OAAQ,UACRY,aAAc,OAGlBuI,WAAY,CACRvI,aAAc,MACdC,QAAS,MACTb,OAAQ,WAGZoJ,QAAS,CACLxI,aAAc,MACdC,QAAS,MACTb,OAAQ,WAGZqJ,UAAW,CACPrK,QAAS,OACT4G,cAAe,SACf9E,WAAYwE,EAAO,WAAa,aAChCgE,OAAQ,MACRzI,QAAS,OACTD,aAAc,QAGlB2I,MAAO,CACHvK,QAAS,SAGbwK,sBAAuB,CACnBxK,QAAS,OACT4G,cAAeN,EAAO,cAAgB,OACtCxE,WAAY,WACZ1B,MAAO,OACPuJ,aAAc,SAElBc,kBAAmB,CACfC,WAAY,UACZ7J,MAAO,UACPP,SAAU,OACVqK,WAAY,MACZhK,WAAY2F,EAAO,OAAS,OAEhCsE,kBAAmB,CACfF,WAAY,UACZT,QAASb,EAAW,EAAI,EACxB1C,WAAY,gBACZ7F,MAAO,UACPP,SAAU,OACVK,WAAY2F,EAAO,MAAQ,QAG/BuE,2BAA4B,CACxB7K,QAAS,OACT4G,cAAeN,EAAO,cAAgB,QAG1CwE,qBAAsB,CAClB7K,SAAU,WACVD,QAAS,OACT4G,cAAe,SACf9E,WAAYwE,EAAO,WAAa,aAChCuD,OAAQ,OAGZkB,mBAAoB,CAChB/K,QAAS,OACTgL,oBAAoC,IAAfxB,EAAmB,iBAAiC,GAAdA,EAAkB,iBAAmB,iBAChGyB,IAAK,QAGTC,IAAK,CACDlL,QAAS,cACTmL,gBAAiB,EACjBC,gBAAiB,WACjBC,SAAU,SACVC,aAAc,WACdlL,MAAO,QACPmL,UAAW,eA0EnB,OA/BAC,qBAAU,WAON,GANAzC,EAAO0C,GAAG,mBAAmB,SAACC,GACtBtF,EAAOY,MAAQ0E,EAAc1E,KAC7BkC,EAAYwC,EAAcC,SAIrB,OAATrF,EAAe,CACf,IAAIsF,EAAS9D,aAAaC,QAAQ,UAClCoB,EAAQyC,IAAWxF,EAAOsC,KAAKkD,QAC3BA,IAAW9C,EAAK+C,SAChBtC,GAAkB,GAG1B,OAAO,WACHR,EAAO+C,IAAI,sBAEhB,CAAC1F,IAGJoF,oBAAS,sBAAC,4BAAAO,EAAA,sEACU3D,EAAsC,CAAE/I,GAAI+G,EAAOY,MAD7D,OAEa,OADfgF,EADE,QAEEC,QACJ/C,EAAY8C,EAAIL,KAAKpD,UAAUoD,MAH7B,2CAKP,IAEHH,qBAAU,WACN/B,EAAcrD,EAAO3C,KAAKjB,UAC3B,IAGC,sBAAK1C,MAAOA,EAAM4J,UAAWwC,aAAc,kBAAM7C,GAAY,IAAOpC,aAAc,kBAAMoC,GAAY,IAApG,WACM/C,GAAQ,cAAC,IAAD,CAAQ6F,KAAM,GAAIrM,MAAOA,EAAMgK,OAAQ9F,IAAKoC,EAAOsC,KAAKoB,SACjExD,GAAQ,cAAC,IAAD,CAAQ6F,KAAM,GAAIrM,MAAOA,EAAMgK,OAAQ9F,IAAKoC,EAAOsC,KAAKoB,SACjE,sBAAKhK,MAAOA,EAAMuK,UAAW6B,aAAc,kBAAMjD,GAAU,IAAOhC,aAAc,kBAAMgC,GAAU,IAAhG,UACK3C,GAAQ,sBAAKxG,MAAOA,EAAM0K,sBAAlB,UACL,qBAAK1K,MAAOA,EAAM2K,kBAAlB,SAAsCrE,EAAOsC,KAAK0D,WAClD,qBAAKtM,MAAOA,EAAM8K,kBAAlB,SAAsCyB,IAAOjG,EAAOkG,WAAWC,iBAEjEjG,GAAQ,sBAAKxG,MAAOA,EAAM0K,sBAAlB,UACN,qBAAK1K,MAAOA,EAAM2K,kBAAlB,SAAsCrE,EAAOsC,KAAK0D,WAClD,qBAAKtM,MAAOA,EAAM8K,kBAAlB,SAAsCyB,IAAOjG,EAAOkG,WAAWC,gBAGnE,sBAAKzM,MAAOA,EAAM+K,2BAAlB,UACI,sBAAK/K,MAAOA,EAAMgL,qBAAlB,UACK1E,EAAOoG,SAAW,mBAAG1M,MAAOA,EAAM8J,OAAhB,SAAyBxD,EAAOoG,UACnD,cAAC,EAAD,CAAOjE,UAAWA,EAAWjC,KAAMA,IACnC,qBAAKxG,MAAOA,EAAMiL,mBAAlB,SAEQ3E,EAAO3C,KAAKjB,OAAS,GAAK4D,EAAO3C,KAAKf,KAAI,SAACpD,EAAKmN,GAC5C,IAAIC,EAASpN,EAAIoG,MAAM,KAAKiH,MAAMjH,MAAM,KAAK,GAC7C,MAAe,QAAXgH,EAEI,uBAAmB7I,QAAS,SAACa,GAAQA,EAAEK,OAAO6H,UAAUC,OAAO,SAAW/M,MAAO,CAAEM,MAAO,QAASuJ,aAAc,OAAQjD,WAAY,MAAQoG,UAAQ,EAArJ,SACI,wBAAQ9I,IAAK1E,EAAK2D,KAAK,eADfwJ,GAIE,QAAXC,EAEH,oBAAG5M,MAAO,CAAEE,QAAS,OAAQ+M,eAAgB,WAAYjL,WAAY,UAAwBkL,KAAM1N,EAAKyF,OAAO,SAASkI,IAAI,sBAA5H,UACI,qBAAKjJ,IAAI,oKAAoKlE,MAAO,CAAEM,MAAO,OAAQuJ,aAAc,OAAQvC,YAAa,UACxO,mBAAGtH,MAAOA,EAAMoL,IAAhB,SAAsB5L,EAAIoG,MAAM,OAAOiH,MAAMjH,MAAM,KAAK,OAF0B+G,GAKxE,SAAXC,GAAgC,QAAXA,EAExB,oBAAG5M,MAAO,CAAEE,QAAS,OAAQ+M,eAAgB,WAAYjL,WAAY,UAAwBkL,KAAM1N,EAAKyF,OAAO,SAASkI,IAAI,sBAA5H,UACI,qBAAKjJ,IAAI,qKAAqKlE,MAAO,CAAEM,MAAO,OAAQuJ,aAAc,OAAQvC,YAAa,UACzO,mBAAGtH,MAAOA,EAAMoL,IAAhB,SAAsB5L,EAAIoG,MAAM,OAAOiH,MAAMjH,MAAM,KAAK,OAF0B+G,GAM1E,QAAXC,GAA+B,QAAXA,GAA+B,SAAXA,EAEzC,qBAAiB7I,QAAS,SAACa,GAAQA,EAAEK,OAAO6H,UAAUC,OAAO,SAAW7I,IAAK1E,EAAKQ,MAAO,CAAEM,MAAO,OAAQqB,OAAQ,QAASyL,UAAW,QAASvD,aAAc,OAAQjD,WAAY,OAAvK+F,QAFb,UAWrB,sBAAK3M,MAAOA,EAAMkJ,OAAlB,UACI,cAAC,EAAD,CAAO5C,OAAQA,EAAQC,MA7H7B,SAAC8G,EAAa9N,GACxB,IAAIuM,EAAS9D,aAAaC,QAAQ,UAC5BqF,EAAG,YAAO7E,GACZ8E,EAAY,EAYhB,GAVAD,EAAIE,OAAM,SAAAjH,GACN,IAAMoG,EAAQpG,EAAMqC,KAAK6E,WAAU,SAAAC,GAAI,OAAIA,EAAK5B,SAAWA,KAC3D,OAAe,IAAXa,IACApG,EAAMqC,KAAK+E,OAAOhB,EAAO,GACzBY,EAAYhH,EAAMsC,eACX,MAKX0E,IAAcF,EAAa,CAC3B,IAAMV,EAAQW,EAAIG,WAAU,SAAAlH,GAAK,OAAIA,EAAMsC,gBAAkBwE,MAC9C,IAAXV,EACAW,EAAIX,GAAO/D,KAAKnF,KAAK,CAAEqI,OAAQA,EAAQQ,SAAU,MAEjDgB,EAAI7J,KAAK,CACLoF,cAAewE,EACfzE,KAAM,CAAC,CACHkD,OAAQA,EACRQ,SAAU,QAM1BlD,EAAY,YAAIkE,IAEhBrE,EAAO2E,KAAK,eAAgBtH,EAAQ+G,EAAavB,EAAQ9C,EAAK9B,MA6FTV,KAAMA,IAC3C,cAAC,IAAD,CAAaxG,MAAOA,EAAMsK,QAASvG,QAAS,WA1F5DkF,EAAO2E,KAAK,UAAWtH,EAAQ0C,EAAK9B,SA6FlBV,GAAQgD,IACN,cAAC,IAAD,CACIxJ,MAAOA,EAAMqK,WACbtG,QAAS,kBAAMgF,EAASzC,EAAQ0C,EAAK+C,yBCpRtD8B,EAzBC,SAAC,GAA4C,IAA3C5E,EAA0C,EAA1CA,OAAQD,EAAkC,EAAlCA,KAAM8E,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,cAS/BC,EAAaC,iBAAO,MAM1B,OAJAvC,qBAAU,WACNsC,EAAWE,QAAQC,eAAe,CAAEC,SAAU,aAC/C,CAACN,IAGA,sBAAK9N,MAfK,CACVE,QAAS,QACTI,MAAO,OACPqB,OAAQ,OACR4J,SAAU,OACVxB,OAAQ,qBAUR,iBACK+D,QADL,IACKA,OADL,EACKA,EAASlL,KAAI,SAAC0D,GACX,OAAO,cAAC,EAAD,CAAyB2C,OAAQA,EAAQ3C,OAAQA,EAAQyC,SAAUgF,EAAe/E,KAAMA,GAA3E1C,EAAOY,QAE/B,qBAAK9D,IAAK4K,Q,iHCbTK,GATI,kBAAM7G,EAAYe,IAAI,mBAS1B8F,GARG,SAAC9O,GAAD,OAAQiI,EAAYe,IAAZ,gBAAyBhJ,KAQpC8O,GAPM,SAACrF,GAAD,OAAUxB,EAAY8G,KAAK,eAAgBtF,IAOjDqF,GANM,SAAC9O,EAAIyJ,GAAL,OAAcxB,EAAYnE,IAAZ,gBAAyB9D,GAAMyJ,IAMnDqF,GALM,SAAC9O,GAAD,OAAQiI,EAAY8G,KAAZ,gBAA0B/O,EAA1B,aAKd8O,GAJK,SAAC9O,EAAImO,GAAL,OAAclG,EAAY8G,KAAZ,gBAA0B/O,EAA1B,cAA0CmO,IAI7DW,GAHK,SAAC9O,GAAD,OAAQiI,EAAY8G,KAAZ,gBAA0B/O,EAA1B,YAGb8O,GAFM,SAAC9O,GAAD,OAAQiI,EAAYe,IAAZ,gBAAyBhJ,EAAzB,c,6BCAnBgP,GAAYC,IAAZD,QAskBOE,GAnkBI,SAAC,GAAmD,IAAD,YAAhDC,EAAgD,EAAhDA,YAAa1F,EAAmC,EAAnCA,KAAM8E,EAA6B,EAA7BA,QAASa,EAAoB,EAApBA,MAAO1F,EAAa,EAAbA,OACrD,EAA0BlK,mBAAS,IAAnC,mBAAO6P,EAAP,KAAcC,EAAd,KACA,EAA+B9P,mBAASiK,GAAxC,mBAAoB8F,GAApB,WACA,EAA8B/P,oBAAS,GAAvC,mBAAOgQ,EAAP,KAAgBC,EAAhB,KACA,EAA0CjQ,oBAAS,GAAnD,mBAAOkQ,EAAP,KAAsBC,EAAtB,KACA,EAA0CnQ,oBAAS,GAAnD,mBAAOoQ,EAAP,KAAsBC,EAAtB,KACA,EAAkDrQ,oBAAS,GAA3D,mBAAOsQ,EAAP,KAA0BC,EAA1B,KACI5B,EAAO,GACX,GAAkD3O,mBAAS,MAA3D,qBAAOwQ,GAAP,MAA0BC,GAA1B,MACA,GAAoCzQ,qBAApC,qBAAO0Q,GAAP,MAAmBC,GAAnB,MACMC,GAAc3H,aAAaC,QAAQ,UACzC,GAA4ClJ,mBAAS,CACjDU,KAAM,GACNmQ,YAAa,GACbC,UAAW7G,EAAK6G,UAChB7F,OAAQ,KAJZ,qBAAO8F,GAAP,MAAuBC,GAAvB,MAMA,GAAkChR,mBAASiK,EAAK6G,WAAhD,qBAAOA,GAAP,MAAkBG,GAAlB,MAIMC,GAAU,WACZjB,GAAW,IAiBTkB,GAAoB,uCAAG,wCAAAjE,EAAA,yDACrBkE,EAAkBL,IAClBL,GAFqB,wBAGfxM,EAAW,CACbC,YAAauM,GAAWtM,MAEtBiN,EAAaxR,EAAQwE,IAAR,sBAA2BqM,GAAWhQ,OANpC,SAOE2Q,EAAW/M,IAAIoM,GAAYxM,GAP7B,cAOfM,EAPe,gBAQHA,EAASH,IAAII,iBARV,OAQfhE,EARe,OASrB2Q,EAAgBnG,OAASxK,EATJ,yBAWT6O,GAAA,OAAuBrF,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAM9B,IAAKiJ,GAXzB,QAYN,OADfjE,EAXqB,QAYjBC,QACJkE,KAAMC,QAAN,OAAcpE,QAAd,IAAcA,GAAd,UAAcA,EAAKL,YAAnB,aAAc,EAAW0E,KAC7Bf,GAAqBM,GAAe9F,QACpC0F,GAAc,MACdR,GAAiB,GAhBQ,4CAAH,qDAmBpBlP,GAAQ,CACVwQ,WAAY,CACRtQ,QAAS,OACT+M,eAAgB,gBAChBjL,WAAY,SACZD,QAAS,OACTjB,gBAAiB,UACjBa,OAAQ,OACRrB,MAAO,OACPyJ,OAAQ,mBACR5J,SAAU,YAGdsQ,oBAAqB,CAEjBtQ,SAAU,WACVW,gBAAiB,UACjBS,OAAQ,QACRnB,KAAM,MACNsB,OAAQ,IACRpB,MAAO,OACPJ,QAAS,OACT8B,WAAY,SACZmJ,IAAK,QAGTuF,eAAgB,GAIhBC,SAAU,CACN5G,OAAQ,MACR7J,QAAS,OACT4G,cAAe,SACf9E,WAAY,aACZd,OAAQ,WAGZ0P,SAAU,CACN7G,OAAQ,MACRvJ,SAAU,OACVqK,WAAY,OACZ9J,MAAO,WAGX8P,aAAc,CACV9G,OAAQ,MACRvJ,SAAU,OACVO,MAAO,WAGX+P,SAAU,CACN5Q,QAAS,OACT8B,WAAY,SACZiL,eAAgB,SAChB9B,IAAK,QAIT4F,SAAU,CACN7P,OAAQ,UACRV,SAAU,QAGdwQ,SAAU,CACN9Q,QAAS,OACT4G,cAAe,SACf9E,WAAY,UAGhBiP,UAAW,CACPpH,aAAc,OACdgB,WAAY,IACZrK,SAAU,OACV0Q,WAAY,OACZnQ,MAAO,WAGX0O,WAAY,CACR5F,aAAc,OACdvH,OAAQ,cAAgB0G,EAAKjI,MAC7Be,aAAc,SAGlBqP,SAAU,CACNtH,aAAc,MACdgB,WAAY,IACZrK,SAAU,OACV0Q,WAAY,OACZnQ,MAAO,WAGXqQ,gBAAiB,CACbvH,aAAc,OACdrJ,SAAU,OACV0Q,WAAY,SACZnQ,MAAO,WAGXsQ,YAAa,CACTnQ,OAAQ,UACRV,SAAU,OACVqJ,aAAc,QAGlByH,KAAM,CACFhR,MAAO,QACPqB,OAAQ,MACR4P,aAAc,oBACd1H,aAAc,QAGlB2H,MAAO,CACH7P,OAAQ,QACR8P,UAAW,OACXvR,QAAS,SAGbwR,UAAW,CACPxR,QAAS,OACTgL,oBAAqB,iBACrBC,IAAK,OACLpL,SAAU,QAGduB,KAAM,CACFpB,QAAS,OACTyB,OAAQ,QACRmF,cAAe,SACf9E,WAAY,cAGhB2P,QAAS,CACLzR,QAAS,OACTyB,OAAQ,QACRmF,cAAe,SACf9E,WAAY,aACZmJ,IAAK,OACLsG,UAAW,QAGfG,OAAQ,CACJ1R,QAAS,OACT4G,cAAe,MACf9E,WAAY,WACZmJ,IAAK,QAIT0G,UAAW,CACP3R,QAAS,OACT4G,cAAe,MACf5F,OAAQ,UACRV,SAAU,OACVsB,aAAc,MACdE,WAAY,SACZmJ,IAAK,OACL7I,OAAQ,oBACRX,OAAQ,QAGZmQ,cAAe,CACX/Q,MAAO,UACPgR,KAAM,OACNpQ,OAAQ,OACRd,WAAY,QAGhBmR,cAAe,CACXjI,OAAQ,MACRgI,KAAM,OACNlH,WAAY,IACZrK,SAAU,OACV0Q,WAAY,OACZnQ,MAAO,WAGXiJ,OAAQ,CACJ7J,SAAU,YAGd8R,IAAK,CACD9R,SAAU,WACVoB,OAAQ,MACRN,MAAO,MACPU,OAAQ,MACRrB,MAAO,MACPwB,aAAc,MACdhB,gBAAiB,WAGrBsK,IAAK,CACDlL,QAAS,cACTmL,gBAAiB,EACjBC,gBAAiB,WACjBC,SAAU,SACVC,aAAc,WACdlL,MAAO,QACPmL,UAAW,cAGfyG,SAAU,CACN/R,SAAU,WACVE,IAAK,OAGT8R,iBAAkB,CACd7P,OAAQ,OACRxB,gBAAiB,UACjBC,MAAO,UACPG,OAAQ,WAGZkR,mBAAoB,CAChBjS,SAAU,WACVC,KAAM,MACNkH,YAAa,OAGjB+K,eAAgB,CACZ/R,MAAO,cACPJ,QAAS,QACT6J,OAAQ,OACRzH,OAAQ,cAAgB0G,EAAKjI,MAC7Be,aAAc,QACdZ,OAAQ,WAGZoR,kBAAmB,CACfhS,MAAO,GACPqB,OAAQ,GACRG,aAAc,MACdQ,OAAQ,qBACRpC,QAAS,OACTmC,WAAY,SACZvB,gBAAiB,sBAGrByR,SAAU,CACN/R,SAAU,QAGdgS,WAAY,CACRhS,SAAU,OACVO,MAAO,WAGX0R,aAAc,CACV3Q,aAAc,QAMd4Q,GAAWC,IAAXD,OAEFE,GACF,eAAC,IAAD,CAAQC,aAAa,UAArB,UACI,cAACH,GAAD,CAAQhO,MAAM,UAAd,qBACA,cAACgO,GAAD,CAAQhO,MAAM,OAAd,qBAIRgH,oBAAS,sBAAC,8BAAAO,EAAA,yDACN6C,EAAQ9F,IACW,KAAX,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,KAFJ,gCAGcmH,GAAA,OAAuBrF,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAM9B,KAH3C,OAIiB,OADfgF,EAHF,QAIMC,QACJ0C,EAAS3C,EAAIL,KAAK0E,KALpB,QAOF,OAAJvH,QAAI,IAAJA,GAAA,UAAAA,EAAM8J,sBAAN,eAAsBpQ,QAAS,GAAK4M,GAAqB,GAPnD,2CAQP,CAACtG,IAEJ0C,qBAAU,WACNzC,EAAO0C,GAAG,sBAAsB,SAACrF,EAAQyM,EAAQC,GACzCD,IAAW/J,EAAK9B,MACgB,IAA5B8L,EAAEF,eAAepQ,OACjB4M,GAAqB,IAErBA,GAAqB,GACrBF,EAAiB4D,EAAEF,eAAeG,IAAI,WAInD,CAACjK,IAEJ,IAKMkK,GAAQ,uCAAG,WAAOC,GAAP,iBAAAlH,EAAA,sDAEb,IADAyB,EAAO,GACElI,EAAI,EAAGA,EAAI2N,EAAOC,UAAU1Q,OAAQ8C,IACzCkI,EAAKjK,KAAK0P,EAAOC,UAAU5N,GAAG6N,OAHrB,yBAMOhF,GAAA,OAAsBrF,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAM9B,IAAK,CAAEoM,OAAQ5F,EAAK6F,KAAK,OAN5D,OAOU,OADfrH,EANK,QAODC,QACJkE,KAAMC,QAAQpE,EAAIL,KAAK0E,KARlB,gDAWTF,KAAMmD,MAAN,UAAe,KAAEC,SAAS5H,KAAK0E,MAXtB,yDAAH,sDAgBd,OACI,mCACI,sBAAKvQ,MAAOA,GAAMwQ,WAAlB,UACI,sBAAKxQ,MAAOA,GAAM2Q,SAAU5M,QA9VrB,WACfiL,GAAW,IA6VH,UACI,oBAAGhP,MAAOA,GAAM4Q,SAAhB,iBAA2B5H,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMvJ,KAAjC,IAAuC,cAAC,IAAD,CAAMO,MAAOA,GAAMkS,SAAUjO,KAAK,uCACzE,mBAAGjE,MAAOA,GAAM6Q,aAAhB,UAAoC,OAALjC,QAAK,IAALA,OAAA,EAAAA,EAAOlM,QAAS,gBAEnD,qBAAK1C,MAAOA,GAAM8Q,SAAlB,SACI,cAAC,IAAD,CAAO9Q,MAAOA,GAAMC,MAAOiF,aAAa,MAAMwO,YAAad,GAAc7N,YAAY,mDAEzF,eAAC,IAAD,CACI4O,UAAU,QACV1D,QAASA,GACTlB,QAASA,EACT6E,MACI,cAAC,IAAD,UACI,wBAAQ7P,QArWT,WACnBmL,GAAkBD,IAoWmCjP,MAAOA,GAAMmS,iBAA9C,oBANZ,UAUI,sBAAKnS,MAAOA,GAAMgR,SAAlB,UACI,qBAAKhR,MAAOA,GAAMiR,UAAlB,wBACEhC,GAAiB,qBAAKjP,MAAOA,GAAMyP,WAAlB,SAA8B,cAAC,IAAD,CAAQpD,KAAM,IAAKnI,IAAK8E,EAAKgB,WAC7EiF,GACG,gCACI,uBAAOjP,MAAOA,GAAMqS,eAAgBjO,QAAQ,aAA5C,SAAyD,cAAC,IAAD,CAAQiI,KAAM,IAAKnI,IAAKqL,IAAwCvG,EAAKgB,WAC9H,uBAAOzK,GAAG,aAAaS,MAAO,CAAEsF,WAAY,UAAYuO,OAAO,QAAQ1Q,KAAK,OAAO6B,SA3WhF,SAACJ,GAC5B,IAAMkP,EAAgBlP,EAAEK,OAAO7F,MAAM,GAC/ByG,EAAS,IAAIC,WACnBD,EAAOE,cAAc+N,GACrBjO,EAAOG,UAAY,WACfwJ,GAAqB3J,EAAOI,SAEhCyJ,GAAcoE,UAuWI9K,EAAK6G,WAAa,qBAAK7P,MAAOA,GAAMqR,YAAatN,QAlD/C,WACpBgQ,KAAI,OAAC/K,QAAD,IAACA,OAAD,EAACA,EAAMgL,SACX3D,KAAMC,QAAQ,wBAgDsB,gBAA0DtH,QAA1D,IAA0DA,OAA1D,EAA0DA,EAAMgL,UACpF,qBAAKhU,MAAOA,GAAMmR,SAAlB,gBAA6BnI,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMvJ,OACnC,qBAAKO,MAAOA,GAAMoR,gBAAlB,gBAAoCpI,QAApC,IAAoCA,OAApC,EAAoCA,EAAM4G,cAC1C,qBAAK5P,MAAOA,GAAMsR,UAErBrC,EACG,eAAC,IAAD,CACIgF,SAAU,CAAEC,KAAM,IAClBC,WAAY,CAAED,KAAM,IACpBhB,SAAUhD,GAHd,UAKI,cAAC,IAAKkE,KAAN,CAAWC,MAAM,YAAYC,MAAO,CAChC,CACIC,UAAU,EACVvV,QAAS,4BAHjB,SAMI,cAAC,IAAD,CAAO6T,aAAc7J,EAAKvJ,KAAMuF,SAAU,SAACJ,GAAD,OAAOmL,GAAkB,2BAAKD,IAAN,IAAsBrQ,KAAMmF,EAAEK,OAAOP,cAG3G,cAAC,IAAK0P,KAAN,CAAWC,MAAM,cAAcC,MAAO,CAClC,CACIC,UAAU,EACVvV,QAAS,mCAHjB,SAMI,cAAC,IAAD,CAAO6T,aAAc7J,EAAK4G,YAAa5K,SAAU,SAACJ,GAAD,OAAOmL,GAAkB,2BAAKD,IAAN,IAAsBF,YAAahL,EAAEK,OAAOP,cAIrHiL,IAAe3G,EAAK+C,SAAW,cAAC,IAAKqI,KAAN,CAAWC,MAAM,OAAjB,SAC3B,cAAC,IAAD,CAAQG,eAAgB3E,GAAW4E,gBAAgB,UAAUC,kBAAkB,SAAS3Q,QAAS,SAACa,GAAQoL,IAAa,SAAA2E,GAAG,OAAKA,KAAM5E,IAAkB,SAAA6E,GAAwB,OAAO,YAAC,eAAKA,GAAb,IAAiC/E,WAAY+E,EAAmB/E,oBAIvP,cAAC,IAAKuE,KAAN,CAAWD,WAAY,CAAEU,OAAQ,GAAIX,KAAM,IAA3C,SACI,cAAC,IAAD,CAAQ/Q,KAAK,UAAU2R,SAAS,SAAhC,uBAMR,eAAC,IAAD,CAAM9U,MAAO,CAAE6J,aAAc,QAAUkL,iBAAiB,IAAxD,UACI,cAACxG,GAAD,CAASyG,IAAI,SAAb,SACI,qBAAKhV,MAAOA,GAAMwR,MAAlB,SACI,qBAAKxR,MAAOA,GAAM0R,UAAlB,SAEQ5D,EAAQlL,KAAI,SAAA0D,GACR,OAAOA,EAAO3C,KAAKjB,OAAS,GAAK4D,EAAO3C,KAAKf,KAAI,SAACpD,EAAKmN,GACnD,IAAIC,EAASpN,EAAIoG,MAAM,KAAKiH,MAAMjH,MAAM,KAAK,GAC7C,GAAe,QAAXgH,GAA+B,QAAXA,GAA+B,SAAXA,EACxC,OAAO,qBAAK1I,IAAK1E,EAAKuE,QAAS,SAACa,GAAQA,EAAEK,OAAO6H,UAAUC,OAAO,SAAW/M,MAAO,CAAEM,MAAO,OAAQqB,OAAQ,QAASyL,UAAW,QAASvD,aAAc,OAAQjD,WAAY,mBAR9K,KAgB1B,cAAC2H,GAAD,CAASyG,IAAI,SAAb,SACI,qBAAKhV,MAAOA,GAAMwR,MAAlB,SACI,qBAAKxR,MAAOA,GAAM0R,UAAlB,SAEQ5D,EAAQlL,KAAI,SAAA0D,GACR,OAAOA,EAAO3C,KAAKjB,OAAS,GAAK4D,EAAO3C,KAAKf,KAAI,SAACpD,EAAKmN,GAEnD,GAAe,QADFnN,EAAIoG,MAAM,KAAKiH,MAAMjH,MAAM,KAAK,GAEzC,OACI,uBAAmB7B,QAAS,SAACa,GAAQA,EAAEK,OAAO6H,UAAUC,OAAO,SAAW/M,MAAO,CAAEM,MAAO,OAAQqB,OAAQ,QAASyL,UAAW,QAASvD,aAAc,OAAQjD,WAAY,MAAQoG,UAAQ,EAAzL,SACI,wBAAQ9I,IAAK1E,EAAK2D,KAAK,eADfwJ,cATlB,KAoB1B,cAAC4B,GAAD,CAASyG,IAAI,QAAb,SACI,qBAAKhV,MAAOA,GAAMsB,KAAlB,SAEQwM,EAAQlL,KAAI,SAAA0D,GACR,OAAOA,EAAO3C,KAAKjB,OAAS,GAAK4D,EAAO3C,KAAKf,KAAI,SAACpD,EAAKmN,GACnD,IAAIC,EAASpN,EAAIoG,MAAM,KAAKiH,MAAMjH,MAAM,KAAK,GAC7C,MAAe,QAAXgH,GAMkB,SAAXA,EAJH,mBAAG5M,MAAO,CAAEE,QAAS,OAAQ+M,eAAgB,WAAYjL,WAAY,UAAwBkL,KAAM1N,EAAKyF,OAAO,SAASkI,IAAI,sBAA5H,SACI,mBAAGnN,MAAOA,GAAMoL,IAAhB,SAAsB5L,EAAIoG,MAAM,OAAOiH,MAAMjH,MAAM,KAAK,MAD0B+G,QAIvF,WAZF,KAwBzB,cAAC4B,GAAD,CAASyG,IAAI,UAAb,SACI,sBAAKhV,MAAOA,GAAM2R,QAAlB,WAEUhC,IAAe3G,EAAK+C,SAAW/C,EAAK6G,YAAe7G,EAAK6G,YAC1D,eAAC,IAAD,CAAMpQ,KAAK,wBAAwByF,aAAa,MAAMgO,SAAUA,GAAhE,UACI,cAAC,IAAK+B,KAAN,CAAWxV,KAAK,YAAhB,SACK,SAACyV,EAAD,OAAWC,EAAX,EAAWA,IAAKC,EAAhB,EAAgBA,OAAhB,OACG,qCACKF,EAAOtS,KAAI,gBAAGiC,EAAH,EAAGA,IAAKpF,EAAR,EAAQA,KAAM4V,EAAd,EAAcA,SAAaC,EAA3B,yBACR,eAAC,IAAD,CAAiBtV,MAAO,CAAEE,QAAS,OAAQ2J,aAAc,GAAK0L,MAAM,WAApE,UACI,cAAC,IAAKnB,KAAN,2BACQkB,GADR,IAEI7V,KAAM,CAACA,EAAM,SACb4V,SAAU,CAACA,EAAU,SACrBf,MAAO,CAAC,CAAEnR,KAAM,QAASoR,UAAU,EAAMvV,QAAS,uBAJtD,SAMI,cAAC,IAAD,CAAO+F,YAAY,aAEvB,cAAC,IAAD,CAAM/E,MAAOA,GAAMwS,WAAYvO,KAAK,YAAYF,QAAS,kBAAMqR,EAAO3V,QAT9DoF,MAahB,cAAC,IAAKuP,KAAN,UACI,cAAC,IAAD,CAAQrQ,QAAS,kBAAMoR,KAAOK,OAAK,EAACxV,MAAOA,GAAMsS,kBAAjD,SAAoE,cAAC,IAAD,CAAMtS,MAAOA,GAAMuS,SAAUtO,KAAK,yBAKtH,cAAC,IAAKmQ,KAAN,UACI,cAAC,IAAD,CAAQpU,MAAOA,GAAMyS,aAActP,KAAK,UAAU2R,SAAS,SAA3D,sBA5BhB,OAmCQlG,QAnCR,IAmCQA,OAnCR,EAmCQA,EAAOhM,KAAI,SAAC8K,EAAMf,GACd,OACI,sBAAiB3M,MAAOA,GAAM4R,OAA9B,UACI,sBAAK5R,MAAOA,GAAMgK,OAAlB,UACI,cAAC,IAAD,CAAQhK,MAAO,CAAEc,gBAAiB,YAAM4M,QAAN,IAAMA,OAAN,EAAMA,EAAM3M,QAASsL,KAAM,GAAInI,IAAG,OAAEwJ,QAAF,IAAEA,OAAF,EAAEA,EAAM1D,SAC3E0E,EAAY+G,SAAZ,OAAqB/H,QAArB,IAAqBA,OAArB,EAAqBA,EAAMxG,MAAQ,sBAAMlH,MAAOA,GAAMiS,SAE3D,mBAAGjS,MAAO,CAAEQ,SAAU,QAAtB,gBAAiCkN,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAMgI,aALjC/I,UAtCH,SAqDjCsC,GACE,sBAAKjP,MAAOA,GAAM6R,UAAlB,UACI,cAAC,IAAD,CAAM7R,MAAOA,GAAM8R,cAAe7N,KAAK,mBACvC,mBAAGjE,MAAOA,GAAMgS,cAAejO,QAAS,WACpCkM,KACAtB,EAAM3F,EAAK9B,MAFf,8BAQXmI,GAAqB,sBAAKrP,MAAOA,GAAMyQ,oBAAlB,UAClB,cAAC,IAAD,CAAMzQ,MAAOA,GAAM0Q,eAAgBzM,KAAK,sBACxC,sBAAKjE,MAAOA,GAAM2V,eAAlB,UACI,qBAAK3V,MAAOA,GAAM4V,gBAAlB,4BACA,sBAAK5V,MAAOA,GAAM6V,kBAAlB,UACI,cAAC,IAAD,CAAQ7V,MAAOA,GAAM8V,iBAAkB5R,IAAKiL,EAAa,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAenF,OAAlB,OAA2BhB,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAM8J,sBAAjC,iBAA2B,EAAsBG,IAAI,UAArD,aAA2B,EAA8BjJ,SAClH,gCACI,mBAAGhK,MAAOA,GAAM+V,eAAhB,SAAiC5G,EAAa,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAe7C,SAAlB,OAA6BtD,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAM8J,sBAAnC,iBAA6B,EAAsBG,IAAI,UAAvD,aAA6B,EAA8B3G,WACzG,mBAAGtM,MAAOA,GAAMgW,sBAAhB,SAAwC7G,EAAa,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAenQ,QAAlB,OAA4BgK,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAM8J,sBAAlC,iBAA4B,EAAsBG,IAAI,UAAtD,aAA4B,EAA8BjU,4BCjkBlIiX,GAFO,SAAC1W,GAAD,OAAQiI,EAAYe,IAAZ,uBAAgChJ,KCkG7C2W,GA9FI,SAAC,GAAgE,IAA9DjN,EAA6D,EAA7DA,OAAQD,EAAqD,EAArDA,KAAMmN,EAA+C,EAA/CA,iBAAmCxH,GAAY,EAA7ByH,MAA6B,EAAtBC,SAAsB,EAAZ1H,OACnE,EAA8B5P,mBAAS,IAAvC,mBAAO+O,EAAP,KAAgBhP,EAAhB,KACA,EAA+BC,mBAASiK,GAAxC,mBAAOsN,EAAP,KAAoBxH,EAApB,KACA,EAAoC/P,mBAAS,MAA7C,mBAAOwX,EAAP,KAAmBC,EAAnB,KACA,EAAsCzX,mBAAS,IAA/C,mBAAO2P,EAAP,KAAoB+H,EAApB,KA+EA,OAzDA/K,oBAAS,sBAAC,4BAAAO,EAAA,yDACN6C,EAAQ9F,IACW,KAAX,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,KAFJ,gCAIc+O,GAAA,OAA2BjN,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAM9B,KAJ/C,OAKiB,OADfgF,EAJF,QAKMC,QACJrN,EAAWoN,EAAIL,KAAK0E,KANtB,2CASP,CAACvH,IAEJ0C,qBAAU,WAkBN,OAjBAzC,EAAO0C,GAAG,oBAAoB,SAACrF,EAAQoQ,GACnCP,EAAiBO,GACjBP,EAAiB,IACbO,KAAM,OAAK1N,QAAL,IAAKA,OAAL,EAAKA,EAAM9B,MACjBsP,EAAclQ,MAEtB2C,EAAO0C,GAAG,kBAAkB,SAACpM,GACzB,IAAMoX,EAAI,YAAO7I,GACjB6I,EAAKnJ,OAAM,SAACoJ,EAAGjK,GACX,OAAIiK,EAAE1P,MAAQ3H,IACVoX,EAAKhJ,OAAOhB,EAAO,IACZ,MAIf7N,EAAW,YAAI6X,OAEZ,WACH1N,EAAO+C,IAAI,oBACX/C,EAAO+C,IAAI,qBAEhB,CAAC8B,EAAS7E,IAEbyC,qBAAU,WACF6K,GACAzX,EAAW,GAAD,mBAAKgP,GAAL,CAAcyI,OAE7B,CAACA,IAEJ7K,qBAAU,WASN,OARAzC,EAAO0C,GAAG,YAAY,SAACiD,GACnB6H,EAAe,YAAI7H,OAGvB3F,EAAO0C,GAAG,aAAa,SAACiD,GACpB6H,EAAe,YAAI7H,OAGhB,WACH3F,EAAO+C,IAAI,YACX/C,EAAO+C,IAAI,gBAGhB,CAAC0C,EAAYzF,IAGZ,gCACI,cAAC,GAAD,CAAYyF,YAAaA,EAAa1F,KAAMA,EAAM8E,QAASA,EAASa,MAAOA,EAAO1F,OAAQA,IAC1F,gCACI,cAAC,EAAD,CAASD,KAAMsN,EAAarN,OAAQA,EAAQ6E,QAASA,EAAShP,WAAYA,EAAYiP,cA7E5E,SAACzH,EAAQyF,GAC3B,IAAID,EAAS9D,aAAaC,QAAQ,UAClC,GAAI3B,EAAOsC,KAAKkD,SAAWA,GAAUC,IAAYD,EAAQ,CACrD,IAAM6K,EAAI,YAAO7I,GACjB6I,EAAKnJ,OAAM,SAACoJ,EAAGjK,GACX,OAAIiK,EAAE1P,MAAQZ,EAAOY,MACjByP,EAAKhJ,OAAOhB,EAAO,IACZ,MAIf7N,EAAW,YAAI6X,IACf1N,EAAO2E,KAAK,SAAUtH,EAAOY,IAAK8B,OAkE9B,cAAC,EAAD,CAAOA,KAAMsN,EAAaxX,WAlFhB,SAACE,EAAS2E,GAC5BsF,EAAO2E,KAAK,OAAQ5O,EAAS2E,EAAMqE,aAAaC,QAAQ,UAAWe,EAAK9B,MAiFX+B,OAAQA,W,oDCpD9D4N,I,OAtCD,WACV,MAA0B9X,oBAAS,GAAnC,mBAAO+X,EAAP,KAAcC,EAAd,KAIM/W,EAAQ,CACVuK,UAAW,CACPpK,SAAU,WACVC,KAAM,OACNC,IAAK,SACLH,QAPMJ,wBAAc,CAACC,SAAU,OAOd,OAAS,SAG9BiX,KAAM,CACFxW,SAAU,OACVO,MAAO,OACP8J,WAAY,OACZoM,UAAWH,EAAQ,sBAAwB,OAC3C3M,QAAS2M,EAAQ,EAAI,EACrBlM,WAAY,YACZhE,WAAY,6CAUpB,OANA8E,qBAAU,WACNwL,YAAW,WACPH,GAAS,KACV,OACJ,IAGC,sBAAK/W,MAAOA,EAAMuK,UAAlB,UACI,mBAAG4M,UAAU,aAAb,sBACA,mBAAGnX,MAAOA,EAAMgX,KAAhB,qDC/BCI,I,OAJC,SAAC1J,GAAD,OAAUlG,EAAY8G,KAAK,cAAeZ,KAI3C0J,GAHI,SAAC1J,GAAD,OAAUlG,EAAY8G,KAAK,iBAAkBZ,IAGjD0J,GAFE,SAAC1J,GAAD,OAAUlG,EAAY8G,KAAK,eAAgBZ,ICQ1D2C,KAAMgH,UAAU,CACZC,UAAW,IACXC,WAAW,EACXpX,SAAUkQ,KAAMmH,SAASC,eAG7B,IA6VeC,GA7VD,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,QACpB,GADwD,EAA3BC,YAA2B,EAAd7Y,QAChBD,oBAAS,IAAnC,mBAAOyU,EAAP,KAAcsE,EAAd,KACA,EAAwB/Y,mBAAS,CAAEgZ,MAAO,GAAIrC,SAAU,GAAIpJ,SAAU,GAAI0L,SAAU,KAApF,mBAAOtK,EAAP,KAAauK,EAAb,KACA,EAA0BlZ,oBAAS,GAAnC,mBAAOmZ,EAAP,KAAcC,EAAd,KACA,EAAoCpZ,mBAAS,CAAEgZ,MAAO,GAAIK,KAAM,KAAhE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BvZ,mBAAS,SAArC,mBAAOwZ,EAAP,KAAeC,EAAf,KAEM3Y,EAAQC,wBAAc,CAAEC,SAAU,OAClCC,EAAQ,CACVO,UAAW,CACPL,QAAS,QACT2J,aAAc,QAGlB4O,IAAK,CACDtY,SAAU,WACVG,MAAO,OACPqB,OAAQ,OACRC,WAAY,yFAGhB8W,OAAQ,CACJpY,MAAO,OACPsB,WAAY,UACZb,MAAO,UACPY,OAAQ,MACRkI,aAAc,OAGlB8O,UAAW,CACPrY,MAAO,QACPiL,SAAU,SACV3J,WAAY,UACZG,QAAS,oBACTD,aAAc,OACdH,OAAQ,QACR5B,SAAU,QACV6G,WAAY,mBAGhBgS,WAAY,CACRtY,MAAO,QACPiL,SAAU,SACV3J,WAAY,UACZG,QAAS,oBACTD,aAAc,OACdH,OAAQ,QACR5B,SAAU,QACV6G,WAAY,mBAGhBiS,OAAQ,CACJhO,WAAY,OACZrK,SAAU,OACVqJ,aAAc,QACde,WAAY,UAGhBkO,cAAe,CACXjO,WAAY,OACZ3J,OAAQ,UACRH,MAAOmX,EAAQ,UAAY,UAC3BtR,WAAY,eAGhBmS,QAAS,CACL7Y,QAAS,OACT4G,cAAe,SACfiD,OAAQ,OACRzJ,MAAO,MACPM,WAAY,MACZiJ,aAAc,OAGlBmP,MAAO,CACHC,UAAW,SACX9Y,SAAU,WACVc,MAAOpB,EAAQ,EAAI,OACnBO,KAAMP,EAAQ,EAAI,OAClBkK,OAAQ,OACR1J,IAAK,MACLH,QAAS,OACT+M,eAAgB,UAGpBiM,UAAW,CACPnY,MAAO,MACP8J,WAAY,QAGhBsO,MAAO,CACHpY,MAAO,UACPoJ,QAASyN,EAAU,EAAI,EACvBhR,WAAY,kBAIdwS,EAAW,uCAAG,4BAAAnN,EAAA,+EAEOmL,GAAqB1J,GAF5B,OAERzH,EAFQ,OAGZoK,KAAMC,QAAN,UAAiBrK,EAAO4F,KAAK0E,MAC7BiI,EAAU,UAJE,gDAMZV,GAAS,GACTzH,KAAMmD,MAAN,UAAe,KAAMC,SAAS5H,KAAK0E,MAPvB,yDAAH,qDAWX8I,EAAM,uCAAG,4BAAApN,EAAA,sEACQmL,GAAmBiB,GAD3B,OAEW,OADlBpS,EADO,QAEAkG,QACPkE,KAAMC,QAAN,UAAiBrK,EAAO4F,KAAK0E,MAC7BiI,EAAU,UAGVnI,KAAMmD,MAAN,UAAeA,EAAMC,SAAS5H,KAAK0E,MAP5B,2CAAH,qDAWZ,OACI,sBAAKvQ,MAAOA,EAAMyY,IAAlB,UACI,cAAC,GAAD,IACA,sBAAKzY,MAAOA,EAAMgZ,MAAlB,UAEgB,UAAXT,GAAsB,uBAAMrT,aAAa,MAAMoU,YAAU,EAACtZ,MAAOA,EAAM2Y,UAAjD,UACnB,oBAAI3Y,MAAOA,EAAM6Y,OAAjB,mBACA,cAACpU,EAAA,EAAD,CACI8P,UAAQ,EACR7P,MAAOgJ,EAAKqK,MACZxY,GAAG,4BACHS,MAAOA,EAAMO,UACbyE,SAAU,SAACJ,GAAD,OAAOqT,EAAQ,2BAAKvK,GAAN,IAAYqK,MAAOnT,EAAEK,OAAOP,UACpDK,YAAY,QACZI,WAAY,CACRoU,eACI,cAAClU,EAAA,EAAD,CAAgBlF,SAAS,QAAzB,SACI,cAAC,KAAD,SAMhB,cAACsE,EAAA,EAAD,CACI8P,UAAQ,EACR7P,MAAOgJ,EAAKsK,SACZzY,GAAG,iBACHS,MAAOA,EAAMO,UACbyE,SAAU,SAACJ,GAAD,OAAOqT,EAAQ,2BAAKvK,GAAN,IAAYsK,SAAUpT,EAAEK,OAAOP,UACvDC,QAAS,SAACC,GACQ,UAAVA,EAAEC,KACF8S,EAAMjK,IAGd3I,YAAY,WACZ5B,KAAK,WACLgC,WAAY,CACRoU,eACI,cAAClU,EAAA,EAAD,CAAgBlF,SAAS,QAAzB,SACI,cAAC,KAAD,SAKhB,oBAAIH,MAAOA,EAAMmZ,MAAjB,kCACA,qBAAKnZ,MAAOA,EAAM+Y,QAAlB,SACI,cAACS,GAAA,EAAD,CAAQxZ,MAAOA,EAAM0Y,OAAQ5T,QAAQ,YAAY/D,MAAM,UAAUgD,QAAS,SAACa,GACvEA,EAAE6U,iBACF9B,EAAMjK,IAFV,sBAMJ,mBAAG1N,MAAOA,EAAM8Y,cACZ1M,aAAc,kBAAM+L,GAAS,IAC7BhR,aAAc,kBAAMgR,GAAS,IAC7BpU,QAAS,SAAAa,GACLA,EAAE6U,iBACFxB,EAAQ,CAAEF,MAAO,GAAIC,SAAU,KAE/BQ,EAAU,WAPlB,iCAeQ,WAAXD,GAAuB,uBAAMrT,aAAa,MAAMoU,YAAU,EAACtZ,MAAOA,EAAM2Y,UAAjD,UACpB,oBAAI3Y,MAAOA,EAAM6Y,OAAjB,oBACA,cAACpU,EAAA,EAAD,CACI8P,UAAQ,EACR7P,MAAO2T,EAAWN,MAClBxY,GAAG,4BACHS,MAAOA,EAAMO,UACbyE,SAAU,SAACJ,GAAD,OAAO0T,EAAc,2BAAKD,GAAN,IAAkBN,MAAOnT,EAAEK,OAAOP,UAChEK,YAAY,QACZI,WAAY,CACRoU,eACI,cAAClU,EAAA,EAAD,CAAgBlF,SAAS,QAAzB,SACI,cAAC,KAAD,SAMhB,cAACsE,EAAA,EAAD,CACI8P,UAAQ,EACRhV,GAAG,iBACHS,MAAOA,EAAMO,UACbyE,SAAU,SAACJ,GAAD,OAAO0T,EAAc,2BAAKD,GAAN,IAAkBD,KAAMxT,EAAEK,OAAOP,UAC/DK,YAAY,cACZI,WAAY,CACRoU,eACI,cAAClU,EAAA,EAAD,CAAgBlF,SAAS,QAAzB,SACI,cAAC,KAAD,SAMfqT,EAAQ,oBAAIxT,MAAOA,EAAMmZ,MAAjB,kCAAoD,KAC7D,qBAAKnZ,MAAOA,EAAM+Y,QAAlB,SACI,cAACS,GAAA,EAAD,CAAQxZ,MAAOA,EAAM0Y,OAAQ5T,QAAQ,YAAY/D,MAAM,UAAUgD,QAAS,SAACa,GACvEA,EAAE6U,iBACFJ,KAFJ,0BAmBI,WAAXd,GAAuB,uBAAMrT,aAAa,MAAMoU,YAAU,EAACtZ,MAAOA,EAAM4Y,WAAjD,UACpB,oBAAI5Y,MAAOA,EAAM6Y,OAAjB,4BAEA,cAACpU,EAAA,EAAD,CACI8P,UAAQ,EACR7P,MAAOgJ,EAAKqK,MACZxY,GAAG,iBACHS,MAAOA,EAAMO,UACbyE,SAAU,SAACJ,GAAD,OAAOqT,GAAQ,SAAAvK,GAAI,kCAAUA,GAAV,IAAgBqK,MAAOnT,EAAEK,OAAOP,YAC7DK,YAAY,QACZI,WAAY,CACRoU,eACI,cAAClU,EAAA,EAAD,CAAgBlF,SAAS,QAAzB,SACI,cAAC,KAAD,SAMhB,cAACsE,EAAA,EAAD,CACI8P,UAAQ,EACR7P,MAAOgJ,EAAKgI,SACZnW,GAAG,iBACHS,MAAOA,EAAMO,UACbyE,SAAU,SAACJ,GAAD,OAAOqT,GAAQ,SAAAvK,GAAI,kCAAUA,GAAV,IAAgBgI,SAAU9Q,EAAEK,OAAOP,YAChEK,YAAY,WACZI,WAAY,CACRoU,eACI,cAAClU,EAAA,EAAD,CAAgBlF,SAAS,QAAzB,SACI,cAAC,KAAD,SAMhB,cAACsE,EAAA,EAAD,CACI8P,UAAQ,EACR7P,MAAOgJ,EAAKpB,SACZ/M,GAAG,iBACHS,MAAOA,EAAMO,UACbyE,SAAU,SAACJ,GAAD,OAAOqT,GAAQ,SAAAvK,GAAI,kCAAUA,GAAV,IAAgBpB,SAAU1H,EAAEK,OAAOP,YAChEK,YAAY,WACZI,WAAY,CACRoU,eACI,cAAClU,EAAA,EAAD,CAAgBlF,SAAS,QAAzB,SACI,cAAC,KAAD,SAMhB,cAACsE,EAAA,EAAD,CACI8P,UAAQ,EACR7P,MAAOgJ,EAAKsK,SACZzY,GAAG,iBACHS,MAAOA,EAAMO,UACb4C,KAAK,WACL6B,SAAU,SAACJ,GAAD,OAAOqT,GAAQ,SAAAvK,GAAI,kCAAUA,GAAV,IAAgBsK,SAAUpT,EAAEK,OAAOP,YAChEK,YAAY,WACZI,WAAY,CACRoU,eACI,cAAClU,EAAA,EAAD,CAAgBlF,SAAS,QAAzB,SACI,cAAC,KAAD,SAMhB,cAACsE,EAAA,EAAD,CACI8P,UAAQ,EACRf,MAAOA,EACPjU,GAAIiU,EAAQ,6BAA+B,iBAC3CxT,MAAOA,EAAMO,UACb4C,KAAK,WACL6B,SAAU,SAACJ,GACPkT,EAASlT,EAAEK,OAAOP,QAAUgJ,EAAKsK,WAErCrT,QAAS,SAACC,GACQ,UAAVA,EAAEC,KACFuU,KAGRrU,YAAY,mBACZI,WAAY,CACRoU,eACI,cAAClU,EAAA,EAAD,CAAgBlF,SAAS,QAAzB,SACI,cAAC,KAAD,SAKhB,sBAAKH,MAAOA,EAAM+Y,QAAlB,UACI,cAACS,GAAA,EAAD,CAAQxZ,MAAOA,EAAM0Y,OAAQ5T,QAAQ,YAAY/D,MAAM,UAAUgD,QAAS,SAACa,GACvEA,EAAE6U,iBACFL,IACAd,EAAc,CAAEP,MAAOrK,EAAKqK,SAHhC,4BAKA,cAACyB,GAAA,EAAD,CAAQxZ,MAAO,CAAE4B,WAAY,UAAWb,MAAO,UAAWuB,OAAQ,mBAAqBwC,QAAQ,YAAY/D,MAAM,UAAUgD,QAAS,SAACa,GACjIA,EAAE6U,iBACFjB,EAAU,UAFd,+B,uCC/VXkB,GAFG,kBAAMlS,EAAYe,IAAI,eAEzBmR,GADM,SAACna,EAAImO,GAAL,OAAclG,EAAYnE,IAAZ,gBAAyB9D,GAAMmO,ICO1DiM,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLxZ,MAAOuZ,EAAME,QAAQ,IACrBpY,OAAQkY,EAAME,QAAQ,SA0LXC,GAtLE,SAAC,GAAsB,IAApBtM,EAAmB,EAAnBA,KAAMuM,EAAa,EAAbA,OAClBC,EAAUP,KAChB,EAA0C5a,oBAAS,GAAnD,mBAAOkQ,EAAP,KAAsBC,EAAtB,KACA,EAAkDnQ,mBAAS,MAA3D,mBAAOob,EAAP,KAA0BC,EAA1B,KACA,EAAgCrb,mBAAS,CACvC2W,SAAU,GACVpJ,SAAU,GACVtC,OAAQ,GACRgO,SAAU,KAJZ,mBAAOqC,EAAP,KAAiBC,EAAjB,KAMA,EAAoCvb,qBAApC,mBAAOwb,EAAP,KAAmBC,EAAnB,KAEMC,EAAqB,WACzBvL,GAAkBD,IAIdyL,EAAoB,uCAAG,4CAAAzO,EAAA,yDACvB0O,EAAmBN,GACnBE,EAFuB,wBAGnBtX,EAAW,CACfC,YAAaqX,EAAWpX,MAEpBiN,EAAaxR,EAAQwE,IAAR,sBAA2BmX,EAAW9a,OANhC,SAOF2Q,EAAW/M,IAAIkX,EAAYtX,GAPzB,cAOnBM,EAPmB,gBAQPA,EAASH,IAAII,iBARN,OAQnBhE,EARmB,OASzBmb,EAAiB3Q,OAASxK,EATD,mCAYTka,GAAA,OAAuBhM,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMnO,GAAIob,GAZxB,QAYrBzO,EAZqB,OAazBmE,KAAMC,QAAN,OAAcpE,QAAd,IAAcA,GAAd,UAAcA,EAAKL,YAAnB,aAAc,EAAW0E,KAbA,mDAezBF,KAAMmD,MAAN,gDAAe,KAAKC,gBAApB,iBAAe,EAAe5H,YAA9B,aAAe,EAAqB0E,MAfX,QAiB3B6J,EAAqBC,EAASrQ,QAC9BwQ,EAAc,MACdtL,GAAiB,GAnBU,2DAAH,qDAgCpBlP,EAAQ,CACZ4a,gBAAiB,CACf1a,QAAS,OACT8B,WAAY,SACZ6Y,aAAc,aACd5N,eAAgB,WAChBtL,OAAQ,QACRrB,MAAO,OACPQ,gBAAiB,UAEjB+I,aAAc,QAGhBG,OAAQ,CACNxJ,SAAU,WACV8G,YAAa,OACbzG,WAAY,OACZe,WAAY,YAAM8L,QAAN,IAAMA,OAAN,EAAMA,EAAM3M,OACxBG,OAAQ,WAEV4Z,KAAM,CACJC,SAAU,EACV7a,QAAS,OACT4G,cAAe,SACf9E,WAAY,SAEd0T,SAAU,CACR9K,WAAY,UACZoQ,UAAW,SACXnQ,WAAY,MACZrK,SAAU,OAEVO,MAAO,UACPgJ,OAAQ,OAEVuC,SAAU,CACR0O,UAAW,SACXpQ,WAAY,UACZ7I,QAAS,WACTjB,gBAAiB,UACjBgB,aAAc,OACdf,MAAO,UACPP,SAAU,QAIZya,eAAgB,CACd3a,MAAO,cACPJ,QAAS,QACT6J,OAAQ,OACRzH,OAAQ,sBAAgBoL,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAM3M,OAC9Be,aAAc,QACdZ,OAAQ,YAIZ,OACE,sBAAKlB,MAAOA,EAAM4a,gBAAlB,UACE,cAACM,GAAA,EAAD,CAAQnX,QAAS0W,EAAoBza,MAAOA,EAAMgK,OAAQmN,UAAW+C,EAAQJ,MAAO5V,IAAG,OAAEwJ,QAAF,IAAEA,OAAF,EAAEA,EAAM1D,SAG/F,eAAC,KAAD,CAAO+E,QAASE,EAAekM,UAAU,EAAOC,MAAM,mBAAmBC,SAAUZ,EAAoBa,OAAQ,KAA/G,UACGrM,GACC,gCACE,uBAAOjP,MAAOA,EAAMib,eAAgB7W,QAAQ,aAA5C,SAAyD,cAAC,IAAD,CAAYiI,KAAM,IAAKnI,IAAKiW,GAAwCzM,EAAK1D,WAClI,uBAAOzK,GAAG,aAAaS,MAAO,CAAEsF,WAAY,UAAYuO,OAAO,UAAU1Q,KAAK,OAAO6B,SA5EhE,SAACJ,GAC9B,IAAM2W,EAAgB3W,EAAEK,OAAO7F,MAAM,GAC/ByG,EAAS,IAAIC,WACnBD,EAAOE,cAAcwV,GACrB1V,EAAOG,UAAY,WACjBoU,EAAqBvU,EAAOI,SAE9BuU,EAAce,SAwEV,eAAC,IAAD,CACEtH,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBhB,SAAUwH,EAHZ,UAKE,cAAC,IAAKtG,KAAN,CAAWC,MAAM,YAAYC,MAAO,CAClC,CACEC,UAAU,EACVvV,QAAS,iCAHb,SAME,cAAC,IAAD,CAAO6T,aAAY,OAAEnF,QAAF,IAAEA,OAAF,EAAEA,EAAMgI,SAAU1Q,SAAU,SAACJ,GAAD,OAAO0V,EAAY,2BAAKD,GAAN,IAAgB3E,SAAU9Q,EAAEK,OAAOP,cAEtG,cAAC,IAAK0P,KAAN,CAAWC,MAAM,WAAWC,MAAO,CACjC,CACEC,UAAU,EACVvV,QAAS,gCAHb,SAME,cAAC,IAAD,CAAO6T,aAAY,OAAEnF,QAAF,IAAEA,OAAF,EAAEA,EAAMpB,SAAUtH,SAAU,SAACJ,GAAD,OAAO0V,EAAY,2BAAKD,GAAN,IAAgB/N,SAAU1H,EAAEK,OAAOP,cAEtG,cAAC,IAAK0P,KAAN,CAAWC,MAAM,WAAW5U,KAAK,WAC/B6U,MAAO,CACL,CACEkH,QAAS,uEACTxc,QAAS,+IAJf,SAOE,cAAC,IAAMyc,SAAP,CAAgBzW,SAAU,SAACJ,GAAD,OAAO0V,EAAY,2BAAKD,GAAN,IAAgBrC,SAAUpT,EAAEK,OAAOP,cAEjF,cAAC,IAAK0P,KAAN,CAAWC,MAAM,mBAAmB5U,KAAK,UACvC6U,MAAO,CACL,CACEkH,QAAS,uEACTxc,QAAS,8IAEX,gBAAG0c,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGlX,GACX,OAAKA,GAASgX,EAAc,cAAgBhX,EAGrC5B,QAAQE,OAAO,IAAI6Y,MAAM,qDAFvB/Y,QAAQC,cATzB,SAeE,cAAC,IAAM0Y,SAAP,MAGF,cAAC,IAAKrH,KAAN,CAAWD,WAAY,CAAEU,OAAQ,EAAGX,KAAM,IAA1C,SACE,cAAC,IAAD,CAAQ/Q,KAAK,UAAU2R,SAAS,SAAhC,0BAON,sBAAK9U,MAAOA,EAAM8a,KAAlB,UACE,mBAAG9a,MAAOA,EAAM0V,SAAhB,gBAA2BhI,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMgI,WACjC,mBAAG1V,MAAOA,EAAMsM,SAAhB,gBAA2BoB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMpB,cAEnC,cAAC,IAAD,CAAMrI,KAAK,sBAAsBjE,MAAO,CAAEQ,SAAU,OAAQ8G,YAAa,OAAQzG,WAAY,OAAQK,OAAQ,WAAa6C,QAASkW,QCxLnIN,GAAYC,cAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHxZ,MAAOuZ,EAAME,QAAQ,IACrBpY,OAAQkY,EAAME,QAAQ,KAG1B+B,MAAO,CACHxb,MAAOuZ,EAAME,QAAQ,GACrBpY,OAAQkY,EAAME,QAAQ,QAqJfgC,GAjJF,SAAC,GAA0F,IAAxF/S,EAAuF,EAAvFA,KAAMjF,EAAiF,EAAjFA,QAASiY,EAAwE,EAAxEA,cAA0DC,GAAc,EAAzD9F,iBAAyD,EAAvC+F,YAAuC,EAA1BC,WAA0B,EAAdF,SAErF,GADgBtC,KACY5a,oBAAS,IAArC,mBAAOqd,EAAP,KAAeC,EAAf,KACA,EAA0Btd,oBAAS,GAAnC,mBAAOmZ,EAAP,KAAcC,EAAd,KACA,EAA8BpZ,mBAAS,IAAvC,mBAAOud,EAAP,KAAgBC,EAAhB,KACA,EAAsCxd,mBAAS,MAA/C,mBAAOyd,EAAP,KAAoBC,EAApB,KACA,EAAkC1d,oBAAS,GAA3C,mBAAO2d,EAAP,KAAkBC,EAAlB,KACM9c,EAAQC,wBAAc,CAAEC,SAAU,OAElCC,EAAQ,CACV4c,eAAgB,CACZzc,SAAU,WACV8J,UAAW,QAGfjB,KAAM,CACF7I,SAAU,WACVG,MAAOT,EAAQ,OAAS,MACxBkK,OAAQ,OACRnI,WAAaqa,GAAW/D,EAAS,UAAY,UAC7CnW,QAAS,OACTD,aAAc,OACdD,UAAYoa,GAAW/D,EAAS,qCAAuC,OACvE3M,SAAU,SACV1B,aAAc,GACdgT,UAAWT,EAASvc,EAAQ,QAAU,QAAU,QAChD+G,WAAY,mDACZjF,OAAQ,QAGZqP,SAAU,CACNjH,OAAQ,MACRhI,QAAS,MACT7B,QAAS,OACTgB,OAAQ,UACRc,WAAY,SACZ6Y,aAAc,SACd/T,cAAe,MACfqE,IAAK,QAGTnB,OAAQ,CACJxJ,SAAU,OACV0J,WAAY,EACZtI,WAAY,YAAMoH,QAAN,IAAMA,OAAN,EAAMA,EAAMjI,QAG5B+b,YAAa,CACT/B,SAAU,KAGdgC,gBAAiB,CACbhT,OAAQ,MACRhI,QAAS,MACTvB,SAAU,OACVqK,WAAY,OACZ9J,MAAQkb,GAAW/D,EAAS,UAAY,UACxChY,QAAS,cACTmL,gBAAiB,EACjBC,gBAAiB,WACjBC,SAAU,SACVC,aAAc,WACdlL,MAAO,QACPmL,UAAW,cAGfuR,uBAAwB,CACpBjT,OAAQ,MACRhI,QAAS,MACTvB,SAAU,OACVO,MAAQkb,GAAW/D,EAAS,UAAY,UACxChY,QAAS,cACTmL,gBAAiB,EACjBC,gBAAiB,WACjBC,SAAU,SACVC,aAAc,WACdlL,MAAO,QACPmL,UAAW,cAGfwR,YAAa,CACTlc,MAAQkb,GAAW/D,EAAS,UAAY,WAG5CQ,OAAQ,CACJvY,SAAU,WACVK,SAAU,OACVO,MAAO,UACPE,MAAO,QACPZ,IAAK,GACL0J,OAAQ,OACRkN,UAAWmF,EAAS,gBAAkB,OACtCxV,WAAY,mBAGhBsW,WAAY,CACRtb,WAAY,UACZpB,SAAU,QACVqJ,aAAc,IACdI,UAAW,QACXnI,aAAc,MACdZ,OAAQ,UACRR,YAAa,OAGjByc,QAAS,CACLhd,SAAU,WACVK,SAAU,OACVS,MAAO,EACPZ,IAAK,EACLU,MAAO,YAkBf,OAdA2K,oBAAS,sBAAC,4BAAAO,EAAA,yDACFmQ,IAAWH,GACXI,GAAU,IAEN,OAAJrT,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,OAAQ8U,EAJZ,gCAKc3N,GAAoB2N,GALlC,OAMiB,OADf9P,EALF,QAMMC,SACJoQ,EAAWrQ,EAAIL,KAAK0E,IAAI6M,aACxBX,EAAevQ,EAAIL,KAAK0E,IAAI8M,iBAC5BV,GAAa,IATf,2CAYP,CAACV,EAASD,IAGT,qBAAKhc,MAAOA,EAAM4c,eAAgBxQ,aAAc,kBAAM+L,GAAS,IAAOhR,aAAc,kBAAMgR,GAAS,IAAnG,SACI,qBAAKnY,MAAOA,EAAMgJ,KAAlB,SACI,sBAAKhJ,MAAOA,EAAMgR,SAAUjN,QAAS,kBAAMA,EAAQiF,IAAnD,UACI,cAAC,IAAD,CAAQqD,KAAM,GAAIrM,MAAOA,EAAMgK,OAAQ9F,IAAK8E,EAAKgB,SACjD,sBAAKhK,MAAOA,EAAM8c,YAAlB,UACI,mBAAG9c,MAAOA,EAAM+c,gBAAhB,gBAAkC/T,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAMvJ,OACxC,mBAAGO,MAAOA,EAAMgd,uBAAhB,SAAyCN,EAAYJ,EAAH,OAAatT,QAAb,IAAaA,OAAb,EAAaA,EAAMoU,iBAEzE,sBAAMpd,MAAOA,EAAMid,YAAnB,SAAiC1Q,IAAO,GAAD,OAAImQ,EAAYF,EAAH,OAAiBxT,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMqU,kBAAmBC,YAC7FtU,EAAK6G,WAAa,cAAC,IAAD,CAAM7P,MAAOA,EAAMmd,QAASlZ,KAAK,iCCrIzDsZ,GAxBG,SAAC,GAAwG,IAAvGnH,EAAsG,EAAtGA,MAAiBvE,GAAqF,EAA/F2L,SAA+F,EAArF3L,WAAW4L,EAA0E,EAA1EA,WAAYtB,EAA8D,EAA9DA,WAAY7F,EAAkD,EAAlDA,YAAa0F,EAAqC,EAArCA,cAAe7F,EAAsB,EAAtBA,iBAYhG,OACI,qBAAKnW,MAXK,CACNuL,SAAU,OACVjL,MAAO,OACPqB,OAAQ,MACRb,gBAAiB,WAOrB,gBAEGsV,QAFH,IAEGA,OAFH,EAEGA,EAAOxT,KAAI,SAACoG,GACX,OACE,cAAC,GAAD,CAAsBiT,SAAoB,OAAX3F,QAAW,IAAXA,OAAA,EAAAA,EAAapP,QAAb,OAAqB8B,QAArB,IAAqBA,OAArB,EAAqBA,EAAM9B,KAAK8B,KAAMA,EAAMgT,cAAeA,EAAe7F,iBAAkBA,EAAkB+F,YAAarK,EAAW9N,QAAS0Z,EAAYtB,WAAYA,GAAtM,OAAWnT,QAAX,IAAWA,OAAX,EAAWA,EAAM9B,WCiHhBwW,GA/HK,SAAC,GAA8C,IAA5CF,EAA2C,EAA3CA,SAAUG,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBACvC,EAA0C7e,oBAAS,GAAnD,mBAAO8e,EAAP,KAAsBC,EAAtB,KACA,EAAsC/e,oBAAS,GAA/C,mBAAOgf,EAAP,KAAoBC,EAApB,KACA,EAAkCjf,oBAAS,GAA3C,mBAAO8Q,EAAP,KACA,GADA,KACwB9Q,mBAAS,CAAEU,KAAM,GAAImQ,YAAa,GAAIC,WAAW,KAAzE,mBAAO7G,EAAP,KAAa8F,EAAb,KAEA,EAA8B/P,mBAAS,IAAvC,mBAAOiV,EAAP,KAAgBiK,EAAhB,KAGMje,EAAQ,CACVke,oBAAqB,CACjBhe,QAAS,OACT+M,eAAgB,eAChBjL,WAAY,SACZlB,gBAAiB,UAIjBa,OAAQ,MACRI,QAAS,OACTzB,MAAO,QAEXL,MAAO,CACHK,MAAO,OACPG,QAAS,OACTD,SAAU,SACVsB,aAAc,MACdH,OAAQ,OACRb,gBAAiB,UACjBwB,OAAQ,oBACRC,UAAW,aACXwH,OAAQ,MACRlJ,WAAY,QAEhBsU,IAAK,CACDpU,MAAO,UACPP,SAAU,OACVuJ,OAAQ,YACR7I,OAAQ,WAEZqS,KAAM,CACFxS,MAAO,UACPP,SAAU,OACVuJ,OAAQ,YACR7I,OAAQ,WAEZid,QAAS,CACLpd,MAAO,UACPP,SAAU,OACVuJ,OAAQ,YACR7I,OAAQ,YAQVkd,EAAkB,WACpBN,GAAiB,IAYfO,EAAgB,WAClBL,GAAe,IAQnB,OACI,qCACI,sBAAKhe,MAAOA,EAAMke,oBAAlB,UACI,cAAC,IAAD,CAAMle,MAAOA,EAAMmV,IAAKlR,KAAK,oBAAoBF,QAAS6Z,IAC1D,cAAC,IAAD,CAAM5d,MAAOA,EAAMmV,IAAKlR,KAAK,sBAAsBF,QA9BvC,WACpB+Z,GAAiB,MA8BT,cAAC,IAAD,CAAM9d,MAAOA,EAAMuT,KAAMtP,KAAK,oCAAoCF,QAlBxD,WAClBia,GAAe,SAoBX,cAAC,KAAD,CAAO5C,MAAM,cAAcD,UAAU,EAAOpM,QAAS8O,EAAevC,OAAQ,CACxE,cAAC,IAAD,CAAQvX,QAASqa,EAAjB,oBAGA,cAAC,IAAD,CAAqBjb,KAAK,UAAUY,QA9B9B,WACdyZ,EAASxU,GACToV,KA4BQ,mBAAY,WAJhB,SAQI,eAAC,IAAD,CAAM3e,KAAK,gBAAX,UACI,cAAC,IAAK2U,KAAN,CAAWC,MAAM,YAAY5U,KAAK,WAAW6U,MAAO,CAAC,CAAEC,UAAU,IAASvP,SAAU,SAACJ,GAAD,OAAOkK,GAAQ,SAAA9F,GAAI,kCAAUA,GAAV,IAAgBvJ,KAAMmF,EAAEK,OAAOP,YAAtI,SAEI,cAAC,IAAD,MAEJ,cAAC,IAAK0P,KAAN,CAAWC,MAAM,cAAc5U,KAAK,cAAc6U,MAAO,CAAC,CAAEC,UAAU,IAASvP,SAAU,SAACJ,GAAD,OAAOkK,GAAQ,SAAA9F,GAAI,kCAAUA,GAAV,IAAgB4G,YAAahL,EAAEK,OAAOP,YAAlJ,SACI,cAAC,IAAD,MAEJ,cAAC,IAAD,CAAQ+P,gBAAgB,UAAUC,kBAAkB,SAAS1P,SAAU,SAACJ,GAAD,OAAOkK,GAAQ,SAAA9F,GAAI,kCAAUA,GAAV,IAAgB6G,WAAYA,eAI9H,cAAC,KAAD,CAAOuL,MAAM,YAAYD,UAAU,EAAOpM,QAASgP,EAAazC,OAAQ,CACpE,cAAC,IAAD,CAAQvX,QAASsa,EAAjB,oBAGA,cAAC,IAAD,CAAqBlb,KAAK,UAAUY,QArCzB,WACnB4Z,EAAS3J,GACTqK,KAmCQ,iBAAY,WAJhB,SAQI,cAAC,IAAD,CAAM5e,KAAK,gBAAX,SACI,cAAC,IAAK2U,KAAN,CAAWC,MAAM,UAAU5U,KAAK,cAAc6U,MAAO,CAAC,CAAEC,UAAU,IAASvP,SAAU,SAACJ,GAAD,OAAOqZ,EAAWrZ,EAAEK,OAAOP,QAAhH,SACI,cAAC,IAAD,cCvGT4Z,GArBD,WAcV,OACI,qBAAKte,MAbE,CACHE,QAAS,OACT+M,eAAgB,SAChBjL,WAAY,SACZ1B,MAAO,OACPqB,OAAQ,MACRnB,SAAU,QACVM,gBAAiB,qBACjBiJ,OAAQ,YACRjI,aAAc,QAIlB,SACI,uDAAyB,uBAAzB,8BCoCGyc,GA/CI,SAAC,GAA0F,IAAzFnI,EAAwF,EAAxFA,MAAOoH,EAAiF,EAAjFA,SAAU3L,EAAuE,EAAvEA,UAAW4L,EAA4D,EAA5DA,WAAYtB,EAAgD,EAAhDA,WAAY7F,EAAoC,EAApCA,YAAasH,EAAuB,EAAvBA,iBAClF,EAAoC7e,mBAAS,IAA7C,mBAAOyf,EAAP,KAAmBC,EAAnB,KAEMC,EAAS,CACXC,aAAc,CACVze,QAAS,OACT+M,eAAgB,gBAChBjL,WAAY,UAEhB/B,MAAO,CACHK,MAAO,OACPqB,OAAQ,OACRG,aAAc,OACd8c,YAAa,WAEjBC,WAAY,CACRve,MAAO,OACPqB,OAAQ,OACR8P,UAAW,UAEf0D,IAAK,CACDpU,MAAO,UACPP,SAAU,OACVuJ,OAAQ,YACR7I,OAAQ,YAYhB,OACI,sBAAKlB,MAAO0e,EAAOG,WAAnB,UACI,sBAAK7e,MAAO0e,EAAOC,aAAnB,UACI,cAAC,IAAD,CAAM3e,MAAO0e,EAAOvJ,IAAKlR,KAAK,mBAAmBF,QAAS,kBAAM6Z,OAChE,uBAAO5d,MAAO0e,EAAOze,MAAO8E,YAAY,cAAcC,SAX7C,SAACJ,GAClB,IAAMF,EAAQE,EAAEK,OAAOP,MACvB+Z,EAAcrI,EAAMpS,QAAO,SAAAgF,GAAI,OAAIA,EAAKvJ,KAAKqf,cAAcrJ,SAAS/Q,EAAMoa,yBAWtE,cAAC,GAAD,CAAWxI,YAAaA,EAAaF,MAAOoI,EAAYhB,SAAUA,EAAU3L,UAAWA,EAAW4L,WAAYA,EAAYtB,WAAYA,EAAYyB,iBAAkBA,QC9BhL5f,EAAQ,KAAUC,SAoMH8gB,OAlMf,WACE,MAAgChgB,oBAAS,GAAzC,mBAAkBigB,GAAlB,WACA,EAA0BjgB,oBAAS,GAAnC,mBAAOyU,EAAP,KAAcsE,EAAd,KACA,EAA0C/Y,oBAAS,GAAnD,mBAAOkgB,EAAP,KAAsBC,EAAtB,KACA,EAAwBngB,mBAAS,MAAjC,mBAAO2O,EAAP,KAAauK,EAAb,KACA,EAA8BlZ,oBAAS,GAAvC,mBAAkBogB,GAAlB,WACA,EAAsCpgB,mBAAS,CAC7CmI,KAAM,EACNzH,KAAM,IACNsB,MAAO,KAHT,mBAAOuV,EAAP,KAAoB8I,EAApB,KAKA,EAA0CrgB,mBAAS,IAAnD,mBAAOid,EAAP,KAAsB7F,EAAtB,KACA,EAA0BpX,mBAAS,IAAnC,mBAAOqX,EAAP,KAAcC,EAAd,KACA,EAA0BtX,oBAAS,GAAnC,mBAAcsgB,GAAd,WACA,EAA8BtgB,mBAAS,IAAvC,mBAAOC,EAAP,KACA,GADA,KAC4CD,oBAAS,IAArD,mBAAOugB,EAAP,KAAuBC,EAAvB,KACA,EAA0BxgB,mBAAS,IAAnC,mBAEMkK,GAFN,UAEeuW,IAAGC,QAAQphB,wCAGpB2B,EAAQ,CACZI,KAAM,CACJE,MAHUR,wBAAc,CAAEC,SAAU,OAGrB,OAAS,MACxB2f,MAAO,OACPnd,UAAW,cAGbtB,MAAO,CACLX,MAAO,OACPqB,OAAQ,OACR+d,MAAO,QACPvf,SAAU,WACV4a,SAAU,GAGZH,gBAAiB,CACf1a,QAAS,OACT8B,WAAY,SACZuP,aAAc,oBACdxP,QAAS,OACTvB,SAAU,QACVqJ,aAAc,SAIZ8N,EAAK,uCAAG,WAAOjK,GAAP,uBAAAzB,EAAA,6DACRH,EAAS,GADD,kBAGWsL,GAAkB1J,GAH7B,OAGJzH,EAHI,OAIVoK,KAAMC,QAAQ,0BACd4O,EAAuC,OAAtBjZ,EAAO4F,KAAK9D,OAC7B+P,EAA+B,OAAtB7R,EAAO4F,KAAK9D,OACrBC,aAAa2X,QAAQ,QAAS1Z,EAAO4F,KAAK9D,OAC1C+D,EAAS7F,EAAO4F,KAAK6B,KAAKxG,IARhB,kDAUVmJ,KAAMmD,MAAN,gDAAe,KAAKC,gBAApB,iBAAe,EAAe5H,YAA9B,aAAe,EAAqB0E,MAV1B,yBAYclC,KAZd,eAYNuR,EAZM,OAaZvJ,EAASuJ,EAAY/T,KAAK0E,KACM,IAA5BqP,EAAY/T,KAAKnJ,QACnB0c,EAAeQ,EAAY/T,KAAK,IAftB,UAgBN5C,EAAO2E,KAAK,QAAS9B,GAhBf,0DAAH,sDAmBL+F,EAAS,uCAAG,WAAOtS,GAAP,mBAAA0M,EAAA,sEACAoC,GAAsB9O,GADtB,OAEG,OADf2M,EADY,QAERC,QACNkE,KAAMC,QAAQ,2BAEC,KADT3D,EAAQyJ,EAAM3I,WAAU,SAAAzE,GAAI,OAAIA,EAAK9B,MAAQ3H,QAEjD6W,EAAMzI,OAAOhB,EAAO,IACdW,EAFU,YAEA8I,IACZ5I,OAAM,SAACxE,EAAM2D,GACf,OAAI3D,EAAK9B,MAAQ3H,IACf+N,EAAIK,OAAOhB,EAAO,IACX,MAIXyS,EAAe,CACblY,KAAM,EACNzH,KAAM,IACNsB,MAAO,OAIXsP,KAAMmD,MAAN,UAAetH,EAAIuH,SAAS5H,KAAK0E,MAtBnB,2CAAH,sDA0BToN,GAAQ,uCAAG,WAAO3J,GAAP,eAAA/H,EAAA,0DAEA,IADDmK,EAAM3I,WAAU,SAAAzE,GAAI,OAAIA,EAAKgL,UAAYA,KADxC,gCAGG3F,GAAuB2F,GAH1B,OAIM,OADf9H,EAHS,QAILC,QACNkK,EAAS,CAACnK,EAAIL,KAAK0E,KAAX,mBAAmB6F,KAC3BgJ,EAAelT,EAAIL,KAAK0E,MACA,MAAfrE,EAAIC,OACbiT,EAAelT,EAAIL,KAAK0E,KAExBF,KAAMmD,MAAN,UAAetH,EAAIL,KAAK0E,MAVb,2CAAH,sDAeRiN,GAAQ,uCAAG,WAAOxU,GAAP,mBAAAiD,EAAA,0DACXjD,EADW,0CAGUqF,GAAuBrF,GAHjC,OAGPyK,EAHO,OAIX4C,EAAS,CAAC5C,EAAS5H,KAAK0E,KAAhB,mBAAwB6F,KAChCgJ,EAAe3L,EAAS5H,KAAK0E,KALlB,gDAOXF,KAAMmD,MAAN,gDAAe,KAAKC,gBAApB,iBAAe,EAAe5H,YAA9B,aAAe,EAAqB0E,MAPzB,yDAAH,sDAYRkN,GAAa,SAACoC,IACP,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAAS3Y,QAAT,OAAiBoP,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAapP,OAChC+B,EAAO2E,KAAK,YAAZ,OAAyB0I,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAapP,IAAtC,OAA2C2Y,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAS3Y,KACpDkY,EAAeS,IAEjBT,EAAeS,GACfN,GAAkB,IAGdtF,GAAM,uCAAG,4BAAAhO,EAAA,6DACTH,EAAS9D,aAAaC,QAAQ,UADrB,SAEPgB,EAAO2E,KAAK,SAAU9B,GAFf,OAGb9D,aAAa8X,QACbC,OAAOC,SAASC,SAJH,2CAAH,qDAON9D,GAAa,SAACnT,GAClBmW,GAAS,IAuCX,OApCAzT,oBAAS,sBAAC,8BAAAO,EAAA,yDACJlE,EAAQC,aAAaC,QAAQ,SACjCoX,EAAmB,OAAVtX,GACK,OAAVA,GAAmBkX,EAHf,iCAIUvF,KAJV,UAKa,OADfxN,EAJE,QAKEC,OALF,wBAMJ+S,GAAiB,GACjBlX,aAAa2X,QAAQ,SAAUzT,EAAIL,KAAK0E,IAAIrJ,KAC5C+Q,EAAQ/L,EAAIL,KAAK0E,KARb,UASQlC,KATR,QAUe,OADnBnC,EATI,QAUIC,QAAgBkK,EAASnK,EAAIL,KAAK0E,KAClB,IAApBrE,EAAIL,KAAKnJ,QACX0c,EAAelT,EAAIL,KAAK0E,IAAI,IAE9BtH,EAAO2E,KAAK,QAAS7F,GACrBkB,EAAOiX,KAAK,aAAa,kBAAMlB,GAAW,MAftC,4CAkBP,CAACtR,EAAM0I,EAAO6I,IAEjBvT,qBAAU,WACJ4K,GACFrN,EAAO2E,KAAK,WAAY0I,KAEzB,CAACA,IAEJ5K,oBAAS,sBAAC,4BAAAO,EAAA,0DACJ+P,EADI,gCAEU3N,GAAoB2N,GAF9B,OAGa,OADf9P,EAFE,QAGEC,SAA6B,OAAXmK,QAAW,IAAXA,OAAA,EAAAA,EAAapP,OAAQ8U,IAC7C3F,EAAS,CAACnK,EAAIL,KAAK0E,KAAX,mBAAmB6F,EAAMpS,QAAO,SAAAmc,GAAE,OAAIA,EAAGjZ,MAAQgF,EAAIL,KAAK0E,IAAIrJ,UACtEkY,EAAe9I,IALX,2CAQP,CAAC0F,IAGF,qBAAK7E,UAAU,MAAf,SACG8H,EACC,qBAAKjf,MAAO,CAAEG,SAAU,WAAYG,MAAO,OAAQqB,OAAQ,QAA3D,SACE,sBAAK3B,MAAO,CAAE2B,OAAQ,OAAQzB,QAAS,QAAvC,UACE,sBAAKF,MAAOA,EAAMI,KAAlB,UACE,cAAC,GAAD,CAAUsN,KAAMA,EAAMuM,OAAQA,KAC7BqF,GAAkB,cAAC,GAAD,CAAYhJ,YAAaA,EAAaF,MAAOA,EAAOoH,SAAUA,GAAU3L,UAAWA,EAAW4L,WAAYA,GAAYtB,WAAYA,GAAYyB,iBAAkB2B,KACjLD,GAAkB,cAAC,GAAD,CAAa9B,SAAUA,GAAUG,SAAUA,GAAUC,iBAAkB2B,KACzFD,GAAkB,cAAC,GAAD,CAAWhJ,YAAaA,EAAaF,MAAOA,EAAOoH,SAAUA,GAAUxB,cAAeA,EAAe7F,iBAAkBA,EAAkBtE,UAAWA,EAAW4L,WAAYA,GAAYtB,WAAYA,QAExN7F,EAAc,qBAAKtW,MAAOA,EAAMiB,MAAlB,SACb,cAAC,GAAD,CAAYgI,OAAQA,EAAQD,KAAMsN,EAAaF,MAAOA,EAAOC,SAAUA,EAAUF,iBAAkBA,EAAkBxH,MAAOkD,MACrH,cAAC,GAAD,SAEJ,cAAC,GAAD,CAAO7S,QAASA,EAAS2Y,MAAOA,EAAOC,QAASpE,EAAOqE,YAAaC,OC1MrFsI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dd767abd.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nrequire('dotenv').config()\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst storage = firebase.storage()\r\n\r\nexport { storage, firebase as default }\r\n","import SendIcon from '@material-ui/icons/Send'\r\nimport { useState } from 'react'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { TextField, FormControl, InputAdornment } from \"@material-ui/core\"\r\n\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\n\r\nimport { storage } from \"../../firebase/index\"\r\nimport { Icon } from '@iconify/react'\r\n\r\nconst Input = ({ setDialogs }) => {\r\n    const [message, setMessage] = useState('')\r\n    const [showEmoji, setShowEmoji] = useState(false)\r\n    const [files, setFiles] = useState([]);\r\n    const [urls, setUrls] = useState([]);\r\n    const [previewImage, setPreviewImage] = useState([{ id: null, url: null, name: null, fileUrl: null }]);\r\n\r\n    const limit = useMediaQuery({ maxWidth: 900 })\r\n    const limit2 = useMediaQuery({ maxWidth: 600 })\r\n    const style = {\r\n        input: {\r\n            display: 'block',\r\n            position: 'relative',\r\n            // right: '-16px',\r\n            // bottom: '16px',\r\n            // borderSizing: 'border-box',\r\n            left: '10px',\r\n            top: '20px',\r\n            width: '108%',\r\n\r\n        },\r\n\r\n        textField: {\r\n            width: limit2 ? '60%' : limit ? '70%' : '90%',\r\n            // width: '90%',\r\n            fontSize: 'x-large',\r\n            outline: 'none',\r\n            paddingLeft: '20px',\r\n            paddingBottom: '10px',\r\n            paddingTop: '10px',\r\n            marginLeft: '30px',\r\n            backgroundColor: 'transparent',\r\n            color: '#FDFDFD',\r\n        },\r\n\r\n        send: {\r\n            position: 'absolute',\r\n            right: 10,\r\n            cursor: 'pointer',\r\n            color: '#6082B6',\r\n            fontSize: '30px',\r\n        },\r\n\r\n        attach: {\r\n            position: 'absolute',\r\n            right: 100,\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        image: {\r\n            position: 'absolute',\r\n            right: 50,\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        icons: {\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            left: -45,\r\n            color: '#6082B6',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        file: {\r\n            color: '#6082B6',\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            cursor: 'pointer',\r\n            right: 45,\r\n            // left: 12,\r\n            bottom: 14\r\n        },\r\n\r\n        fileImage: {\r\n            color: '#6082B6',\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            cursor: 'pointer',\r\n            right: 50,\r\n            // left: 12,\r\n            bottom: 14\r\n        },\r\n\r\n        preview: {\r\n            zIndex: 1,\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '200px',\r\n            right: '1px',\r\n            bottom: '60px',\r\n            background: '#6588DE',\r\n            boxShadow: '0px 8px 40px rgba(0, 72, 251, 0.3)',\r\n            borderRadius: '14px',\r\n            padding: '20px',\r\n            display: 'flex',\r\n            // justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n\r\n        thumbnail: {\r\n            width: '100px',\r\n            height: '100px',\r\n            borderRadius: '10px'\r\n        },\r\n\r\n        deletePreviewIcon: {\r\n            color: 'red',\r\n            fontSize: '20px',\r\n            cursor: 'pointer',\r\n            position: 'relative',\r\n            top: '-56px',\r\n        },\r\n\r\n        fileName: {\r\n            position: 'relative',\r\n            left: '50px',\r\n            top: '5px',\r\n            color: 'white'\r\n        },\r\n\r\n        addFile: {\r\n            display: 'grid',\r\n            placeItems: 'center',\r\n            position: 'relative',\r\n            bottom: 18,\r\n            left: 18,\r\n            width: '100px',\r\n            height: '100px',\r\n            borderRadius: '10px',\r\n            border: '1px dashed #F9FBFB',\r\n            boxSizing: 'border-box',\r\n            // bottom: '10px'\r\n        },\r\n\r\n        addIcon: {\r\n            fontSize: '50px',\r\n            color: '#F9FBFB',\r\n        }\r\n    }\r\n\r\n    const handleEmojiSelect = (e) => { setMessage((message) => (message += e.native)) }\r\n\r\n    const deletePreview = (id) => {\r\n        setPreviewImage(previewImage.filter(item => item.id !== id))\r\n        // setPreviewFile(previewFile.filter(item => item.id !== id))\r\n        setFiles(files.filter(item => item.id !== id))\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        // convert to base64\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n            const newFile = e.target.files[i]\r\n            newFile[\"id\"] = Math.random()\r\n            let fileUrl = ''\r\n            let name = ''\r\n            // check file type is not image\r\n            if (newFile.type.split('/')[0] !== 'image') {\r\n                fileUrl = 'file.png'\r\n                name = `file ${i + 1}`\r\n            } else {\r\n                fileUrl = null\r\n                name = `image ${i + 1}`\r\n            }\r\n\r\n\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(newFile)\r\n            reader.onloadend = () => {\r\n                setPreviewImage((prevState) => [...prevState, { id: newFile[\"id\"], url: reader.result, name, fileUrl }])\r\n            }\r\n            setFiles((prevState) => [...prevState, newFile])\r\n        }\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        if (message.length > 0 || files.length > 0) {\r\n            const promises = []\r\n            files.map((file) => {\r\n                const promise = new Promise((resolve, reject) => {\r\n                    const metadata = {\r\n                        contentType: file.type\r\n                    }\r\n                    const storageRef = storage.ref(`files/${file.name}`)\r\n                    storageRef.put(file, metadata).then((snapshot) => {\r\n                        snapshot.ref.getDownloadURL().then((url) => {\r\n                            resolve(url)\r\n                        })\r\n                    })\r\n                })\r\n                promises.push(promise)\r\n            })\r\n            Promise.all(promises).then((urls) => {\r\n                setUrls((prevState) => [...prevState, urls])\r\n                setDialogs(message, urls)\r\n            })\r\n        }\r\n        // setPreviewFile([])\r\n        setPreviewImage([])\r\n        setFiles([])\r\n    }\r\n    const PreviewSelectedFiles = () => {\r\n        if (previewImage) {\r\n            return (\r\n                <div style={style.preview}>\r\n                    {previewImage.map((item) => {\r\n                        return (\r\n                            <div key={item.id}>\r\n                                <Icon onClick={() => deletePreview(item.id)} style={style.deletePreviewIcon} icon=\"ep:circle-close\" />\r\n                                <img style={style.thumbnail} src={item.fileUrl ? item.fileUrl : item.url} alt=\"thumb\" />\r\n                                <p style={style.fileName}>{item.name}</p>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div style={style.addFile}>\r\n                        <label htmlFor=\"files\"><Icon style={style.addIcon} icon=\"carbon:add-alt\" /></label>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={style.input}>\r\n            <FormControl fullWidth sx={{ m: 1 }}>\r\n                <TextField\r\n                    style={style.textField}\r\n                    value={message}\r\n                    onKeyUp={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                            sendMessage()\r\n                            setMessage('')\r\n                        }\r\n                    }}\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    placeholder='Type a new message...'\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position='end'>\r\n                                {/* <SendIcon\r\n                                    onClick={() => {\r\n                                        sendMessage()\r\n                                        setMessage('')\r\n                                    }}\r\n                                    color='primary'\r\n                                    fontSize='large'\r\n                                    style={style.send}\r\n                                /> */}\r\n                                <Icon onClick={() => {\r\n                                    sendMessage()\r\n                                    setMessage('')\r\n                                }}\r\n\r\n                                    style={style.send} icon=\"akar-icons:send\" />\r\n\r\n                                <Icon icon=\"fluent:emoji-24-regular\" style={style.icons} onClick={() => { setShowEmoji(!showEmoji) }}></Icon>\r\n                                <label htmlFor=\"files\"><Icon style={style.fileImage} icon=\"akar-icons:image\" /></label>\r\n                                <input id=\"files\" style={{ visibility: \"hidden\" }} type=\"file\" multiple onChange={handleImageChange} />\r\n                                {/* <label htmlFor=\"files\"><Icon style={style.file} icon=\"eva:attach-fill\" /></label>\r\n                                <input id=\"files\" style={{ visibility: \"hidden\" }} type=\"file\" accept=\".pdf, .txt, .docx\" multiple onChange={handleFileChange} /> */}\r\n                                {files.length > 0 && <PreviewSelectedFiles />}\r\n                                {showEmoji && (\r\n                                    <div style={{ position: \"fixed\", bottom: \"80px\", left: \"20%\", zIndex: \"1\" }}>\r\n                                        <Picker\r\n                                            onSelect={handleEmojiSelect}\r\n                                            emojiSize={20} />\r\n                                    </div>\r\n                                )}\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import EmojiEmotionsOutlinedIcon from '@material-ui/icons/EmojiEmotionsOutlined';\r\nimport { useState } from 'react'\r\n\r\nconst Emoji = ({ dialog, react, self }) => {\r\n    const [show, setShow] = useState(false)\r\n\r\n    const style = {\r\n        emoji: {\r\n            borderRadius: '50%',\r\n            padding: '1px',\r\n            cursor: 'pointer',\r\n            transition: 'background 300ms ease-out',\r\n        },\r\n\r\n        emojiList: {  \r\n            display: 'flex',\r\n            position: 'absolute',\r\n            top: -16,\r\n            right: self ? 2 : 'none',\r\n            flexDirection: self ? 'row-reverse' : 'row',\r\n        },\r\n\r\n        allEmoji: { \r\n            position: 'relative',   \r\n        }\r\n    }\r\n\r\n    const setEmoji = () => {\r\n        if (show)\r\n            setShow(false)\r\n        else\r\n            setShow(true)\r\n    }\r\n\r\n    const reaction = (reactionId) => {\r\n        react(reactionId, dialog._id)\r\n    }\r\n\r\n    return (\r\n        <div  style={style.allEmoji} onMouseLeave={() => setShow(false)}>\r\n            {\r\n                show && <div style={style.emojiList}>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(1)}>❤️</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(2)}>😂</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(3)}>😮</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(4)}>😢</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(5)}>😠</div>\r\n                    <div style={{fontSize: '15px', cursor:'pointer'}} onClick={() => reaction(6)}>👍</div>\r\n                </div>\r\n            }\r\n            <EmojiEmotionsOutlinedIcon\r\n                style={style.emoji}\r\n                onClick={() => setEmoji()}\r\n            ></EmojiEmotionsOutlinedIcon>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emoji","const EmojiIcon = ({emojiIndex}) => {\r\n    const style = {\r\n        marginRight: '2px',\r\n        cursor: 'pointer',\r\n        fontSize: 'small'\r\n    }\r\n    const GetEmoji = () => {\r\n        switch (emojiIndex)\r\n        {\r\n            case 1:\r\n                return <div style={style}>❤️</div>\r\n            case 2:\r\n                return <div style={style}>😂</div>\r\n            case 3:\r\n                return <div style={style}>😮</div>\r\n            case 4:\r\n                return <div style={style}>😢</div>\r\n            case 5:\r\n                return <div style={style}>😠</div>\r\n            case 6:\r\n                return <div style={style}>👍</div>\r\n        }\r\n    }\r\n    return (\r\n        <GetEmoji></GetEmoji>\r\n    )\r\n}\r\n\r\nexport default EmojiIcon","import axios from 'axios';\r\nrequire('dotenv').config()\r\n\r\nconst fetchClient = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL || '',\r\n});\r\n\r\nconst beforeRequest = (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        Object.assign(config.headers, { Authorization: `Bearer ${token}` });\r\n    }\r\n    return config;\r\n};\r\n\r\nfetchClient.interceptors.request.use(beforeRequest);\r\n\r\nexport { fetchClient };","import { fetchClient } from './fetch';\r\n\r\nconst getReactionsByMessage = (id) => fetchClient.get(`/reaction/retrieve`, id);\r\n\r\nexport const reactionService = {\r\n    getReactionsByMessage\r\n};","// import Avatar from '@material-ui/core/Avatar'\r\nimport { useState, useEffect } from 'react'\r\nimport Emoji from '../Emoji/Emoji';\r\nimport EmojiIcon from '../Emoji/EmojiIcon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PushPinIcon from '@mui/icons-material/PushPin';\r\nimport moment from 'moment';\r\nimport { reactionService } from \"../../service/reaction\"\r\nimport { Avatar } from 'antd';\r\n\r\n\r\nconst Icons = ({ reactions, self }) => {\r\n\r\n    const style = {\r\n        icons: {\r\n            display: 'flex',\r\n            position: 'absolute',\r\n            right: self && 0,\r\n            left: !self && 0,\r\n            bottom: -9,\r\n            borderRadius: '25px',\r\n            backgroundColor: '#aaa',\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={style.iconsInfo}>\r\n            <div style={style.icons}>\r\n                {reactions?.map((reaction) => {\r\n                    if (reaction.from.length !== 0) {\r\n                        return <EmojiIcon key={reaction?.reaction_type} emojiIndex={reaction?.reaction_type}></EmojiIcon>\r\n                    }\r\n                    return null\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Dialog = ({ dialog, onDelete, room, socket }) => {\r\n    const [widget, setWidget] = useState(false)\r\n    const [enter, setEnter] = useState(false)\r\n    const [reactions, setReaction] = useState([])\r\n    const [self, setSelf] = useState(null)\r\n    const [showTime, setShowTime] = useState(false)\r\n    const [selfAndCreator, setSelfAndCreator] = useState(null)\r\n    const [fileNumber, setFileNumber] = useState(0)\r\n\r\n    const style = {\r\n        dialogDiv: {\r\n            width: '95%',\r\n            position: 'relative',\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'row',\r\n            marginLeft: '20px',\r\n            marginRight: '20px',\r\n            alignItems: 'flex-start',\r\n            padding: '0px',\r\n            marginBottom: '30px',\r\n        },\r\n\r\n        bubble: {\r\n            backgroundColor: self ? '#32a6b8' : '#c27f67',\r\n            color: '#ffffff',\r\n            padding: '5px 10px',\r\n            margin: '0px',\r\n            borderRadius: '25px',\r\n            maxWidth: '100%',\r\n            position: 'relative',\r\n        },\r\n\r\n        avatar: {\r\n            position: 'relative',\r\n            marginTop: '15px',\r\n            background: `#${dialog.from.color}`,\r\n            flexShrink: 0,\r\n        },\r\n\r\n        widget: {\r\n            flexShrink: 0,\r\n            opacity: widget ? 1 : 0,\r\n            transition: 'opacity 250ms',\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'flex',\r\n            flexShrink: 0,\r\n        },\r\n\r\n        widgetItem: {\r\n            cursor: 'pointer',\r\n            borderRadius: '50%',\r\n        },\r\n\r\n        deleteIcon: {\r\n            borderRadius: '50%',\r\n            padding: '1px',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        pinIcon: {\r\n            borderRadius: '50%',\r\n            padding: '1px',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: self ? 'flex-end' : 'flex-start',\r\n            rowGap: '1em',\r\n            padding: '10px',\r\n            borderRadius: '14px',\r\n        },\r\n\r\n        reply: {\r\n            display: 'block',\r\n        },\r\n\r\n        dialogDivInfoNameTime: {\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'flex',\r\n            alignItems: 'baseline',\r\n            width: '100%',\r\n            marginBottom: '-10px',\r\n        },\r\n        dialogDivInfoName: {\r\n            fontFamily: 'Poppins',\r\n            color: '#52585D',\r\n            fontSize: '20px',\r\n            fontWeight: '600',\r\n            marginLeft: self ? '10px' : '0px',\r\n        },\r\n        dialogDivInfoTime: {\r\n            fontFamily: 'Poppins',\r\n            opacity: showTime ? 1 : 0,\r\n            transition: 'opacity 250ms',\r\n            color: '#52585D',\r\n            fontSize: '16px',\r\n            marginLeft: self ? '0px' : '10px',\r\n        },\r\n\r\n        dialogDivInfoMessageWidget: {\r\n            display: 'flex',\r\n            flexDirection: self ? 'row-reverse' : 'flex',\r\n        },\r\n\r\n        dialogDivInfoMessage: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: self ? 'flex-end' : 'flex-start',\r\n            margin: '0xp',\r\n        },\r\n\r\n        dialogDivInfoFiles: {\r\n            display: 'grid',\r\n            gridTemplateColumns: fileNumber === 1 ? 'repeat(1, 1fr)' : fileNumber == 2 ? 'repeat(2, 1fr)' : 'repeat(3, 1fr)',\r\n            gap: '10px',\r\n        },\r\n\r\n        des: {\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '150px',\r\n            workBreak: 'break-word',\r\n        }\r\n    }\r\n\r\n    const react = (reaction_id, id) => {\r\n        let userId = localStorage.getItem('userId')\r\n        const tmp = [...reactions]\r\n        let pre_react = 0\r\n\r\n        tmp.every(react => {\r\n            const index = react.from.findIndex(user => user.userId === userId)\r\n            if (index !== -1) {\r\n                react.from.splice(index, 1)\r\n                pre_react = react.reaction_type\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n\r\n        if (pre_react !== reaction_id) {\r\n            const index = tmp.findIndex(react => react.reaction_type === reaction_id)\r\n            if (index !== -1) {\r\n                tmp[index].from.push({ userId: userId, username: ' ' })\r\n            } else {\r\n                tmp.push({\r\n                    reaction_type: reaction_id,\r\n                    from: [{\r\n                        userId: userId,\r\n                        username: ' '\r\n                    }]\r\n                })\r\n            }\r\n        }\r\n\r\n        setReaction([...tmp])\r\n\r\n        socket.emit('get-reaction', dialog, reaction_id, userId, room._id)\r\n    }\r\n\r\n    const setPin = () => {\r\n        socket.emit('set-pin', dialog, room._id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('return-reaction', (return_dialog) => {\r\n            if (dialog._id === return_dialog._id) {\r\n                setReaction(return_dialog.data)\r\n            }\r\n        })\r\n\r\n        if (self === null) {\r\n            let userId = localStorage.getItem('userId')\r\n            setSelf(userId === dialog.from.userId)\r\n            if (userId === room.creator)\r\n                setSelfAndCreator(true)\r\n        }\r\n\r\n        return () => {\r\n            socket.off('return-reaction')\r\n        }\r\n    }, [dialog])\r\n\r\n\r\n    useEffect(async () => {\r\n        let res = await reactionService.getReactionsByMessage({ id: dialog._id })\r\n        if (res.status === 200)\r\n            setReaction(res.data.reactions.data)\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setFileNumber(dialog.urls.length)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={style.dialogDiv} onMouseEnter={() => setShowTime(true)} onMouseLeave={() => setShowTime(false)}>\r\n            {!self && <Avatar size={60} style={style.avatar} src={dialog.from.avatar}></Avatar>}\r\n            {self && <Avatar size={60} style={style.avatar} src={dialog.from.avatar}></Avatar>}\r\n            <div style={style.container} onMouseEnter={() => setWidget(true)} onMouseLeave={() => setWidget(false)}>\r\n                {self && <div style={style.dialogDivInfoNameTime}>\r\n                    <div style={style.dialogDivInfoName}>{dialog.from.username}</div>\r\n                    <div style={style.dialogDivInfoTime}>{moment(dialog.createdAt).calendar()}</div>\r\n                </div>}\r\n                {!self && <div style={style.dialogDivInfoNameTime}>\r\n                    <div style={style.dialogDivInfoName}>{dialog.from.username}</div>\r\n                    <div style={style.dialogDivInfoTime}>{moment(dialog.createdAt).calendar()}</div>\r\n                </div>}\r\n\r\n                <div style={style.dialogDivInfoMessageWidget}>\r\n                    <div style={style.dialogDivInfoMessage}>\r\n                        {dialog.content && <p style={style.bubble}>{dialog.content}</p>}\r\n                        <Icons reactions={reactions} self={self} />\r\n                        <div style={style.dialogDivInfoFiles}>\r\n                            {\r\n                                dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                    let format = url.split('.').pop().split('?')[0]\r\n                                    if (format === 'mp4') {\r\n                                        return (\r\n                                            <video key={index} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} style={{ width: '500px', marginBottom: '10px', transition: '1s' }} controls>\r\n                                                <source src={url} type=\"video/mp4\" />\r\n                                            </video>\r\n                                        )\r\n                                    } else if (format === 'pdf') {\r\n                                        return (\r\n                                            <a style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                <img src='https://firebasestorage.googleapis.com/v0/b/chat-cord-712bf.appspot.com/o/default-avatar%2Fpdf_file_icon.png?alt=media&token=f12bd4a4-9d41-4096-9596-b3dfeb8d24b5' style={{ width: '50px', marginBottom: '10px', marginRight: '10px' }} />\r\n                                                <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                            </a>\r\n                                        )\r\n                                    } else if (format === 'docx' || format === 'doc') {\r\n                                        return (\r\n                                            <a style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                <img src='https://firebasestorage.googleapis.com/v0/b/chat-cord-712bf.appspot.com/o/default-avatar%2Fdocx_file_icon.png?alt=media&token=8c3eeb46-718b-4277-862f-da3236fb6182' style={{ width: '50px', marginBottom: '10px', marginRight: '10px', }} />\r\n                                                <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                            </a>\r\n                                        )\r\n                                    }\r\n                                    else if (format === 'jpg' || format === 'png' || format === 'jpeg') {\r\n                                        return (\r\n                                            <img key={index} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} src={url} style={{ width: '100%', height: '150px', objectFit: 'cover', marginBottom: '10px', transition: '1s' }} />\r\n                                        )\r\n                                    }\r\n                                })\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={style.widget}>\r\n                        <Emoji dialog={dialog} react={react} self={self}></Emoji>\r\n                        <PushPinIcon style={style.pinIcon} onClick={() => {\r\n                            setPin()\r\n                        }}></PushPinIcon>\r\n                        {(self || selfAndCreator) &&\r\n                            <DeleteIcon\r\n                                style={style.deleteIcon}\r\n                                onClick={() => onDelete(dialog, room.creator)}\r\n                            >\r\n                            </DeleteIcon>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog","import Dialog from './Dialog'\r\nimport { useEffect, useRef } from 'react'\r\n// import { padding } from '@mui/system'\r\n\r\nconst Dialogs = ({socket, room, dialogs, deleteMessage}) => {\r\n    const style = {\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '77vh',\r\n        overflow: 'auto',\r\n        margin: '10px 0px 0px 10px',\r\n    }\r\n\r\n    const MessEnding = useRef(null)\r\n\r\n    useEffect(() => {\r\n        MessEnding.current.scrollIntoView({ behavior: 'smooth' })\r\n    }, [dialogs])\r\n\r\n    return (\r\n        <div style={style}>\r\n            {dialogs?.map((dialog) => {\r\n                return <Dialog key={dialog._id} socket={socket} dialog={dialog} onDelete={deleteMessage} room={room}></Dialog>\r\n            })}\r\n            <div ref={MessEnding} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import { fetchClient } from './fetch';\r\n\r\nconst getRooms = () => fetchClient.get('/room/retrieve');\r\nconst getRoom = (id) => fetchClient.get(`/room/${id}`);\r\nconst createRoom = (room) => fetchClient.post('/room/create', room);\r\nconst updateRoom = (id, room) => fetchClient.put(`/room/${id}`, room);\r\nconst attendRoom = (id) => fetchClient.post(`/room/${id}/attend`);\r\nconst addMember = (id, user) => fetchClient.post(`/room/${id}/addMember`, user);\r\nconst leaveRoom = (id) => fetchClient.post(`/room/${id}/leave`);\r\nconst getMembers = (id) => fetchClient.get(`/room/${id}/members`);\r\n\r\nexport const roomService = {\r\n    getRooms,\r\n    getRoom,\r\n    createRoom,\r\n    updateRoom,\r\n    attendRoom,\r\n    addMember,\r\n    leaveRoom,\r\n    getMembers\r\n};","import { Input, Select, Avatar, Drawer, Tabs, Space, Form, Switch, Button } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport copy from 'copy-to-clipboard';\r\nimport { toast } from 'react-toastify'\r\nimport { Icon } from '@iconify/react';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { storage } from \"../firebase/index\"\r\nimport { roomService } from \"../service/room\"\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst ChatHeader = ({ userOnlines, room, dialogs, leave, socket }) => {\r\n    const [users, setUsers] = useState([])\r\n    const [currentRoom, setRoom] = useState(room)\r\n    const [visible, setVisible] = useState(false)\r\n    const [updateVisible, setUpdateVisible] = useState(false)\r\n    const [pinnedMessage, setPinnedMessage] = useState(false);\r\n    const [showPinnedMessage, setShowPinnedMessage] = useState(false);\r\n    var user = []\r\n    const [roomAvatarPreview, setRoomAvatarPreview] = useState(null)\r\n    const [roomAvatar, setRoomAvatar] = useState()\r\n    const currentUser = localStorage.getItem('userId')\r\n    const [roomUpdateInfo, setRoomUpdateInfo] = useState({\r\n        name: '',\r\n        description: '',\r\n        isPrivate: room.isPrivate,\r\n        avatar: '',\r\n    })\r\n    const [isPrivate, setIsPrivate] = useState(room.isPrivate)\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n    const handleEditInfo = () => {\r\n        setUpdateVisible(!updateVisible);\r\n    }\r\n\r\n    const handleUpdateRoomAvatar = (e) => {\r\n        const newRoomAvatar = e.target.files[0]\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(newRoomAvatar)\r\n        reader.onloadend = () => {\r\n            setRoomAvatarPreview(reader.result)\r\n        }\r\n        setRoomAvatar(newRoomAvatar)\r\n    }\r\n\r\n\r\n    const handleUpdateRoomInfo = async () => {\r\n        let roomUpdateInfo_ = roomUpdateInfo\r\n        if (roomAvatar) {\r\n            const metadata = {\r\n                contentType: roomAvatar.type\r\n            }\r\n            const storageRef = storage.ref(`roomAvatars/${roomAvatar.name}`)\r\n            const snapshot = await storageRef.put(roomAvatar, metadata)\r\n            const url = await snapshot.ref.getDownloadURL()\r\n            roomUpdateInfo_.avatar = url\r\n        }\r\n        let res = await roomService.updateRoom(room?._id, roomUpdateInfo_)\r\n        if (res.status === 200)\r\n            toast.success(res?.data?.msg)\r\n        setRoomAvatarPreview(roomUpdateInfo.avatar)\r\n        setRoomAvatar(null)\r\n        setUpdateVisible(false)\r\n    }\r\n\r\n    const style = {\r\n        chatHeader: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: '50px',\r\n            backgroundColor: '#6588DE',\r\n            height: '20px',\r\n            width: '100%',\r\n            margin: '0px 0px 0px 10px',\r\n            position: 'relative',\r\n        },\r\n\r\n        pinMessageContainer: {\r\n            // opacity: showPinnedMessage || room?.pinnedMessages?.length > 0 ? 1 : 0,\r\n            position: 'absolute',\r\n            backgroundColor: '#E3F6FC',\r\n            bottom: '-67px',\r\n            left: '0px',\r\n            zIndex: '1',\r\n            width: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '10px',\r\n        },\r\n\r\n        pinMessageIcon: {\r\n\r\n        },\r\n\r\n        chatInfo: {\r\n            margin: '5px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        chatName: {\r\n            margin: '0px',\r\n            fontSize: '20px',\r\n            fontWeight: 'bold',\r\n            color: '#FDFDFE',\r\n        },\r\n\r\n        numberOfUser: {\r\n            margin: '0px',\r\n            fontSize: '14px',\r\n            color: '#F2F6F7',\r\n        },\r\n\r\n        chatTool: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            gap: '10px',\r\n\r\n        },\r\n\r\n        tuneIcon: {\r\n            cursor: 'pointer',\r\n            fontSize: '20px',\r\n        },\r\n\r\n        roomInfo: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n\r\n        roomTitle: {\r\n            marginBottom: '30px',\r\n            fontWeight: 600,\r\n            fontSize: '18px',\r\n            lineHeight: '27px',\r\n            color: '#6588DE',\r\n        },\r\n\r\n        roomAvatar: {\r\n            marginBottom: '20px',\r\n            border: '4px solid #' + room.color,\r\n            borderRadius: '115px',\r\n        },\r\n\r\n        roomName: {\r\n            marginBottom: '6px',\r\n            fontWeight: 600,\r\n            fontSize: '16px',\r\n            lineHeight: '24px',\r\n            color: '#6588DE',\r\n        },\r\n\r\n        roomDescription: {\r\n            marginBottom: '20px',\r\n            fontSize: '12px',\r\n            lineHeight: '150.5%',\r\n            color: '#52585D',\r\n        },\r\n\r\n        roomShortId: {\r\n            cursor: 'pointer',\r\n            fontSize: '20px',\r\n            marginBottom: '30px',\r\n        },\r\n\r\n        line: {\r\n            width: '280px',\r\n            height: '0px',\r\n            borderBottom: '1px solid #D0D9DF',\r\n            marginBottom: '20px',\r\n        },\r\n\r\n        media: {\r\n            height: '400px',\r\n            overflowY: 'auto',\r\n            display: 'block',\r\n        },\r\n\r\n        mediaGrid: {\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(3, 1fr)',\r\n            gap: '10px',\r\n            maxWidth: '100%',\r\n        },\r\n\r\n        file: {\r\n            display: 'flex',\r\n            height: '400px',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n        },\r\n\r\n        members: {\r\n            display: 'flex',\r\n            height: '400px',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            gap: '10px',\r\n            overflowY: 'auto',\r\n        },\r\n\r\n        member: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'flex-end',\r\n            gap: '10px',\r\n        },\r\n\r\n\r\n        leaveRoom: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            cursor: 'pointer',\r\n            fontSize: '20px',\r\n            borderRadius: '8px',\r\n            alignItems: 'center',\r\n            gap: '11px',\r\n            border: '1px solid #6588DE',\r\n            height: '39px',\r\n        },\r\n\r\n        leaveRoomIcon: {\r\n            color: '#6588DE',\r\n            with: '18px',\r\n            height: '20px',\r\n            marginLeft: '14px',\r\n        },\r\n\r\n        leaveRoomText: {\r\n            margin: '0px',\r\n            with: '72px',\r\n            fontWeight: 500,\r\n            fontSize: '12px',\r\n            lineHeight: '18px',\r\n            color: '#6588DE'\r\n        },\r\n\r\n        avatar: {\r\n            position: 'relative',\r\n        },\r\n\r\n        dot: {\r\n            position: 'absolute',\r\n            bottom: '6px',\r\n            right: '3px',\r\n            height: '8px',\r\n            width: '8px',\r\n            borderRadius: '50%',\r\n            backgroundColor: '#46D362',\r\n        },\r\n\r\n        des: {\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '320px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        infoIcon: {\r\n            position: 'relative',\r\n            top: '5px'\r\n        },\r\n\r\n        buttonEditDrawer: {\r\n            border: 'none',\r\n            backgroundColor: '#E3F6FC',\r\n            color: '#6588DE',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        buttonUpdateDrawer: {\r\n            position: 'relative',\r\n            left: '50%',\r\n            marginRight: '5px',\r\n        },\r\n\r\n        roomAvatarEdit: {\r\n            width: 'fit-content',\r\n            display: 'block',\r\n            margin: 'auto',\r\n            border: '4px solid #' + room.color,\r\n            borderRadius: '115px',\r\n            cursor: 'pointer',\r\n        },\r\n\r\n        plusIconContainer: {\r\n            width: 55,\r\n            height: 55,\r\n            borderRadius: '50%',\r\n            border: '1px dashed #6ECB63',\r\n            display: 'grid',\r\n            placeItems: 'center',\r\n            backgroundColor: 'rgb(227, 246, 252)'\r\n        },\r\n\r\n        plusIcon: {\r\n            fontSize: '20px',\r\n        },\r\n\r\n        removeIcon: {\r\n            fontSize: '18px',\r\n            color: '#E74C3C',\r\n        },\r\n\r\n        submitButton: {\r\n            borderRadius: '5px'\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const { Option } = Select;\r\n\r\n    const selectBefore = (\r\n        <Select defaultValue=\"Message\">\r\n            <Option value=\"Message\">Message</Option>\r\n            <Option value=\"User\">User</Option>\r\n        </Select>\r\n    );\r\n\r\n    useEffect(async () => {\r\n        setRoom(room)\r\n        if (room?._id !== -1) {\r\n            let res = await roomService.getMembers(room?._id)\r\n            if (res.status === 200)\r\n                setUsers(res.data.msg)\r\n        }\r\n        room?.pinnedMessages?.length > 0 && setShowPinnedMessage(true)\r\n    }, [room])\r\n\r\n    useEffect(() => {\r\n        socket.on('new-pinned-message', (dialog, roomId, r) => {\r\n            if (roomId === room._id) {\r\n                if (r.pinnedMessages.length === 0)\r\n                    setShowPinnedMessage(false)\r\n                else {\r\n                    setShowPinnedMessage(true)\r\n                    setPinnedMessage(r.pinnedMessages.at(-1))\r\n                }\r\n            }\r\n        })\r\n    }, [room])\r\n\r\n    const copyToClipboard = () => {\r\n        copy(room?.shortId)\r\n        toast.success('Copied to clipboard')\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        user = []\r\n        for (let i = 0; i < values.usersList.length; i++) {\r\n            user.push(values.usersList[i].first)\r\n        }\r\n        try {\r\n            let res = await roomService.addMember(room?._id, { emails: user.join(',') })\r\n            if (res.status === 200) {\r\n                toast.success(res.data.msg)\r\n            }\r\n        } catch (e) {\r\n            toast.error(`${e.response.data.msg}`)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={style.chatHeader}>\r\n                <div style={style.chatInfo} onClick={showDrawer}>\r\n                    <p style={style.chatName}>{room?.name} <Icon style={style.infoIcon} icon=\"ant-design:info-circle-outlined\" /></p>\r\n                    <p style={style.numberOfUser}>{users?.length + ' members'}</p>\r\n                </div>\r\n                <div style={style.chatTool}>\r\n                    <Input style={style.input} autoComplete='off' addonBefore={selectBefore} placeholder=\"Type user or a message you what to search...\" />\r\n                </div>\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    onClose={onClose}\r\n                    visible={visible}\r\n                    extra={\r\n                        <Space>\r\n                            <button onClick={handleEditInfo} style={style.buttonEditDrawer}>Edit</button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <div style={style.roomInfo}>\r\n                        <div style={style.roomTitle}>Room Info</div>\r\n                        {!updateVisible && <div style={style.roomAvatar}><Avatar size={200} src={room.avatar}></Avatar></div>}\r\n                        {updateVisible &&\r\n                            <div>\r\n                                <label style={style.roomAvatarEdit} htmlFor=\"roomAvatar\"><Avatar size={200} src={roomAvatarPreview ? roomAvatarPreview : room.avatar}></Avatar></label>\r\n                                <input id=\"roomAvatar\" style={{ visibility: \"hidden\" }} accept='image' type=\"file\" onChange={handleUpdateRoomAvatar} />\r\n                            </div>\r\n                        }\r\n                        {!room.isPrivate && <div style={style.roomShortId} onClick={copyToClipboard}>{room?.shortId}</div>}\r\n                        <div style={style.roomName}>{room?.name}</div>\r\n                        <div style={style.roomDescription}>{room?.description}</div>\r\n                        <div style={style.line}></div>\r\n                    </div>\r\n                    {updateVisible ?\r\n                        <Form\r\n                            labelCol={{ span: 10 }}\r\n                            wrapperCol={{ span: 20 }}\r\n                            onFinish={handleUpdateRoomInfo}\r\n                        >\r\n                            <Form.Item label=\"Room name\" rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input room name!'\r\n                                },\r\n                            ]}>\r\n                                <Input defaultValue={room.name} onChange={(e) => setRoomUpdateInfo({ ...roomUpdateInfo, name: e.target.value })} />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"Description\" rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input room description!'\r\n                                },\r\n                            ]}>\r\n                                <Input defaultValue={room.description} onChange={(e) => setRoomUpdateInfo({ ...roomUpdateInfo, description: e.target.value })} />\r\n                            </Form.Item>\r\n\r\n                            {\r\n                                currentUser == room.creator && <Form.Item label=\"Mode\">\r\n                                    <Switch defaultChecked={isPrivate} checkedChildren=\"Private\" unCheckedChildren=\"Public\" onClick={(e) => { setIsPrivate(pre => !pre); setRoomUpdateInfo(prevRoomUpdateInfo => { return ({ ...prevRoomUpdateInfo, isPrivate: !prevRoomUpdateInfo.isPrivate }) }) }} />\r\n                                </Form.Item>\r\n                            }\r\n\r\n                            <Form.Item wrapperCol={{ offset: 10, span: 16 }}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Save\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                        :\r\n                        <Tabs style={{ marginBottom: '25px' }} defaultActiveKey=\"1\">\r\n                            <TabPane tab=\"Images\" key=\"1\">\r\n                                <div style={style.media}>\r\n                                    <div style={style.mediaGrid}>\r\n                                        {\r\n                                            dialogs.map(dialog => {\r\n                                                return dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                                    let format = url.split('.').pop().split('?')[0]\r\n                                                    if (format === 'jpg' || format === 'png' || format === 'jpeg') {\r\n                                                        return <img src={url} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} style={{ width: '100%', height: '100px', objectFit: 'cover', marginBottom: '10px', transition: '1s' }} />\r\n                                                    }\r\n                                                })\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </TabPane>\r\n                            <TabPane tab=\"Videos\" key=\"2\">\r\n                                <div style={style.media}>\r\n                                    <div style={style.mediaGrid}>\r\n                                        {\r\n                                            dialogs.map(dialog => {\r\n                                                return dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                                    let format = url.split('.').pop().split('?')[0]\r\n                                                    if (format === 'mp4') {\r\n                                                        return (\r\n                                                            <video key={index} onClick={(e) => { e.target.classList.toggle(\"zoom\") }} style={{ width: '100%', height: '100px', objectFit: 'cover', marginBottom: '10px', transition: '1s' }} controls>\r\n                                                                <source src={url} type=\"video/mp4\" />\r\n                                                            </video>\r\n                                                        )\r\n                                                    }\r\n                                                })\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </TabPane>\r\n                            <TabPane tab=\"Files\" key=\"3\">\r\n                                <div style={style.file}>\r\n                                    {\r\n                                        dialogs.map(dialog => {\r\n                                            return dialog.urls.length > 0 && dialog.urls.map((url, index) => {\r\n                                                let format = url.split('.').pop().split('?')[0]\r\n                                                if (format === 'pdf') {\r\n                                                    return (\r\n                                                        <a style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                            <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                                        </a>\r\n                                                    )\r\n                                                } else if (format === 'docx') {\r\n                                                    return (\r\n                                                        <a style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }} key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                            <p style={style.des}>{url.split('%2F').pop().split('?')[0]}</p>\r\n                                                        </a>\r\n                                                    )\r\n                                                }\r\n                                            })\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </TabPane>\r\n                            <TabPane tab=\"Members\" key=\"4\">\r\n                                <div style={style.members}>\r\n                                    {\r\n                                        ((currentUser == room.creator && room.isPrivate) || !room.isPrivate) &&\r\n                                        <Form name=\"add user dynamic form\" autoComplete=\"off\" onFinish={onFinish}>\r\n                                            <Form.List name=\"usersList\">\r\n                                                {(fields, { add, remove }) => (\r\n                                                    <>\r\n                                                        {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                                                            <Space key={key} style={{ display: 'flex', marginBottom: 2 }} align=\"baseline\">\r\n                                                                <Form.Item\r\n                                                                    {...restField}\r\n                                                                    name={[name, 'first']}\r\n                                                                    fieldKey={[fieldKey, 'first']}\r\n                                                                    rules={[{ type: 'email', required: true, message: 'Email is required!' }]}\r\n                                                                >\r\n                                                                    <Input placeholder=\"Email\" />\r\n                                                                </Form.Item>\r\n                                                                <Icon style={style.removeIcon} icon=\"gg:remove\" onClick={() => remove(name)} />\r\n                                                                {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\r\n                                                            </Space>\r\n                                                        ))}\r\n                                                        <Form.Item>\r\n                                                            <Button onClick={() => add()} block style={style.plusIconContainer}><Icon style={style.plusIcon} icon=\"carbon:add\" /></Button>\r\n                                                        </Form.Item>\r\n                                                    </>\r\n                                                )}\r\n                                            </Form.List>\r\n                                            <Form.Item>\r\n                                                <Button style={style.submitButton} type='primary' htmlType=\"submit\">\r\n                                                    Add\r\n                                                </Button>\r\n                                            </Form.Item>\r\n                                        </Form>\r\n                                    }\r\n                                    {\r\n                                        users?.map((user, index) => {\r\n                                            return (\r\n                                                <div key={index} style={style.member}>\r\n                                                    <div style={style.avatar}>\r\n                                                        <Avatar style={{ backgroundColor: '#' + user?.color }} size={50} src={user?.avatar}></Avatar>\r\n                                                        {userOnlines.includes(user?._id) && <span style={style.dot}></span>}\r\n                                                    </div>\r\n                                                    <p style={{ fontSize: '16px' }}>{user?.fullname}</p>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    }\r\n                    {!updateVisible &&\r\n                        <div style={style.leaveRoom}>\r\n                            <Icon style={style.leaveRoomIcon} icon=\"pepicons:leave\" />\r\n                            <p style={style.leaveRoomText} onClick={() => {\r\n                                onClose()\r\n                                leave(room._id)\r\n                            }\r\n                            }>Leave Room</p>\r\n                        </div>\r\n                    }\r\n                </Drawer>\r\n                {showPinnedMessage && <div style={style.pinMessageContainer}>\r\n                    <Icon style={style.pinMessageIcon} icon=\"bi:pin-angle-fill\" />\r\n                    <div style={style.pinMessageInfo}>\r\n                        <div style={style.pinMessageTitle}>Pinned message</div>\r\n                        <div style={style.pinMessageContent}>\r\n                            <Avatar style={style.pinMessageAvatar} src={pinnedMessage ? pinnedMessage?.avatar : room?.pinnedMessages?.at(-1)?.avatar}></Avatar>\r\n                            <div>\r\n                                <p style={style.pinMessageName}>{pinnedMessage ? pinnedMessage?.username : room?.pinnedMessages?.at(-1)?.username}</p>\r\n                                <p style={style.pinMessageContentText}>{pinnedMessage ? pinnedMessage?.message : room?.pinnedMessages?.at(-1)?.message}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ChatHeader","import { fetchClient } from './fetch';\r\n\r\nconst getMessages = (id) => fetchClient.get(`message/room/${id}`);\r\n\r\nexport const messageService = {\r\n    getMessages\r\n};","import Input from \"./Message/Input\"\r\nimport Dialogs from \"./Message/Dialogs\"\r\nimport ChatHeader from \"./ChatHeader\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { messageService } from \"../service/message\"\r\n\r\nconst ChatWindow = ({ socket, room, setLastMsgRoomId, rooms, setRooms, leave }) => {\r\n    const [dialogs, setDialogs] = useState([])\r\n    const [currentRoom, setRoom] = useState(room)\r\n    const [newMessage, setNewMessage] = useState(null)\r\n    const [userOnlines, setUserOnlines] = useState([])\r\n\r\n    const dialogsUpdate = (message, urls) => {\r\n        socket.emit('chat', message, urls, localStorage.getItem('userId'), room._id)\r\n    }\r\n\r\n    const deleteMessage = (dialog, creator) => {\r\n        let userId = localStorage.getItem('userId')\r\n        if (dialog.from.userId === userId || creator === userId) {\r\n            const temp = [...dialogs]\r\n            temp.every((d, index) => {\r\n                if (d._id === dialog._id) {\r\n                    temp.splice(index, 1)\r\n                    return false\r\n                }\r\n                return true\r\n            })\r\n            setDialogs([...temp])\r\n            socket.emit('delete', dialog._id, room)\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        setRoom(room)\r\n        if (room?._id !== -1)\r\n        {\r\n            let res = await messageService.getMessages(room?._id)\r\n            if (res.status === 200) {\r\n                setDialogs(res.data.msg)\r\n            }\r\n        }\r\n    }, [room])\r\n\r\n    useEffect(() => {\r\n        socket.on('your_new_message', (dialog, ctRoom) => {\r\n            setLastMsgRoomId(ctRoom)\r\n            setLastMsgRoomId('')\r\n            if (ctRoom === room?._id)\r\n                setNewMessage(dialog)\r\n        })\r\n        socket.on('dialog-deleted', (id) => {\r\n            const temp = [...dialogs]\r\n            temp.every((d, index) => {\r\n                if (d._id === id) {\r\n                    temp.splice(index, 1)\r\n                    return false\r\n                }\r\n                return true\r\n            })\r\n            setDialogs([...temp])\r\n        })\r\n        return () => {\r\n            socket.off('your_new_message')\r\n            socket.off('dialog-deleted')\r\n        }\r\n    }, [dialogs, socket])\r\n\r\n    useEffect(() => {\r\n        if (newMessage) {\r\n            setDialogs([...dialogs, newMessage])\r\n        }\r\n    }, [newMessage])\r\n\r\n    useEffect(() => {\r\n        socket.on('loggedIn', (users) => {\r\n            setUserOnlines([...users])\r\n        })\r\n\r\n        socket.on('loggedOut', (users) => {\r\n            setUserOnlines([...users])\r\n        })\r\n\r\n        return () => {\r\n            socket.off('loggedIn')\r\n            socket.off('loggedOut')\r\n        }\r\n\r\n    }, [userOnlines,socket])\r\n\r\n    return (\r\n        <div>\r\n            <ChatHeader userOnlines={userOnlines} room={room} dialogs={dialogs} leave={leave} socket={socket} />\r\n            <div>\r\n                <Dialogs room={currentRoom} socket={socket} dialogs={dialogs} setDialogs={setDialogs} deleteMessage={deleteMessage} ></Dialogs>\r\n                <Input room={currentRoom} setDialogs={dialogsUpdate} socket={socket}></Input>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatWindow","import { useEffect, useState } from 'react'\r\nimport './Intro.css'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nconst Intro = () => {\r\n    const [begin, setBegin] = useState(false)\r\n\r\n    const limit = useMediaQuery({maxWidth: 1300})\r\n\r\n    const style = {\r\n        container: {\r\n            position: 'absolute',\r\n            left: '10em',\r\n            top: '-2.5em',\r\n            display: limit ? 'none' : 'block'\r\n        },\r\n\r\n        text: {\r\n            fontSize: '30px',\r\n            color: 'cyan',\r\n            fontWeight: 'bold',\r\n            transform: begin ? 'translate(200px, 0)' : 'none',\r\n            opacity: begin ? 1 : 0,\r\n            fontFamily: 'Comfortaa',\r\n            transition: 'transform 1000ms ease-out, opacity 800ms'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setBegin(true)\r\n        }, 2000)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={style.container}>\r\n            <p className='intro-text'>Chatcord</p>\r\n            <p style={style.text}>...connect people around the world</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro","import { fetchClient } from './fetch';\r\n\r\nconst login = (user) => fetchClient.post('/auth/login', user);\r\nconst register = (user) => fetchClient.post('/auth/register', user);\r\nconst verify = (user) => fetchClient.post('/auth/verify', user);\r\n\r\nexport const authService = {\r\n    login,\r\n    register,\r\n    verify\r\n};","import TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { useState } from 'react';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Intro from '../Intro/Intro'\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { authService } from '../../service/auth'\r\n\r\ntoast.configure({\r\n    autoClose: 2000,\r\n    draggable: false,\r\n    position: toast.POSITION.BOTTOM_RIGHT\r\n})\r\n\r\nconst Login = ({ logIn, invalid, errorToggle, message }) => {\r\n    const [error, setError] = useState(false)\r\n    const [user, setUser] = useState({ email: '', fullname: '', username: '', password: '' })\r\n    const [hover, setHover] = useState(false)\r\n    const [verifyUser, setUserVerify] = useState({ email: '', code: '' })\r\n    const [formId, setFormId] = useState('login')\r\n\r\n    const limit = useMediaQuery({ maxWidth: 1300 })\r\n    const style = {\r\n        textField: {\r\n            display: 'block',\r\n            marginBottom: '20px',\r\n        },\r\n\r\n        div: {\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: 'linear-gradient(135deg, rgba(88,63,243,1) 0%, rgba(255,77,0,0.7962535355939251) 100%)',\r\n        },\r\n\r\n        button: {\r\n            width: '100%',\r\n            background: '#000000',\r\n            color: '#ffffff',\r\n            height: '3em',\r\n            marginBottom: '1em'\r\n        },\r\n\r\n        loginForm: {\r\n            width: '350px',\r\n            overflow: 'hidden',\r\n            background: '#ffffff',\r\n            padding: '50px 0px 30px 0px',\r\n            borderRadius: '10px',\r\n            height: '550px',\r\n            maxWidth: '350px',\r\n            transition: 'max-width 200ms'\r\n        },\r\n\r\n        signupForm: {\r\n            width: '350px',\r\n            overflow: 'hidden',\r\n            background: '#ffffff',\r\n            padding: '50px 0px 30px 0px',\r\n            borderRadius: '10px',\r\n            height: '650px',\r\n            maxWidth: '350px',\r\n            transition: 'max-width 200ms',\r\n        },\r\n\r\n        header: {\r\n            fontWeight: 'bold',\r\n            fontSize: '40px',\r\n            marginBottom: '1.5em',\r\n            fontFamily: 'Roboto'\r\n        },\r\n\r\n        createAccount: {\r\n            fontWeight: 'bold',\r\n            cursor: 'pointer',\r\n            color: hover ? '#555555' : '#000000',\r\n            transition: 'color 300ms'\r\n        },\r\n\r\n        buttons: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            margin: 'auto',\r\n            width: '50%',\r\n            paddingTop: '2em',\r\n            marginBottom: '4em'\r\n        },\r\n\r\n        forms: {\r\n            textAlign: 'center',\r\n            position: 'absolute',\r\n            right: limit ? 0 : '10em',\r\n            left: limit ? 0 : 'auto',\r\n            margin: 'auto',\r\n            top: '5em',\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n        },\r\n\r\n        alertText: {\r\n            color: 'red',\r\n            fontWeight: 'bold',\r\n        },\r\n\r\n        alert: {\r\n            color: '#ff0000',\r\n            opacity: invalid ? 1 : 0,\r\n            transition: 'opacity 250ms'\r\n        }\r\n    }\r\n\r\n    const registation = async () => {\r\n        try {\r\n            let result = await authService.register(user)\r\n            toast.success(`${result.data.msg}`)\r\n            setFormId('verify')\r\n        } catch (error) {\r\n            setError(true)\r\n            toast.error(`${error.response.data.msg}`)\r\n        }\r\n    }\r\n\r\n    const verify = async () => {\r\n        let result = await authService.verify(verifyUser)\r\n        if (result.status === 200) {\r\n            toast.success(`${result.data.msg}`)\r\n            setFormId('login')\r\n        }\r\n        else {\r\n            toast.error(`${error.response.data.msg}`,)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={style.div}>\r\n            <Intro />\r\n            <div style={style.forms}>\r\n                {/* Login Form */}\r\n                {formId === 'login' && <form autoComplete='off' noValidate style={style.loginForm}>\r\n                    <h1 style={style.header}>LOGIN</h1>\r\n                    <TextField\r\n                        required\r\n                        value={user.email}\r\n                        id='input-with-icon-textfield'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n                        placeholder='email'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.password}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n                        onKeyUp={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                logIn(user)\r\n                            }\r\n                        }}\r\n                        placeholder='password'\r\n                        type='password'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n                    <h4 style={style.alert}>Something went wrong</h4>\r\n                    <div style={style.buttons}>\r\n                        <Button style={style.button} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            logIn(user)\r\n                        }}>Log in</Button>\r\n                    </div>\r\n\r\n                    <p style={style.createAccount}\r\n                        onMouseEnter={() => setHover(true)}\r\n                        onMouseLeave={() => setHover(false)}\r\n                        onClick={e => {\r\n                            e.preventDefault()\r\n                            setUser({ email: '', password: '' })\r\n                            // setAccount(false)\r\n                            setFormId('signup')\r\n                            // errorToggle(false)\r\n                        }}\r\n                    >Create account ?</p>\r\n                </form>}\r\n\r\n\r\n                {/* verify */}\r\n                {formId === 'verify' && <form autoComplete='off' noValidate style={style.loginForm}>\r\n                    <h1 style={style.header}>Verify</h1>\r\n                    <TextField\r\n                        required\r\n                        value={verifyUser.email}\r\n                        id='input-with-icon-textfield'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUserVerify({ ...verifyUser, email: e.target.value })}\r\n                        placeholder='email'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUserVerify({ ...verifyUser, code: e.target.value })}\r\n                        placeholder='verify code'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    {error ? <h4 style={style.alert}>Something went wrong</h4> : null}\r\n                    <div style={style.buttons}>\r\n                        <Button style={style.button} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            verify()\r\n                        }}>Confirm</Button>\r\n                    </div>\r\n\r\n                    {/* <p style={style.createAccount}\r\n                        onMouseEnter={() => setHover(true)}\r\n                        onMouseLeave={() => setHover(false)}\r\n                        onClick={e => {\r\n                            e.preventDefault()\r\n                            setUser({ username: '', password: '' })\r\n                            setAccount(false)\r\n                            errorToggle(false)\r\n                        }}\r\n                    >Create account ?</p> */}\r\n                </form>}\r\n\r\n                {/* create account */}\r\n                {formId === 'signup' && <form autoComplete='off' noValidate style={style.signupForm}>\r\n                    <h1 style={style.header}>Create account</h1>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.email}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser(user => ({ ...user, email: e.target.value }))}\r\n                        placeholder='email'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.fullname}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser(user => ({ ...user, fullname: e.target.value }))}\r\n                        placeholder='fullname'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.username}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        onChange={(e) => setUser(user => ({ ...user, username: e.target.value }))}\r\n                        placeholder='username'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <PersonIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        value={user.password}\r\n                        id='standard-basic'\r\n                        style={style.textField}\r\n                        type='password'\r\n                        onChange={(e) => setUser(user => ({ ...user, password: e.target.value }))}\r\n                        placeholder='password'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n\r\n                    <TextField\r\n                        required\r\n                        error={error}\r\n                        id={error ? 'standard-error-helper-text' : 'standard-basic'}\r\n                        style={style.textField}\r\n                        type='password'\r\n                        onChange={(e) => {\r\n                            setError(e.target.value !== user.password)\r\n                        }}\r\n                        onKeyUp={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                registation()\r\n                            }\r\n                        }}\r\n                        placeholder='confirm password'\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <LockOutlinedIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n                    <div style={style.buttons}>\r\n                        <Button style={style.button} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            registation()\r\n                            setUserVerify({ email: user.email })\r\n                        }}>Create Account</Button>\r\n                        <Button style={{ background: '#ffffff', color: '#000000', border: '3px solid black' }} variant='contained' color='primary' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            setFormId('login')\r\n                        }}>Back</Button>\r\n                    </div>\r\n                </form>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import { fetchClient } from './fetch';\r\n\r\nconst getUser = () => fetchClient.get('/user/find');\r\nconst updateUser = (id, user) => fetchClient.put(`/user/${id}`, user);\r\nexport const userService = {\r\n    getUser,\r\n    updateUser\r\n};","import Avatar from '@material-ui/core/Avatar'\r\nimport { makeStyles } from \"@material-ui/core\"\r\n// import { useMediaQuery } from 'react-responsive'\r\nimport { Icon } from '@iconify/react'\r\nimport { useState } from 'react'\r\nimport { Modal, Form, Input, Avatar as UserAvatar, Button } from 'antd'\r\nimport { storage } from \"../../firebase/index\"\r\nimport { toast } from 'react-toastify'\r\nimport { userService } from \"../../service/user\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  },\r\n}))\r\n\r\nconst UserArea = ({ user, logout }) => {\r\n  const classes = useStyles()\r\n  const [updateVisible, setUpdateVisible] = useState(false)\r\n  const [userAvatarPreview, setUserAvatarPreview] = useState(null)\r\n  const [userInfo, setUserInfo] = useState({\r\n    fullname: '',\r\n    username: '',\r\n    avatar: '',\r\n    password: '',\r\n  })\r\n  const [userAvatar, setUserAvatar] = useState()\r\n\r\n  const handleEditUserInfo = () => {\r\n    setUpdateVisible(!updateVisible)\r\n  }\r\n\r\n  // TODO: update user info\r\n  const handleUpdateUserInfo = async () => {\r\n    let userInfoToUpdate = userInfo\r\n    if (userAvatar) {\r\n      const metadata = {\r\n        contentType: userAvatar.type\r\n      }\r\n      const storageRef = storage.ref(`userAvatars/${userAvatar.name}`)\r\n      const snapshot = await storageRef.put(userAvatar, metadata)\r\n      const url = await snapshot.ref.getDownloadURL()\r\n      userInfoToUpdate.avatar = url\r\n    }\r\n    try {\r\n      let res = await userService.updateUser(user?.id, userInfoToUpdate)\r\n      toast.success(res?.data?.msg)\r\n    } catch (err) {\r\n      toast.error(`${err?.response?.data?.msg}`)\r\n    }\r\n    setUserAvatarPreview(userInfo.avatar)\r\n    setUserAvatar(null)\r\n    setUpdateVisible(false)\r\n  }\r\n  const handleUpdateUserAvatar = (e) => {\r\n    const newUserAvatar = e.target.files[0]\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(newUserAvatar)\r\n    reader.onloadend = () => {\r\n      setUserAvatarPreview(reader.result)\r\n    }\r\n    setUserAvatar(newUserAvatar)\r\n  }\r\n  // const limit = useMediaQuery({ maxWidth: 1300 })\r\n\r\n  const style = {\r\n    userInformation: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      alignContent: 'flex-start',\r\n      justifyContent: 'flex-end',\r\n      height: '100px',\r\n      width: '100%',\r\n      backgroundColor: '#E3F6FC',\r\n      // borderRadius: '14px',\r\n      marginBottom: '10px',\r\n      // marginLeft: '10px',\r\n    },\r\n    avatar: {\r\n      fontSize: 'xx-large',\r\n      marginRight: '20px',\r\n      marginLeft: '20px',\r\n      background: '#' + user?.color,\r\n      cursor: 'pointer',\r\n    },\r\n    info: {\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'start',\r\n    },\r\n    fullname: {\r\n      fontFamily: 'Poppins',\r\n      fontStyle: 'normal',\r\n      fontWeight: '600',\r\n      fontSize: '20px',\r\n      /* identical to box height */\r\n      color: '#52585D',\r\n      margin: '0px',\r\n    },\r\n    username: {\r\n      fontStyle: 'normal',\r\n      fontFamily: 'Poppins',\r\n      padding: '5px 10px',\r\n      backgroundColor: '#6588DE',\r\n      borderRadius: '14px',\r\n      color: '#FFFFFF',\r\n      fontSize: '10px',\r\n\r\n    },\r\n\r\n    userAvaterEdit: {\r\n      width: 'fit-content',\r\n      display: 'block',\r\n      margin: 'auto',\r\n      border: '4px solid #' + user?.color,\r\n      borderRadius: '115px',\r\n      cursor: 'pointer',\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={style.userInformation}>\r\n      <Avatar onClick={handleEditUserInfo} style={style.avatar} className={classes.large} src={user?.avatar}></Avatar>\r\n\r\n\r\n      <Modal visible={updateVisible} closable={false} title=\"Update User Info\" onCancel={handleEditUserInfo} footer={null}>\r\n        {updateVisible &&\r\n          <div>\r\n            <label style={style.userAvaterEdit} htmlFor=\"userAvatar\"><UserAvatar size={200} src={userAvatarPreview ? userAvatarPreview : user.avatar}></UserAvatar></label>\r\n            <input id=\"userAvatar\" style={{ visibility: \"hidden\" }} accept='image/*' type=\"file\" onChange={handleUpdateUserAvatar} />\r\n          </div>\r\n        }\r\n        <Form\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          onFinish={handleUpdateUserInfo}\r\n        >\r\n          <Form.Item label=\"Full Name\" rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your full name!',\r\n            },\r\n          ]}>\r\n            <Input defaultValue={user?.fullname} onChange={(e) => setUserInfo({ ...userInfo, fullname: e.target.value })} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Username\" rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your username!',\r\n            },\r\n          ]}>\r\n            <Input defaultValue={user?.username} onChange={(e) => setUserInfo({ ...userInfo, username: e.target.value })} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" name=\"password\"\r\n            rules={[\r\n              {\r\n                pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/,\r\n                message: 'Password must be at least 6 characters, contain at least one uppercase letter, one lowercase letter, one number and one special character!',\r\n              }\r\n            ]}>\r\n            <Input.Password onChange={(e) => setUserInfo({ ...userInfo, password: e.target.value })} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Confirm Password\" name=\"confirm\"\r\n            rules={[\r\n              {\r\n                pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/,\r\n                message: 'Password must be at least 6 characters, contain at least one uppercase letter, one lowercase letter, one number and one special character!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <div style={style.info}>\r\n        <p style={style.fullname}>{user?.fullname}</p>\r\n        <p style={style.username}>{user?.username}</p>\r\n      </div>\r\n      <Icon icon=\"ion:log-out-outline\" style={{ fontSize: '30px', marginRight: '20px', marginLeft: '20px', cursor: 'pointer' }} onClick={logout} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserArea","// import Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport moment from 'moment';\r\nimport { Avatar } from 'antd';\r\nimport { Icon } from '@iconify/react';\r\nimport { roomService } from \"../../service/room\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10)\r\n    },\r\n\r\n    small: {\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6)\r\n    }\r\n}))\r\n\r\nconst Room = ({ room, onClick, lastMsgRoomId, setLastMsgRoomId, leaveHandle, roomManage, choosen }) => {\r\n    const classes = useStyles()\r\n    const [option, setOption] = useState(false)\r\n    const [hover, setHover] = useState(false)\r\n    const [lastMsg, setLastMsg] = useState('')\r\n    const [lastMsgTime, setLastMsgTime] = useState(null)\r\n    const [updateMsg, setUpdateMsg] = useState(false)\r\n    const limit = useMediaQuery({ maxWidth: 1300 })\r\n\r\n    const style = {\r\n        room_container: {\r\n            position: 'relative',\r\n            marginTop: '18px',\r\n        },\r\n\r\n        room: {\r\n            position: 'relative',\r\n            width: limit ? '12em' : '90%',\r\n            margin: 'auto',\r\n            background: (choosen || hover) ? '#6588DE' : '#E3F6FC',\r\n            padding: '10px',\r\n            borderRadius: '14px',\r\n            boxShadow: (choosen || hover) ? '0px 8px 40px rgba(0, 72, 251, 0.3)' : 'none',\r\n            overflow: 'hidden',\r\n            marginBottom: 10,\r\n            maxHeight: option ? limit ? '250px' : '220px' : '100px',\r\n            transition: 'max-height 250ms, border 250ms, background 250ms',\r\n            height: '74px',\r\n        },\r\n\r\n        roomInfo: {\r\n            margin: '0px',\r\n            padding: '0px',\r\n            display: 'flex',\r\n            cursor: 'pointer',\r\n            alignItems: 'center',\r\n            alignContent: 'center',\r\n            flexDirection: 'row',\r\n            gap: '10px',\r\n        },\r\n\r\n        avatar: {\r\n            fontSize: '20px',\r\n            flexShrink: 0,\r\n            background: '#' + room?.color,\r\n        },\r\n\r\n        roomMessage: {\r\n            flexGrow: '1',\r\n        },\r\n\r\n        roomMessageName: {\r\n            margin: '0px',\r\n            padding: '0px',\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            color: (choosen || hover) ? '#FDFDFE' : '#52585D',\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '150px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        roomMessageLastMessage: {\r\n            margin: '0px',\r\n            padding: '0px',\r\n            fontSize: '12px',\r\n            color: (choosen || hover) ? '#F2F6F7' : '#96A9BA',\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 1,\r\n            WebkitBoxOrient: 'vertical',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            width: '150px',\r\n            workBreak: 'break-word',\r\n        },\r\n\r\n        messageTime: {\r\n            color: (choosen || hover) ? '#FDFDFE' : '#96A9BA',\r\n        },\r\n\r\n        button: {\r\n            position: 'absolute',\r\n            fontSize: '50px',\r\n            color: '#5b5b5b',\r\n            right: '0.5em',\r\n            top: 40,\r\n            margin: 'auto',\r\n            transform: option ? 'rotate(90deg)' : 'none',\r\n            transition: 'transform 200ms'\r\n        },\r\n\r\n        roomOption: {\r\n            background: '#c4c4c4',\r\n            fontSize: 'large',\r\n            marginBottom: '0',\r\n            marginTop: '0.1em',\r\n            borderRadius: '5px',\r\n            cursor: 'pointer',\r\n            paddingLeft: '1em',\r\n        },\r\n\r\n        private: {\r\n            position: 'absolute',\r\n            fontSize: '30px',\r\n            right: 0,\r\n            top: 0,\r\n            color: '#52585D',\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (option && !choosen) {\r\n            setOption(false)\r\n        }\r\n        if (room?._id === lastMsgRoomId) {\r\n            let res = await roomService.getRoom(lastMsgRoomId)\r\n            if (res.status === 200) {\r\n                setLastMsg(res.data.msg.lastMessage)\r\n                setLastMsgTime(res.data.msg.lastMessageDate)\r\n                setUpdateMsg(true)\r\n            }\r\n        }\r\n    }, [choosen, lastMsgRoomId])\r\n\r\n    return (\r\n        <div style={style.room_container} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)}>\r\n            <div style={style.room}>\r\n                <div style={style.roomInfo} onClick={() => onClick(room)}>\r\n                    <Avatar size={56} style={style.avatar} src={room.avatar}></Avatar>\r\n                    <div style={style.roomMessage}>\r\n                        <p style={style.roomMessageName}>{room?.name}</p>\r\n                        <p style={style.roomMessageLastMessage}>{updateMsg ? lastMsg : room?.lastMessage}</p>\r\n                    </div>\r\n                    <span style={style.messageTime}>{moment(`${updateMsg ? lastMsgTime : room?.lastMessageDate}`).fromNow()}</span>\r\n                    {room.isPrivate && <Icon style={style.private} icon=\"ri:chat-private-line\" />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room","// import CreateRoom from \"./CreateRoom\"\r\nimport Room from \"../Room/Room\"\r\n\r\nconst RoomsList = ({rooms, joinRoom, leaveRoom, switchRoom, roomManage, currentRoom, lastMsgRoomId, setLastMsgRoomId}) => {\r\n    const style = {\r\n        roomList: {\r\n            overflow: 'auto',\r\n            width: '100%',\r\n            height: '77%',\r\n            backgroundColor: '#E3F6FC',\r\n            // borderRadius: '5px',\r\n            // marginLeft: '10px',\r\n        },\r\n    }\r\n\r\n    return (\r\n        <div style={style.roomList}>\r\n          {/* <CreateRoom joinRoom={joinRoom}></CreateRoom> */}\r\n          {rooms?.map((room) => {\r\n            return (\r\n              <Room key={room?._id} choosen={currentRoom?._id === room?._id} room={room} lastMsgRoomId={lastMsgRoomId} setLastMsgRoomId={setLastMsgRoomId} leaveHandle={leaveRoom} onClick={switchRoom} roomManage={roomManage}></Room>\r\n            )\r\n          })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomsList","/* eslint-disable no-unused-vars */\r\nimport { Icon } from '@iconify/react';\r\nimport { Modal, Button, Form, Input, Switch } from 'antd';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst RoomsHeader = ({ joinRoom, findRoom, handleSearchRoom }) => {\r\n    const [visibleCreate, setVisibleCreate] = useState(false)\r\n    const [visibleJoin, setVisibleJoin] = useState(false)\r\n    const [isPrivate, setIsPrivate] = useState(false)\r\n    const [room, setRoom] = useState({ name: '', description: '', isPrivate: false })\r\n\r\n    const [shortId, setShortId] = useState('')\r\n\r\n\r\n    const style = {\r\n        roomHeaderContainer: {\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n            alignItems: 'center',\r\n            backgroundColor: '#E3F6FC',\r\n            // borderRadius: '14px',\r\n            // marginBottom: '10px',\r\n            // marginLeft: '10px',\r\n            height: '10%',\r\n            padding: '10px',\r\n            width: '100%',\r\n        },\r\n        input: {\r\n            width: '100%',\r\n            outline: 'none',\r\n            fontSize: '1.2rem',\r\n            borderRadius: '8px',\r\n            height: '40px',\r\n            backgroundColor: '#FDFDFD',\r\n            border: '1px solid #6588DE',\r\n            boxSizing: 'border-box',\r\n            margin: '5px',\r\n            marginLeft: '15px',\r\n        },\r\n        add: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n        join: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n        addUser: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n    }\r\n\r\n    const showModalCreate = () => {\r\n        setVisibleCreate(true);\r\n    }\r\n\r\n    const hideModalCreate = () => {\r\n        setVisibleCreate(false);\r\n    }\r\n\r\n    const creatRoom = () => {\r\n        joinRoom(room)\r\n        hideModalCreate()\r\n    }\r\n\r\n    const showModalJoin = () => {\r\n        setVisibleJoin(true);\r\n    }\r\n\r\n    const hideModalJoin = () => {\r\n        setVisibleJoin(false);\r\n    }\r\n\r\n    const joinWithRoomId = () => {\r\n        findRoom(shortId)\r\n        hideModalJoin()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={style.roomHeaderContainer}>\r\n                <Icon style={style.add} icon=\"akar-icons:search\" onClick={handleSearchRoom} />\r\n                <Icon style={style.add} icon=\"akar-icons:chat-add\" onClick={showModalCreate} />\r\n                <Icon style={style.join} icon=\"fluent:chat-arrow-back-16-regular\" onClick={showModalJoin} />\r\n            </div>\r\n\r\n            <Modal title=\"Create room\" closable={false} visible={visibleCreate} footer={[\r\n                <Button onClick={hideModalCreate}>\r\n                    Cancel\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" onClick={creatRoom} >\r\n                    Create\r\n                </Button>,\r\n            ]}>\r\n                <Form name=\"control-hooks\">\r\n                    <Form.Item label=\"Room name\" name=\"roomName\" rules={[{ required: true }]} onChange={(e) => setRoom(room => ({ ...room, name: e.target.value }))}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Description\" name=\"description\" rules={[{ required: true }]} onChange={(e) => setRoom(room => ({ ...room, description: e.target.value }))}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Switch checkedChildren=\"Private\" unCheckedChildren=\"Public\" onChange={(e) => setRoom(room => ({ ...room, isPrivate: !isPrivate }))} />\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Modal title=\"Join room\" closable={false} visible={visibleJoin} footer={[\r\n                <Button onClick={hideModalJoin}>\r\n                    Cancel\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" onClick={joinWithRoomId} >\r\n                    Join\r\n                </Button>,\r\n            ]}>\r\n                <Form name=\"control-hooks\">\r\n                    <Form.Item label=\"Room ID\" name=\"roomShortId\" rules={[{ required: true }]} onChange={(e) => setShortId(e.target.value)}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default RoomsHeader","const Guide = () => {\r\n    const styles = {\r\n        guide: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '95%',\r\n            fontSize: '1.5em',\r\n            backgroundColor: 'rgb(227, 246, 252)',\r\n            margin: 'auto 20px',\r\n            borderRadius: '14px',\r\n        },\r\n    }\r\n    return (\r\n        <div style={styles.guide}>\r\n            <h1>pick a room to start <br></br> or create a new room</h1> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guide;","import { useState } from \"react\";\r\nimport { Icon } from '@iconify/react';\r\nimport RoomsList from \"../Rooms/RoomsList\";\r\nimport Room from \"../Room/Room\";\r\n\r\nconst SearchRoom = ({rooms, joinRoom, leaveRoom, switchRoom, roomManage, currentRoom, handleSearchRoom }) => {\r\n    const [resultRoom, setResultRoom] = useState([]);\r\n\r\n    const styles = {\r\n        inputSection: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n        },\r\n        input: {\r\n            width: '100%',\r\n            height: '40px',\r\n            borderRadius: '10px',\r\n            borderColor: '#6588DE',\r\n        },\r\n        searchRoom: {\r\n            width: \"100%\",\r\n            height: \"102%\",\r\n            overflowY: 'hidden'\r\n        },\r\n        add: {\r\n            color: '#6588DE',\r\n            fontSize: '60px',\r\n            margin: '2.5px 5px',\r\n            cursor: 'pointer',\r\n        },\r\n        \r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setResultRoom(rooms.filter(room => room.name.toLowerCase().includes(value.toLowerCase())));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={styles.searchRoom}>\r\n            <div style={styles.inputSection}>\r\n                <Icon style={styles.add} icon=\"bx:bx-arrow-back\" onClick={() => handleSearchRoom()}/>\r\n                <input style={styles.input} placeholder=\"search room\" onChange={handleChange} />\r\n            </div>\r\n            <RoomsList currentRoom={currentRoom} rooms={resultRoom} joinRoom={joinRoom} leaveRoom={leaveRoom} switchRoom={switchRoom} roomManage={roomManage} handleSearchRoom={handleSearchRoom} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchRoom;","/* eslint-disable no-unused-vars */\r\nimport { useState, useEffect } from 'react';\r\nimport '../src/App.css';\r\nimport io from 'socket.io-client';\r\nimport ChatWindow from \"./Components/ChatWindow\";\r\nimport Login from './Components/Login/Login';\r\nimport Loading from './Components/Loading';\r\nimport UserArea from \"./Components/UserInformation/UserArea\";\r\nimport RoomsList from \"./Components/Rooms/RoomsList\";\r\nimport RoomsHeader from \"./Components/Rooms/RoomsHeader\";\r\nimport Guide from './Components/Guide/Guide';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { toast } from 'react-toastify'\r\nimport SearchRoom from './Components/List/SearchRoom';\r\nimport { userService } from './service/user';\r\nimport { roomService } from './service/room';\r\nimport { authService } from './service/auth';\r\nrequire('dotenv').config()\r\n\r\nfunction App() {\r\n  const [connected, setConnect] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const [authenticated, setAuthenticated] = useState(false)\r\n  const [user, setUser] = useState(null)\r\n  const [roomPanel, setPanel] = useState(false)\r\n  const [currentRoom, setCurrentRoom] = useState({\r\n    _id: -1,\r\n    name: \" \",\r\n    color: ''\r\n  })\r\n  const [lastMsgRoomId, setLastMsgRoomId] = useState('')\r\n  const [rooms, setRooms] = useState([])\r\n  const [login, setLogin] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [showSearchRoom, setShowSearchRoom] = useState(false)\r\n  const [token, setToken] = useState('')\r\n\r\n  const socket = io.connect(process.env.REACT_APP_API_URL || '');\r\n\r\n  const limit = useMediaQuery({ maxWidth: 1300 })\r\n  const style = {\r\n    left: {\r\n      width: limit ? '15em' : '25%',\r\n      float: 'left',\r\n      boxSizing: 'border-box',\r\n    },\r\n\r\n    right: {\r\n      width: '100%',\r\n      height: '100%',\r\n      float: 'right',\r\n      position: 'relative',\r\n      flexGrow: 1,\r\n    },\r\n\r\n    userInformation: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      borderBottom: '2px solid #4a336e',\r\n      padding: '20px',\r\n      fontSize: 'large',\r\n      marginBottom: '10px',\r\n    },\r\n  }\r\n\r\n  const logIn = async (user) => {\r\n    let userId = ''\r\n    try {\r\n      const result = await authService.login(user)\r\n      toast.success('logged in successfully')\r\n      setAuthenticated(result.data.token !== null)\r\n      setError(result.data.token === null)\r\n      localStorage.setItem(\"token\", result.data.token);\r\n      userId = result.data.user._id\r\n    } catch (err) {\r\n      toast.error(`${err?.response?.data?.msg}`)\r\n    }\r\n    const listOfRooom = await roomService.getRooms()\r\n    setRooms(listOfRooom.data.msg)\r\n    if (listOfRooom.data.length !== 0)\r\n      setCurrentRoom(listOfRooom.data[0])\r\n    await socket.emit('login', userId)\r\n  }\r\n\r\n  const leaveRoom = async (id) => {\r\n    let res = await roomService.leaveRoom(id)\r\n    if (res.status === 200) {\r\n      toast.success('left room successfully')\r\n      const index = rooms.findIndex(room => room._id === id)\r\n      if (index !== -1) {\r\n        rooms.splice(index, 1)\r\n        const tmp = [...rooms]\r\n        tmp.every((room, index) => {\r\n          if (room._id === id) {\r\n            tmp.splice(index, 1)\r\n            return false\r\n          }\r\n          return true\r\n        })\r\n        setCurrentRoom({\r\n          _id: -1,\r\n          name: \" \",\r\n          color: ''\r\n        })\r\n      }\r\n    } else {\r\n      toast.error(`${res.response.data.msg}`)\r\n    }\r\n  }\r\n\r\n  const findRoom = async (shortId) => {\r\n    const index = rooms.findIndex(room => room.shortId === shortId)\r\n    if (index === -1) {\r\n      let res = await roomService.attendRoom(shortId)\r\n      if (res.status === 200) {\r\n        setRooms([res.data.msg, ...rooms])\r\n        setCurrentRoom(res.data.msg)\r\n      } else if (res.status === 400) {\r\n        setCurrentRoom(res.data.msg)\r\n      } else {\r\n        toast.error(`${res.data.msg}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  const joinRoom = async (room) => {\r\n    if (room) {\r\n      try {\r\n        let response = await roomService.createRoom(room)\r\n        setRooms([response.data.msg, ...rooms])\r\n        setCurrentRoom(response.data.msg)\r\n      } catch (err) {\r\n        toast.error(`${err?.response?.data?.msg}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  const switchRoom = (newRoom) => {\r\n    if (newRoom?._id !== currentRoom?._id) {\r\n      socket.emit('leaveRoom', currentRoom?._id, newRoom?._id)\r\n      setCurrentRoom(newRoom)\r\n    }\r\n    setCurrentRoom(newRoom)\r\n    setShowSearchRoom(false)\r\n  }\r\n\r\n  const logout = async () => {\r\n    let userId = localStorage.getItem(\"userId\")\r\n    await socket.emit('logout', userId)\r\n    localStorage.clear()\r\n    window.location.reload()\r\n  }\r\n\r\n  const roomManage = (room) => {\r\n    setPanel(true)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    let token = localStorage.getItem(\"token\")\r\n    setLogin(token !== null)\r\n    if (token !== null && !authenticated) {\r\n      let res = await userService.getUser()\r\n      if (res.status === 200) {\r\n        setAuthenticated(true)\r\n        localStorage.setItem(\"userId\", res.data.msg._id)\r\n        setUser(res.data.msg)\r\n        res = await roomService.getRooms()\r\n        if (res.status === 200) setRooms(res.data.msg)\r\n        if (res.data.length !== 0) {\r\n          setCurrentRoom(res.data.msg[0])\r\n        }\r\n        socket.emit('login', token)\r\n        socket.once('connected', () => setConnect(true))\r\n      }\r\n    }\r\n  }, [user, rooms, authenticated])\r\n\r\n  useEffect(() => {\r\n    if (currentRoom) {\r\n      socket.emit('joinRoom', currentRoom)\r\n    }\r\n  }, [currentRoom])\r\n\r\n  useEffect(async () => {\r\n    if (lastMsgRoomId) {\r\n      let res = await roomService.getRoom(lastMsgRoomId)\r\n      if (res.status === 200 && currentRoom?._id !== lastMsgRoomId) {\r\n        setRooms([res.data.msg, ...rooms.filter(el => el._id !== res.data.msg._id)])\r\n        setCurrentRoom(currentRoom)\r\n      }\r\n    }\r\n  }, [lastMsgRoomId])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {authenticated ?\r\n        <div style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n          <div style={{ height: '100%', display: 'flex' }}>\r\n            <div style={style.left}>\r\n              <UserArea user={user} logout={logout}></UserArea>\r\n              {showSearchRoom && <SearchRoom currentRoom={currentRoom} rooms={rooms} joinRoom={joinRoom} leaveRoom={leaveRoom} switchRoom={switchRoom} roomManage={roomManage} handleSearchRoom={setShowSearchRoom} />}\r\n              {!showSearchRoom && <RoomsHeader joinRoom={joinRoom} findRoom={findRoom} handleSearchRoom={setShowSearchRoom}></RoomsHeader>}\r\n              {!showSearchRoom && <RoomsList currentRoom={currentRoom} rooms={rooms} joinRoom={joinRoom} lastMsgRoomId={lastMsgRoomId} setLastMsgRoomId={setLastMsgRoomId} leaveRoom={leaveRoom} switchRoom={switchRoom} roomManage={roomManage} />}\r\n            </div>\r\n            {currentRoom ? <div style={style.right}>\r\n              <ChatWindow socket={socket} room={currentRoom} rooms={rooms} setRooms={setRooms} setLastMsgRoomId={setLastMsgRoomId} leave={leaveRoom}></ChatWindow>\r\n            </div> : <Guide></Guide>}\r\n          </div>\r\n        </div> : <Login message={message} logIn={logIn} invalid={error} errorToggle={setError}></Login>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}